"""
Indicates exactly one field must be supplied and this field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

input AdAvgOrderByAggregateInput {
  id: SortOrder
}

input AdCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input AdCreateInput {
  createdAt: DateTime
  updatedAt: DateTime
}

input AdCreateManyInput {
  createdAt: DateTime
  id: Int
  updatedAt: DateTime
}

input AdMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input AdMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input AdOrderByWithAggregationInput {
  _avg: AdAvgOrderByAggregateInput
  _count: AdCountOrderByAggregateInput
  _max: AdMaxOrderByAggregateInput
  _min: AdMinOrderByAggregateInput
  _sum: AdSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input AdOrderByWithRelationInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

enum AdScalarFieldEnum {
  createdAt
  id
  updatedAt
}

input AdScalarWhereWithAggregatesInput {
  AND: [AdScalarWhereWithAggregatesInput!]
  NOT: [AdScalarWhereWithAggregatesInput!]
  OR: [AdScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input AdSumOrderByAggregateInput {
  id: SortOrder
}

input AdUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AdUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AdWhereInput {
  AND: [AdWhereInput!]
  NOT: [AdWhereInput!]
  OR: [AdWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
}

input AdWhereUniqueInput {
  AND: [AdWhereInput!]
  NOT: [AdWhereInput!]
  OR: [AdWhereInput!]
  createdAt: DateTimeFilter
  id: Int
  updatedAt: DateTimeFilter
}

type Address {
  AddressComponents(cursor: AddressComponentWhereUniqueInput, distinct: [AddressComponentScalarFieldEnum!], orderBy: [AddressComponentOrderByWithRelationInput!], skip: Int, take: Int, where: AddressComponentWhereInput): [AddressComponent!]!
  Location(cursor: LocationWhereUniqueInput, distinct: [LocationScalarFieldEnum!], orderBy: [LocationOrderByWithRelationInput!], skip: Int, take: Int, where: LocationWhereInput): [Location!]!
  createdAt: DateTime!
  formattedAddress: String!
  id: ID!
  updatedAt: DateTime!
}

type AddressComponent {
  Address: Address
  addressId: String
  h3Index15: String
  id: ID!
  long_name: String!
  short_name: String!
  types: [String!]!
}

input AddressComponentAvgOrderByAggregateInput {
  id: SortOrder
}

input AddressComponentCountOrderByAggregateInput {
  addressId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  long_name: SortOrder
  short_name: SortOrder
  types: SortOrder
}

input AddressComponentCreateInput {
  Address: AddressCreateNestedOneWithoutAddressComponentsInput
  h3Index15: String
  long_name: String!
  short_name: String!
  types: [String!]
}

input AddressComponentCreateManyAddressInput {
  h3Index15: String
  id: Int
  long_name: String!
  short_name: String!
  types: [String!]
}

input AddressComponentCreateManyAddressInputEnvelope {
  data: [AddressComponentCreateManyAddressInput!]!
  skipDuplicates: Boolean
}

input AddressComponentCreateManyInput {
  addressId: String
  h3Index15: String
  id: Int
  long_name: String!
  short_name: String!
  types: [String!]
}

input AddressComponentCreateNestedManyWithoutAddressInput {
  connect: [AddressComponentWhereUniqueInput!]
  connectOrCreate: [AddressComponentCreateOrConnectWithoutAddressInput!]
  create: [AddressComponentCreateWithoutAddressInput!]
  createMany: AddressComponentCreateManyAddressInputEnvelope
}

input AddressComponentCreateOrConnectWithoutAddressInput {
  create: AddressComponentCreateWithoutAddressInput!
  where: AddressComponentWhereUniqueInput!
}

input AddressComponentCreateWithoutAddressInput {
  h3Index15: String
  long_name: String!
  short_name: String!
  types: [String!]
}

input AddressComponentCreatetypesInput {
  set: [String!]!
}

input AddressComponentListRelationFilter {
  every: AddressComponentWhereInput
  none: AddressComponentWhereInput
  some: AddressComponentWhereInput
}

input AddressComponentMaxOrderByAggregateInput {
  addressId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  long_name: SortOrder
  short_name: SortOrder
}

input AddressComponentMinOrderByAggregateInput {
  addressId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  long_name: SortOrder
  short_name: SortOrder
}

input AddressComponentOrderByRelationAggregateInput {
  _count: SortOrder
}

input AddressComponentOrderByWithAggregationInput {
  _avg: AddressComponentAvgOrderByAggregateInput
  _count: AddressComponentCountOrderByAggregateInput
  _max: AddressComponentMaxOrderByAggregateInput
  _min: AddressComponentMinOrderByAggregateInput
  _sum: AddressComponentSumOrderByAggregateInput
  addressId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  long_name: SortOrder
  short_name: SortOrder
  types: SortOrder
}

input AddressComponentOrderByWithRelationInput {
  Address: AddressOrderByWithRelationInput
  addressId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  long_name: SortOrder
  short_name: SortOrder
  types: SortOrder
}

enum AddressComponentScalarFieldEnum {
  addressId
  h3Index15
  id
  long_name
  short_name
  types
}

input AddressComponentScalarWhereInput {
  AND: [AddressComponentScalarWhereInput!]
  NOT: [AddressComponentScalarWhereInput!]
  OR: [AddressComponentScalarWhereInput!]
  addressId: StringNullableFilter
  h3Index15: StringNullableFilter
  id: IntFilter
  long_name: StringFilter
  short_name: StringFilter
  types: StringNullableListFilter
}

input AddressComponentScalarWhereWithAggregatesInput {
  AND: [AddressComponentScalarWhereWithAggregatesInput!]
  NOT: [AddressComponentScalarWhereWithAggregatesInput!]
  OR: [AddressComponentScalarWhereWithAggregatesInput!]
  addressId: StringNullableWithAggregatesFilter
  h3Index15: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  long_name: StringWithAggregatesFilter
  short_name: StringWithAggregatesFilter
  types: StringNullableListFilter
}

input AddressComponentSumOrderByAggregateInput {
  id: SortOrder
}

input AddressComponentUpdateInput {
  Address: AddressUpdateOneWithoutAddressComponentsNestedInput
  h3Index15: NullableStringFieldUpdateOperationsInput
  long_name: StringFieldUpdateOperationsInput
  short_name: StringFieldUpdateOperationsInput
  types: [String!]
}

input AddressComponentUpdateManyMutationInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  long_name: StringFieldUpdateOperationsInput
  short_name: StringFieldUpdateOperationsInput
  types: [String!]
}

input AddressComponentUpdateManyWithWhereWithoutAddressInput {
  data: AddressComponentUpdateManyMutationInput!
  where: AddressComponentScalarWhereInput!
}

input AddressComponentUpdateManyWithoutAddressNestedInput {
  connect: [AddressComponentWhereUniqueInput!]
  connectOrCreate: [AddressComponentCreateOrConnectWithoutAddressInput!]
  create: [AddressComponentCreateWithoutAddressInput!]
  createMany: AddressComponentCreateManyAddressInputEnvelope
  delete: [AddressComponentWhereUniqueInput!]
  deleteMany: [AddressComponentScalarWhereInput!]
  disconnect: [AddressComponentWhereUniqueInput!]
  set: [AddressComponentWhereUniqueInput!]
  update: [AddressComponentUpdateWithWhereUniqueWithoutAddressInput!]
  updateMany: [AddressComponentUpdateManyWithWhereWithoutAddressInput!]
  upsert: [AddressComponentUpsertWithWhereUniqueWithoutAddressInput!]
}

input AddressComponentUpdateWithWhereUniqueWithoutAddressInput {
  data: AddressComponentUpdateWithoutAddressInput!
  where: AddressComponentWhereUniqueInput!
}

input AddressComponentUpdateWithoutAddressInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  long_name: StringFieldUpdateOperationsInput
  short_name: StringFieldUpdateOperationsInput
  types: [String!]
}

input AddressComponentUpdatetypesInput {
  push: [String!]
  set: [String!]
}

input AddressComponentUpsertWithWhereUniqueWithoutAddressInput {
  create: AddressComponentCreateWithoutAddressInput!
  update: AddressComponentUpdateWithoutAddressInput!
  where: AddressComponentWhereUniqueInput!
}

input AddressComponentWhereInput {
  AND: [AddressComponentWhereInput!]
  Address: AddressWhereInput
  NOT: [AddressComponentWhereInput!]
  OR: [AddressComponentWhereInput!]
  addressId: StringNullableFilter
  h3Index15: StringNullableFilter
  id: IntFilter
  long_name: StringFilter
  short_name: StringFilter
  types: StringNullableListFilter
}

input AddressComponentWhereUniqueInput {
  AND: [AddressComponentWhereInput!]
  Address: AddressWhereInput
  NOT: [AddressComponentWhereInput!]
  OR: [AddressComponentWhereInput!]
  addressId: StringNullableFilter
  h3Index15: StringNullableFilter
  id: Int
  long_name: StringFilter
  short_name: StringFilter
  types: StringNullableListFilter
}

input AddressCountOrderByAggregateInput {
  createdAt: SortOrder
  formattedAddress: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input AddressCreateInput {
  AddressComponents: AddressComponentCreateNestedManyWithoutAddressInput
  Location: LocationCreateNestedManyWithoutAddressInput
  createdAt: DateTime
  formattedAddress: String!
  id: String
  updatedAt: DateTime
}

input AddressCreateManyInput {
  createdAt: DateTime
  formattedAddress: String!
  id: String
  updatedAt: DateTime
}

input AddressCreateNestedOneWithoutAddressComponentsInput {
  connect: AddressWhereUniqueInput
  connectOrCreate: AddressCreateOrConnectWithoutAddressComponentsInput
  create: AddressCreateWithoutAddressComponentsInput
}

input AddressCreateNestedOneWithoutLocationInput {
  connect: AddressWhereUniqueInput
  connectOrCreate: AddressCreateOrConnectWithoutLocationInput
  create: AddressCreateWithoutLocationInput
}

input AddressCreateOrConnectWithoutAddressComponentsInput {
  create: AddressCreateWithoutAddressComponentsInput!
  where: AddressWhereUniqueInput!
}

input AddressCreateOrConnectWithoutLocationInput {
  create: AddressCreateWithoutLocationInput!
  where: AddressWhereUniqueInput!
}

input AddressCreateWithoutAddressComponentsInput {
  Location: LocationCreateNestedManyWithoutAddressInput
  createdAt: DateTime
  formattedAddress: String!
  id: String
  updatedAt: DateTime
}

input AddressCreateWithoutLocationInput {
  AddressComponents: AddressComponentCreateNestedManyWithoutAddressInput
  createdAt: DateTime
  formattedAddress: String!
  id: String
  updatedAt: DateTime
}

input AddressMaxOrderByAggregateInput {
  createdAt: SortOrder
  formattedAddress: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input AddressMinOrderByAggregateInput {
  createdAt: SortOrder
  formattedAddress: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input AddressNullableRelationFilter {
  is: AddressWhereInput
  isNot: AddressWhereInput
}

input AddressOrderByWithAggregationInput {
  _count: AddressCountOrderByAggregateInput
  _max: AddressMaxOrderByAggregateInput
  _min: AddressMinOrderByAggregateInput
  createdAt: SortOrder
  formattedAddress: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input AddressOrderByWithRelationInput {
  AddressComponents: AddressComponentOrderByRelationAggregateInput
  Location: LocationOrderByRelationAggregateInput
  createdAt: SortOrder
  formattedAddress: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

enum AddressScalarFieldEnum {
  createdAt
  formattedAddress
  id
  updatedAt
}

input AddressScalarWhereWithAggregatesInput {
  AND: [AddressScalarWhereWithAggregatesInput!]
  NOT: [AddressScalarWhereWithAggregatesInput!]
  OR: [AddressScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  formattedAddress: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input AddressUpdateInput {
  AddressComponents: AddressComponentUpdateManyWithoutAddressNestedInput
  Location: LocationUpdateManyWithoutAddressNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  formattedAddress: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AddressUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  formattedAddress: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AddressUpdateOneWithoutAddressComponentsNestedInput {
  connect: AddressWhereUniqueInput
  connectOrCreate: AddressCreateOrConnectWithoutAddressComponentsInput
  create: AddressCreateWithoutAddressComponentsInput
  delete: AddressWhereInput
  disconnect: AddressWhereInput
  update: AddressUpdateToOneWithWhereWithoutAddressComponentsInput
  upsert: AddressUpsertWithoutAddressComponentsInput
}

input AddressUpdateOneWithoutLocationNestedInput {
  connect: AddressWhereUniqueInput
  connectOrCreate: AddressCreateOrConnectWithoutLocationInput
  create: AddressCreateWithoutLocationInput
  delete: AddressWhereInput
  disconnect: AddressWhereInput
  update: AddressUpdateToOneWithWhereWithoutLocationInput
  upsert: AddressUpsertWithoutLocationInput
}

input AddressUpdateToOneWithWhereWithoutAddressComponentsInput {
  data: AddressUpdateWithoutAddressComponentsInput!
  where: AddressWhereInput
}

input AddressUpdateToOneWithWhereWithoutLocationInput {
  data: AddressUpdateWithoutLocationInput!
  where: AddressWhereInput
}

input AddressUpdateWithoutAddressComponentsInput {
  Location: LocationUpdateManyWithoutAddressNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  formattedAddress: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AddressUpdateWithoutLocationInput {
  AddressComponents: AddressComponentUpdateManyWithoutAddressNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  formattedAddress: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AddressUpsertWithoutAddressComponentsInput {
  create: AddressCreateWithoutAddressComponentsInput!
  update: AddressUpdateWithoutAddressComponentsInput!
  where: AddressWhereInput
}

input AddressUpsertWithoutLocationInput {
  create: AddressCreateWithoutLocationInput!
  update: AddressUpdateWithoutLocationInput!
  where: AddressWhereInput
}

input AddressWhereInput {
  AND: [AddressWhereInput!]
  AddressComponents: AddressComponentListRelationFilter
  Location: LocationListRelationFilter
  NOT: [AddressWhereInput!]
  OR: [AddressWhereInput!]
  createdAt: DateTimeFilter
  formattedAddress: StringFilter
  id: StringFilter
  updatedAt: DateTimeFilter
}

input AddressWhereUniqueInput {
  AND: [AddressWhereInput!]
  AddressComponents: AddressComponentListRelationFilter
  Location: LocationListRelationFilter
  NOT: [AddressWhereInput!]
  OR: [AddressWhereInput!]
  createdAt: DateTimeFilter
  formattedAddress: StringFilter
  id: String
  updatedAt: DateTimeFilter
}

enum AppType {
  BARFRIENDS
  PETFRIENDS
  REVEL
}

type Area {
  City: City!
  ComingArea: ComingArea
  Country: Country!
  H3Index5VenueRecommendation: H3Index5VenueRecommendation
  H3Index6VenueRecommendation: H3Index6VenueRecommendation
  Location: Location
  State: State!
  cityId: String!
  countryId: String!
  id: ID!
  stateId: String!
  timesRequested: Int
}

input AreaAvgOrderByAggregateInput {
  timesRequested: SortOrder
}

input AreaCountOrderByAggregateInput {
  cityId: SortOrder
  countryId: SortOrder
  id: SortOrder
  stateId: SortOrder
  timesRequested: SortOrder
}

input AreaCreateInput {
  City: CityCreateNestedOneWithoutAreaInput!
  ComingArea: ComingAreaCreateNestedOneWithoutAreaInput
  Country: CountryCreateNestedOneWithoutAreaInput!
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput
  Location: LocationCreateNestedOneWithoutAreaInput
  State: StateCreateNestedOneWithoutAreaInput!
  id: String
  timesRequested: Int
}

input AreaCreateManyCityInput {
  countryId: String!
  id: String
  stateId: String!
  timesRequested: Int
}

input AreaCreateManyCityInputEnvelope {
  data: [AreaCreateManyCityInput!]!
  skipDuplicates: Boolean
}

input AreaCreateManyCountryInput {
  cityId: String!
  id: String
  stateId: String!
  timesRequested: Int
}

input AreaCreateManyCountryInputEnvelope {
  data: [AreaCreateManyCountryInput!]!
  skipDuplicates: Boolean
}

input AreaCreateManyInput {
  cityId: String!
  countryId: String!
  id: String
  stateId: String!
  timesRequested: Int
}

input AreaCreateManyStateInput {
  cityId: String!
  countryId: String!
  id: String
  timesRequested: Int
}

input AreaCreateManyStateInputEnvelope {
  data: [AreaCreateManyStateInput!]!
  skipDuplicates: Boolean
}

input AreaCreateNestedManyWithoutCityInput {
  connect: [AreaWhereUniqueInput!]
  connectOrCreate: [AreaCreateOrConnectWithoutCityInput!]
  create: [AreaCreateWithoutCityInput!]
  createMany: AreaCreateManyCityInputEnvelope
}

input AreaCreateNestedManyWithoutCountryInput {
  connect: [AreaWhereUniqueInput!]
  connectOrCreate: [AreaCreateOrConnectWithoutCountryInput!]
  create: [AreaCreateWithoutCountryInput!]
  createMany: AreaCreateManyCountryInputEnvelope
}

input AreaCreateNestedManyWithoutStateInput {
  connect: [AreaWhereUniqueInput!]
  connectOrCreate: [AreaCreateOrConnectWithoutStateInput!]
  create: [AreaCreateWithoutStateInput!]
  createMany: AreaCreateManyStateInputEnvelope
}

input AreaCreateNestedOneWithoutComingAreaInput {
  connect: AreaWhereUniqueInput
  connectOrCreate: AreaCreateOrConnectWithoutComingAreaInput
  create: AreaCreateWithoutComingAreaInput
}

input AreaCreateNestedOneWithoutH3Index5VenueRecommendationInput {
  connect: AreaWhereUniqueInput
  connectOrCreate: AreaCreateOrConnectWithoutH3Index5VenueRecommendationInput
  create: AreaCreateWithoutH3Index5VenueRecommendationInput
}

input AreaCreateNestedOneWithoutH3Index6VenueRecommendationInput {
  connect: AreaWhereUniqueInput
  connectOrCreate: AreaCreateOrConnectWithoutH3Index6VenueRecommendationInput
  create: AreaCreateWithoutH3Index6VenueRecommendationInput
}

input AreaCreateNestedOneWithoutLocationInput {
  connect: AreaWhereUniqueInput
  connectOrCreate: AreaCreateOrConnectWithoutLocationInput
  create: AreaCreateWithoutLocationInput
}

input AreaCreateOrConnectWithoutCityInput {
  create: AreaCreateWithoutCityInput!
  where: AreaWhereUniqueInput!
}

input AreaCreateOrConnectWithoutComingAreaInput {
  create: AreaCreateWithoutComingAreaInput!
  where: AreaWhereUniqueInput!
}

input AreaCreateOrConnectWithoutCountryInput {
  create: AreaCreateWithoutCountryInput!
  where: AreaWhereUniqueInput!
}

input AreaCreateOrConnectWithoutH3Index5VenueRecommendationInput {
  create: AreaCreateWithoutH3Index5VenueRecommendationInput!
  where: AreaWhereUniqueInput!
}

input AreaCreateOrConnectWithoutH3Index6VenueRecommendationInput {
  create: AreaCreateWithoutH3Index6VenueRecommendationInput!
  where: AreaWhereUniqueInput!
}

input AreaCreateOrConnectWithoutLocationInput {
  create: AreaCreateWithoutLocationInput!
  where: AreaWhereUniqueInput!
}

input AreaCreateOrConnectWithoutStateInput {
  create: AreaCreateWithoutStateInput!
  where: AreaWhereUniqueInput!
}

input AreaCreateWithoutCityInput {
  ComingArea: ComingAreaCreateNestedOneWithoutAreaInput
  Country: CountryCreateNestedOneWithoutAreaInput!
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput
  Location: LocationCreateNestedOneWithoutAreaInput
  State: StateCreateNestedOneWithoutAreaInput!
  id: String
  timesRequested: Int
}

input AreaCreateWithoutComingAreaInput {
  City: CityCreateNestedOneWithoutAreaInput!
  Country: CountryCreateNestedOneWithoutAreaInput!
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput
  Location: LocationCreateNestedOneWithoutAreaInput
  State: StateCreateNestedOneWithoutAreaInput!
  id: String
  timesRequested: Int
}

input AreaCreateWithoutCountryInput {
  City: CityCreateNestedOneWithoutAreaInput!
  ComingArea: ComingAreaCreateNestedOneWithoutAreaInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput
  Location: LocationCreateNestedOneWithoutAreaInput
  State: StateCreateNestedOneWithoutAreaInput!
  id: String
  timesRequested: Int
}

input AreaCreateWithoutH3Index5VenueRecommendationInput {
  City: CityCreateNestedOneWithoutAreaInput!
  ComingArea: ComingAreaCreateNestedOneWithoutAreaInput
  Country: CountryCreateNestedOneWithoutAreaInput!
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput
  Location: LocationCreateNestedOneWithoutAreaInput
  State: StateCreateNestedOneWithoutAreaInput!
  id: String
  timesRequested: Int
}

input AreaCreateWithoutH3Index6VenueRecommendationInput {
  City: CityCreateNestedOneWithoutAreaInput!
  ComingArea: ComingAreaCreateNestedOneWithoutAreaInput
  Country: CountryCreateNestedOneWithoutAreaInput!
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput
  Location: LocationCreateNestedOneWithoutAreaInput
  State: StateCreateNestedOneWithoutAreaInput!
  id: String
  timesRequested: Int
}

input AreaCreateWithoutLocationInput {
  City: CityCreateNestedOneWithoutAreaInput!
  ComingArea: ComingAreaCreateNestedOneWithoutAreaInput
  Country: CountryCreateNestedOneWithoutAreaInput!
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput
  State: StateCreateNestedOneWithoutAreaInput!
  id: String
  timesRequested: Int
}

input AreaCreateWithoutStateInput {
  City: CityCreateNestedOneWithoutAreaInput!
  ComingArea: ComingAreaCreateNestedOneWithoutAreaInput
  Country: CountryCreateNestedOneWithoutAreaInput!
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput
  Location: LocationCreateNestedOneWithoutAreaInput
  id: String
  timesRequested: Int
}

input AreaListRelationFilter {
  every: AreaWhereInput
  none: AreaWhereInput
  some: AreaWhereInput
}

input AreaMaxOrderByAggregateInput {
  cityId: SortOrder
  countryId: SortOrder
  id: SortOrder
  stateId: SortOrder
  timesRequested: SortOrder
}

input AreaMinOrderByAggregateInput {
  cityId: SortOrder
  countryId: SortOrder
  id: SortOrder
  stateId: SortOrder
  timesRequested: SortOrder
}

input AreaNullableRelationFilter {
  is: AreaWhereInput
  isNot: AreaWhereInput
}

input AreaOrderByRelationAggregateInput {
  _count: SortOrder
}

input AreaOrderByWithAggregationInput {
  _avg: AreaAvgOrderByAggregateInput
  _count: AreaCountOrderByAggregateInput
  _max: AreaMaxOrderByAggregateInput
  _min: AreaMinOrderByAggregateInput
  _sum: AreaSumOrderByAggregateInput
  cityId: SortOrder
  countryId: SortOrder
  id: SortOrder
  stateId: SortOrder
  timesRequested: SortOrder
}

input AreaOrderByWithRelationInput {
  City: CityOrderByWithRelationInput
  ComingArea: ComingAreaOrderByWithRelationInput
  Country: CountryOrderByWithRelationInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationOrderByWithRelationInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationOrderByWithRelationInput
  Location: LocationOrderByWithRelationInput
  State: StateOrderByWithRelationInput
  cityId: SortOrder
  countryId: SortOrder
  id: SortOrder
  stateId: SortOrder
  timesRequested: SortOrder
}

type AreaResponse {
  City: City
  Country: Country
  Geometry: Coords
  State: State
}

enum AreaScalarFieldEnum {
  cityId
  countryId
  id
  stateId
  timesRequested
}

input AreaScalarWhereInput {
  AND: [AreaScalarWhereInput!]
  NOT: [AreaScalarWhereInput!]
  OR: [AreaScalarWhereInput!]
  cityId: StringFilter
  countryId: StringFilter
  id: StringFilter
  stateId: StringFilter
  timesRequested: IntNullableFilter
}

input AreaScalarWhereWithAggregatesInput {
  AND: [AreaScalarWhereWithAggregatesInput!]
  NOT: [AreaScalarWhereWithAggregatesInput!]
  OR: [AreaScalarWhereWithAggregatesInput!]
  cityId: StringWithAggregatesFilter
  countryId: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  stateId: StringWithAggregatesFilter
  timesRequested: IntNullableWithAggregatesFilter
}

input AreaSumOrderByAggregateInput {
  timesRequested: SortOrder
}

input AreaUpdateInput {
  City: CityUpdateOneRequiredWithoutAreaNestedInput
  ComingArea: ComingAreaUpdateOneWithoutAreaNestedInput
  Country: CountryUpdateOneRequiredWithoutAreaNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput
  Location: LocationUpdateOneWithoutAreaNestedInput
  State: StateUpdateOneRequiredWithoutAreaNestedInput
  id: StringFieldUpdateOperationsInput
  timesRequested: NullableIntFieldUpdateOperationsInput
}

input AreaUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  timesRequested: NullableIntFieldUpdateOperationsInput
}

input AreaUpdateManyWithWhereWithoutCityInput {
  data: AreaUpdateManyMutationInput!
  where: AreaScalarWhereInput!
}

input AreaUpdateManyWithWhereWithoutCountryInput {
  data: AreaUpdateManyMutationInput!
  where: AreaScalarWhereInput!
}

input AreaUpdateManyWithWhereWithoutStateInput {
  data: AreaUpdateManyMutationInput!
  where: AreaScalarWhereInput!
}

input AreaUpdateManyWithoutCityNestedInput {
  connect: [AreaWhereUniqueInput!]
  connectOrCreate: [AreaCreateOrConnectWithoutCityInput!]
  create: [AreaCreateWithoutCityInput!]
  createMany: AreaCreateManyCityInputEnvelope
  delete: [AreaWhereUniqueInput!]
  deleteMany: [AreaScalarWhereInput!]
  disconnect: [AreaWhereUniqueInput!]
  set: [AreaWhereUniqueInput!]
  update: [AreaUpdateWithWhereUniqueWithoutCityInput!]
  updateMany: [AreaUpdateManyWithWhereWithoutCityInput!]
  upsert: [AreaUpsertWithWhereUniqueWithoutCityInput!]
}

input AreaUpdateManyWithoutCountryNestedInput {
  connect: [AreaWhereUniqueInput!]
  connectOrCreate: [AreaCreateOrConnectWithoutCountryInput!]
  create: [AreaCreateWithoutCountryInput!]
  createMany: AreaCreateManyCountryInputEnvelope
  delete: [AreaWhereUniqueInput!]
  deleteMany: [AreaScalarWhereInput!]
  disconnect: [AreaWhereUniqueInput!]
  set: [AreaWhereUniqueInput!]
  update: [AreaUpdateWithWhereUniqueWithoutCountryInput!]
  updateMany: [AreaUpdateManyWithWhereWithoutCountryInput!]
  upsert: [AreaUpsertWithWhereUniqueWithoutCountryInput!]
}

input AreaUpdateManyWithoutStateNestedInput {
  connect: [AreaWhereUniqueInput!]
  connectOrCreate: [AreaCreateOrConnectWithoutStateInput!]
  create: [AreaCreateWithoutStateInput!]
  createMany: AreaCreateManyStateInputEnvelope
  delete: [AreaWhereUniqueInput!]
  deleteMany: [AreaScalarWhereInput!]
  disconnect: [AreaWhereUniqueInput!]
  set: [AreaWhereUniqueInput!]
  update: [AreaUpdateWithWhereUniqueWithoutStateInput!]
  updateMany: [AreaUpdateManyWithWhereWithoutStateInput!]
  upsert: [AreaUpsertWithWhereUniqueWithoutStateInput!]
}

input AreaUpdateOneWithoutComingAreaNestedInput {
  connect: AreaWhereUniqueInput
  connectOrCreate: AreaCreateOrConnectWithoutComingAreaInput
  create: AreaCreateWithoutComingAreaInput
  delete: AreaWhereInput
  disconnect: AreaWhereInput
  update: AreaUpdateToOneWithWhereWithoutComingAreaInput
  upsert: AreaUpsertWithoutComingAreaInput
}

input AreaUpdateOneWithoutH3Index5VenueRecommendationNestedInput {
  connect: AreaWhereUniqueInput
  connectOrCreate: AreaCreateOrConnectWithoutH3Index5VenueRecommendationInput
  create: AreaCreateWithoutH3Index5VenueRecommendationInput
  delete: AreaWhereInput
  disconnect: AreaWhereInput
  update: AreaUpdateToOneWithWhereWithoutH3Index5VenueRecommendationInput
  upsert: AreaUpsertWithoutH3Index5VenueRecommendationInput
}

input AreaUpdateOneWithoutH3Index6VenueRecommendationNestedInput {
  connect: AreaWhereUniqueInput
  connectOrCreate: AreaCreateOrConnectWithoutH3Index6VenueRecommendationInput
  create: AreaCreateWithoutH3Index6VenueRecommendationInput
  delete: AreaWhereInput
  disconnect: AreaWhereInput
  update: AreaUpdateToOneWithWhereWithoutH3Index6VenueRecommendationInput
  upsert: AreaUpsertWithoutH3Index6VenueRecommendationInput
}

input AreaUpdateOneWithoutLocationNestedInput {
  connect: AreaWhereUniqueInput
  connectOrCreate: AreaCreateOrConnectWithoutLocationInput
  create: AreaCreateWithoutLocationInput
  delete: AreaWhereInput
  disconnect: AreaWhereInput
  update: AreaUpdateToOneWithWhereWithoutLocationInput
  upsert: AreaUpsertWithoutLocationInput
}

input AreaUpdateToOneWithWhereWithoutComingAreaInput {
  data: AreaUpdateWithoutComingAreaInput!
  where: AreaWhereInput
}

input AreaUpdateToOneWithWhereWithoutH3Index5VenueRecommendationInput {
  data: AreaUpdateWithoutH3Index5VenueRecommendationInput!
  where: AreaWhereInput
}

input AreaUpdateToOneWithWhereWithoutH3Index6VenueRecommendationInput {
  data: AreaUpdateWithoutH3Index6VenueRecommendationInput!
  where: AreaWhereInput
}

input AreaUpdateToOneWithWhereWithoutLocationInput {
  data: AreaUpdateWithoutLocationInput!
  where: AreaWhereInput
}

input AreaUpdateWithWhereUniqueWithoutCityInput {
  data: AreaUpdateWithoutCityInput!
  where: AreaWhereUniqueInput!
}

input AreaUpdateWithWhereUniqueWithoutCountryInput {
  data: AreaUpdateWithoutCountryInput!
  where: AreaWhereUniqueInput!
}

input AreaUpdateWithWhereUniqueWithoutStateInput {
  data: AreaUpdateWithoutStateInput!
  where: AreaWhereUniqueInput!
}

input AreaUpdateWithoutCityInput {
  ComingArea: ComingAreaUpdateOneWithoutAreaNestedInput
  Country: CountryUpdateOneRequiredWithoutAreaNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput
  Location: LocationUpdateOneWithoutAreaNestedInput
  State: StateUpdateOneRequiredWithoutAreaNestedInput
  id: StringFieldUpdateOperationsInput
  timesRequested: NullableIntFieldUpdateOperationsInput
}

input AreaUpdateWithoutComingAreaInput {
  City: CityUpdateOneRequiredWithoutAreaNestedInput
  Country: CountryUpdateOneRequiredWithoutAreaNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput
  Location: LocationUpdateOneWithoutAreaNestedInput
  State: StateUpdateOneRequiredWithoutAreaNestedInput
  id: StringFieldUpdateOperationsInput
  timesRequested: NullableIntFieldUpdateOperationsInput
}

input AreaUpdateWithoutCountryInput {
  City: CityUpdateOneRequiredWithoutAreaNestedInput
  ComingArea: ComingAreaUpdateOneWithoutAreaNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput
  Location: LocationUpdateOneWithoutAreaNestedInput
  State: StateUpdateOneRequiredWithoutAreaNestedInput
  id: StringFieldUpdateOperationsInput
  timesRequested: NullableIntFieldUpdateOperationsInput
}

input AreaUpdateWithoutH3Index5VenueRecommendationInput {
  City: CityUpdateOneRequiredWithoutAreaNestedInput
  ComingArea: ComingAreaUpdateOneWithoutAreaNestedInput
  Country: CountryUpdateOneRequiredWithoutAreaNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput
  Location: LocationUpdateOneWithoutAreaNestedInput
  State: StateUpdateOneRequiredWithoutAreaNestedInput
  id: StringFieldUpdateOperationsInput
  timesRequested: NullableIntFieldUpdateOperationsInput
}

input AreaUpdateWithoutH3Index6VenueRecommendationInput {
  City: CityUpdateOneRequiredWithoutAreaNestedInput
  ComingArea: ComingAreaUpdateOneWithoutAreaNestedInput
  Country: CountryUpdateOneRequiredWithoutAreaNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput
  Location: LocationUpdateOneWithoutAreaNestedInput
  State: StateUpdateOneRequiredWithoutAreaNestedInput
  id: StringFieldUpdateOperationsInput
  timesRequested: NullableIntFieldUpdateOperationsInput
}

input AreaUpdateWithoutLocationInput {
  City: CityUpdateOneRequiredWithoutAreaNestedInput
  ComingArea: ComingAreaUpdateOneWithoutAreaNestedInput
  Country: CountryUpdateOneRequiredWithoutAreaNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput
  State: StateUpdateOneRequiredWithoutAreaNestedInput
  id: StringFieldUpdateOperationsInput
  timesRequested: NullableIntFieldUpdateOperationsInput
}

input AreaUpdateWithoutStateInput {
  City: CityUpdateOneRequiredWithoutAreaNestedInput
  ComingArea: ComingAreaUpdateOneWithoutAreaNestedInput
  Country: CountryUpdateOneRequiredWithoutAreaNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput
  Location: LocationUpdateOneWithoutAreaNestedInput
  id: StringFieldUpdateOperationsInput
  timesRequested: NullableIntFieldUpdateOperationsInput
}

input AreaUpsertWithWhereUniqueWithoutCityInput {
  create: AreaCreateWithoutCityInput!
  update: AreaUpdateWithoutCityInput!
  where: AreaWhereUniqueInput!
}

input AreaUpsertWithWhereUniqueWithoutCountryInput {
  create: AreaCreateWithoutCountryInput!
  update: AreaUpdateWithoutCountryInput!
  where: AreaWhereUniqueInput!
}

input AreaUpsertWithWhereUniqueWithoutStateInput {
  create: AreaCreateWithoutStateInput!
  update: AreaUpdateWithoutStateInput!
  where: AreaWhereUniqueInput!
}

input AreaUpsertWithoutComingAreaInput {
  create: AreaCreateWithoutComingAreaInput!
  update: AreaUpdateWithoutComingAreaInput!
  where: AreaWhereInput
}

input AreaUpsertWithoutH3Index5VenueRecommendationInput {
  create: AreaCreateWithoutH3Index5VenueRecommendationInput!
  update: AreaUpdateWithoutH3Index5VenueRecommendationInput!
  where: AreaWhereInput
}

input AreaUpsertWithoutH3Index6VenueRecommendationInput {
  create: AreaCreateWithoutH3Index6VenueRecommendationInput!
  update: AreaUpdateWithoutH3Index6VenueRecommendationInput!
  where: AreaWhereInput
}

input AreaUpsertWithoutLocationInput {
  create: AreaCreateWithoutLocationInput!
  update: AreaUpdateWithoutLocationInput!
  where: AreaWhereInput
}

input AreaWhereInput {
  AND: [AreaWhereInput!]
  City: CityWhereInput
  ComingArea: ComingAreaWhereInput
  Country: CountryWhereInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationWhereInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationWhereInput
  Location: LocationWhereInput
  NOT: [AreaWhereInput!]
  OR: [AreaWhereInput!]
  State: StateWhereInput
  cityId: StringFilter
  countryId: StringFilter
  id: StringFilter
  stateId: StringFilter
  timesRequested: IntNullableFilter
}

input AreaWhereUniqueInput {
  AND: [AreaWhereInput!]
  City: CityWhereInput
  ComingArea: ComingAreaWhereInput
  Country: CountryWhereInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationWhereInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationWhereInput
  Location: LocationWhereInput
  NOT: [AreaWhereInput!]
  OR: [AreaWhereInput!]
  State: StateWhereInput
  cityId: StringFilter
  countryId: StringFilter
  id: String
  stateId: StringFilter
  timesRequested: IntNullableFilter
}

type AuthenticationProvider {
  Credentials: Credentials
  Password: Password
  codepassword: Code
  emails(cursor: EmailWhereUniqueInput, distinct: [EmailScalarFieldEnum!], orderBy: [EmailOrderByWithRelationInput!], skip: Int, take: Int, where: EmailWhereInput): [Email!]!
  id: ID!
  phones(cursor: PhoneWhereUniqueInput, distinct: [PhoneScalarFieldEnum!], orderBy: [PhoneOrderByWithRelationInput!], skip: Int, take: Int, where: PhoneWhereInput): [Phone!]!
}

input AuthenticationProviderCountOrderByAggregateInput {
  id: SortOrder
}

input AuthenticationProviderCreateInput {
  Credentials: CredentialsCreateNestedOneWithoutAuthenticationProviderInput
  Password: PasswordCreateNestedOneWithoutAuthenticationProviderInput
  codepassword: CodeCreateNestedOneWithoutAuthenticationProviderInput
  emails: EmailCreateNestedManyWithoutAuthenticationProviderInput
  id: String
  phones: PhoneCreateNestedManyWithoutAuthenticationProviderInput
}

input AuthenticationProviderCreateManyInput {
  id: String
}

input AuthenticationProviderCreateNestedManyWithoutEmailsInput {
  connect: [AuthenticationProviderWhereUniqueInput!]
  connectOrCreate: [AuthenticationProviderCreateOrConnectWithoutEmailsInput!]
  create: [AuthenticationProviderCreateWithoutEmailsInput!]
}

input AuthenticationProviderCreateNestedManyWithoutPhonesInput {
  connect: [AuthenticationProviderWhereUniqueInput!]
  connectOrCreate: [AuthenticationProviderCreateOrConnectWithoutPhonesInput!]
  create: [AuthenticationProviderCreateWithoutPhonesInput!]
}

input AuthenticationProviderCreateNestedOneWithoutCodepasswordInput {
  connect: AuthenticationProviderWhereUniqueInput
  connectOrCreate: AuthenticationProviderCreateOrConnectWithoutCodepasswordInput
  create: AuthenticationProviderCreateWithoutCodepasswordInput
}

input AuthenticationProviderCreateNestedOneWithoutCredentialsInput {
  connect: AuthenticationProviderWhereUniqueInput
  connectOrCreate: AuthenticationProviderCreateOrConnectWithoutCredentialsInput
  create: AuthenticationProviderCreateWithoutCredentialsInput
}

input AuthenticationProviderCreateNestedOneWithoutPasswordInput {
  connect: AuthenticationProviderWhereUniqueInput
  connectOrCreate: AuthenticationProviderCreateOrConnectWithoutPasswordInput
  create: AuthenticationProviderCreateWithoutPasswordInput
}

input AuthenticationProviderCreateOrConnectWithoutCodepasswordInput {
  create: AuthenticationProviderCreateWithoutCodepasswordInput!
  where: AuthenticationProviderWhereUniqueInput!
}

input AuthenticationProviderCreateOrConnectWithoutCredentialsInput {
  create: AuthenticationProviderCreateWithoutCredentialsInput!
  where: AuthenticationProviderWhereUniqueInput!
}

input AuthenticationProviderCreateOrConnectWithoutEmailsInput {
  create: AuthenticationProviderCreateWithoutEmailsInput!
  where: AuthenticationProviderWhereUniqueInput!
}

input AuthenticationProviderCreateOrConnectWithoutPasswordInput {
  create: AuthenticationProviderCreateWithoutPasswordInput!
  where: AuthenticationProviderWhereUniqueInput!
}

input AuthenticationProviderCreateOrConnectWithoutPhonesInput {
  create: AuthenticationProviderCreateWithoutPhonesInput!
  where: AuthenticationProviderWhereUniqueInput!
}

input AuthenticationProviderCreateWithoutCodepasswordInput {
  Credentials: CredentialsCreateNestedOneWithoutAuthenticationProviderInput
  Password: PasswordCreateNestedOneWithoutAuthenticationProviderInput
  emails: EmailCreateNestedManyWithoutAuthenticationProviderInput
  id: String
  phones: PhoneCreateNestedManyWithoutAuthenticationProviderInput
}

input AuthenticationProviderCreateWithoutCredentialsInput {
  Password: PasswordCreateNestedOneWithoutAuthenticationProviderInput
  codepassword: CodeCreateNestedOneWithoutAuthenticationProviderInput
  emails: EmailCreateNestedManyWithoutAuthenticationProviderInput
  id: String
  phones: PhoneCreateNestedManyWithoutAuthenticationProviderInput
}

input AuthenticationProviderCreateWithoutEmailsInput {
  Credentials: CredentialsCreateNestedOneWithoutAuthenticationProviderInput
  Password: PasswordCreateNestedOneWithoutAuthenticationProviderInput
  codepassword: CodeCreateNestedOneWithoutAuthenticationProviderInput
  id: String
  phones: PhoneCreateNestedManyWithoutAuthenticationProviderInput
}

input AuthenticationProviderCreateWithoutPasswordInput {
  Credentials: CredentialsCreateNestedOneWithoutAuthenticationProviderInput
  codepassword: CodeCreateNestedOneWithoutAuthenticationProviderInput
  emails: EmailCreateNestedManyWithoutAuthenticationProviderInput
  id: String
  phones: PhoneCreateNestedManyWithoutAuthenticationProviderInput
}

input AuthenticationProviderCreateWithoutPhonesInput {
  Credentials: CredentialsCreateNestedOneWithoutAuthenticationProviderInput
  Password: PasswordCreateNestedOneWithoutAuthenticationProviderInput
  codepassword: CodeCreateNestedOneWithoutAuthenticationProviderInput
  emails: EmailCreateNestedManyWithoutAuthenticationProviderInput
  id: String
}

input AuthenticationProviderListRelationFilter {
  every: AuthenticationProviderWhereInput
  none: AuthenticationProviderWhereInput
  some: AuthenticationProviderWhereInput
}

input AuthenticationProviderMaxOrderByAggregateInput {
  id: SortOrder
}

input AuthenticationProviderMinOrderByAggregateInput {
  id: SortOrder
}

input AuthenticationProviderNullableRelationFilter {
  is: AuthenticationProviderWhereInput
  isNot: AuthenticationProviderWhereInput
}

input AuthenticationProviderOrderByRelationAggregateInput {
  _count: SortOrder
}

input AuthenticationProviderOrderByWithAggregationInput {
  _count: AuthenticationProviderCountOrderByAggregateInput
  _max: AuthenticationProviderMaxOrderByAggregateInput
  _min: AuthenticationProviderMinOrderByAggregateInput
  id: SortOrder
}

input AuthenticationProviderOrderByWithRelationInput {
  Credentials: CredentialsOrderByWithRelationInput
  Password: PasswordOrderByWithRelationInput
  codepassword: CodeOrderByWithRelationInput
  emails: EmailOrderByRelationAggregateInput
  id: SortOrder
  phones: PhoneOrderByRelationAggregateInput
}

input AuthenticationProviderRelationFilter {
  is: AuthenticationProviderWhereInput
  isNot: AuthenticationProviderWhereInput
}

enum AuthenticationProviderScalarFieldEnum {
  id
}

input AuthenticationProviderScalarWhereInput {
  AND: [AuthenticationProviderScalarWhereInput!]
  NOT: [AuthenticationProviderScalarWhereInput!]
  OR: [AuthenticationProviderScalarWhereInput!]
  id: StringFilter
}

input AuthenticationProviderScalarWhereWithAggregatesInput {
  AND: [AuthenticationProviderScalarWhereWithAggregatesInput!]
  NOT: [AuthenticationProviderScalarWhereWithAggregatesInput!]
  OR: [AuthenticationProviderScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
}

input AuthenticationProviderUpdateInput {
  Credentials: CredentialsUpdateOneWithoutAuthenticationProviderNestedInput
  Password: PasswordUpdateOneWithoutAuthenticationProviderNestedInput
  codepassword: CodeUpdateOneWithoutAuthenticationProviderNestedInput
  emails: EmailUpdateManyWithoutAuthenticationProviderNestedInput
  id: StringFieldUpdateOperationsInput
  phones: PhoneUpdateManyWithoutAuthenticationProviderNestedInput
}

input AuthenticationProviderUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input AuthenticationProviderUpdateManyWithWhereWithoutEmailsInput {
  data: AuthenticationProviderUpdateManyMutationInput!
  where: AuthenticationProviderScalarWhereInput!
}

input AuthenticationProviderUpdateManyWithWhereWithoutPhonesInput {
  data: AuthenticationProviderUpdateManyMutationInput!
  where: AuthenticationProviderScalarWhereInput!
}

input AuthenticationProviderUpdateManyWithoutEmailsNestedInput {
  connect: [AuthenticationProviderWhereUniqueInput!]
  connectOrCreate: [AuthenticationProviderCreateOrConnectWithoutEmailsInput!]
  create: [AuthenticationProviderCreateWithoutEmailsInput!]
  delete: [AuthenticationProviderWhereUniqueInput!]
  deleteMany: [AuthenticationProviderScalarWhereInput!]
  disconnect: [AuthenticationProviderWhereUniqueInput!]
  set: [AuthenticationProviderWhereUniqueInput!]
  update: [AuthenticationProviderUpdateWithWhereUniqueWithoutEmailsInput!]
  updateMany: [AuthenticationProviderUpdateManyWithWhereWithoutEmailsInput!]
  upsert: [AuthenticationProviderUpsertWithWhereUniqueWithoutEmailsInput!]
}

input AuthenticationProviderUpdateManyWithoutPhonesNestedInput {
  connect: [AuthenticationProviderWhereUniqueInput!]
  connectOrCreate: [AuthenticationProviderCreateOrConnectWithoutPhonesInput!]
  create: [AuthenticationProviderCreateWithoutPhonesInput!]
  delete: [AuthenticationProviderWhereUniqueInput!]
  deleteMany: [AuthenticationProviderScalarWhereInput!]
  disconnect: [AuthenticationProviderWhereUniqueInput!]
  set: [AuthenticationProviderWhereUniqueInput!]
  update: [AuthenticationProviderUpdateWithWhereUniqueWithoutPhonesInput!]
  updateMany: [AuthenticationProviderUpdateManyWithWhereWithoutPhonesInput!]
  upsert: [AuthenticationProviderUpsertWithWhereUniqueWithoutPhonesInput!]
}

input AuthenticationProviderUpdateOneRequiredWithoutPasswordNestedInput {
  connect: AuthenticationProviderWhereUniqueInput
  connectOrCreate: AuthenticationProviderCreateOrConnectWithoutPasswordInput
  create: AuthenticationProviderCreateWithoutPasswordInput
  update: AuthenticationProviderUpdateToOneWithWhereWithoutPasswordInput
  upsert: AuthenticationProviderUpsertWithoutPasswordInput
}

input AuthenticationProviderUpdateOneWithoutCodepasswordNestedInput {
  connect: AuthenticationProviderWhereUniqueInput
  connectOrCreate: AuthenticationProviderCreateOrConnectWithoutCodepasswordInput
  create: AuthenticationProviderCreateWithoutCodepasswordInput
  delete: AuthenticationProviderWhereInput
  disconnect: AuthenticationProviderWhereInput
  update: AuthenticationProviderUpdateToOneWithWhereWithoutCodepasswordInput
  upsert: AuthenticationProviderUpsertWithoutCodepasswordInput
}

input AuthenticationProviderUpdateOneWithoutCredentialsNestedInput {
  connect: AuthenticationProviderWhereUniqueInput
  connectOrCreate: AuthenticationProviderCreateOrConnectWithoutCredentialsInput
  create: AuthenticationProviderCreateWithoutCredentialsInput
  delete: AuthenticationProviderWhereInput
  disconnect: AuthenticationProviderWhereInput
  update: AuthenticationProviderUpdateToOneWithWhereWithoutCredentialsInput
  upsert: AuthenticationProviderUpsertWithoutCredentialsInput
}

input AuthenticationProviderUpdateToOneWithWhereWithoutCodepasswordInput {
  data: AuthenticationProviderUpdateWithoutCodepasswordInput!
  where: AuthenticationProviderWhereInput
}

input AuthenticationProviderUpdateToOneWithWhereWithoutCredentialsInput {
  data: AuthenticationProviderUpdateWithoutCredentialsInput!
  where: AuthenticationProviderWhereInput
}

input AuthenticationProviderUpdateToOneWithWhereWithoutPasswordInput {
  data: AuthenticationProviderUpdateWithoutPasswordInput!
  where: AuthenticationProviderWhereInput
}

input AuthenticationProviderUpdateWithWhereUniqueWithoutEmailsInput {
  data: AuthenticationProviderUpdateWithoutEmailsInput!
  where: AuthenticationProviderWhereUniqueInput!
}

input AuthenticationProviderUpdateWithWhereUniqueWithoutPhonesInput {
  data: AuthenticationProviderUpdateWithoutPhonesInput!
  where: AuthenticationProviderWhereUniqueInput!
}

input AuthenticationProviderUpdateWithoutCodepasswordInput {
  Credentials: CredentialsUpdateOneWithoutAuthenticationProviderNestedInput
  Password: PasswordUpdateOneWithoutAuthenticationProviderNestedInput
  emails: EmailUpdateManyWithoutAuthenticationProviderNestedInput
  id: StringFieldUpdateOperationsInput
  phones: PhoneUpdateManyWithoutAuthenticationProviderNestedInput
}

input AuthenticationProviderUpdateWithoutCredentialsInput {
  Password: PasswordUpdateOneWithoutAuthenticationProviderNestedInput
  codepassword: CodeUpdateOneWithoutAuthenticationProviderNestedInput
  emails: EmailUpdateManyWithoutAuthenticationProviderNestedInput
  id: StringFieldUpdateOperationsInput
  phones: PhoneUpdateManyWithoutAuthenticationProviderNestedInput
}

input AuthenticationProviderUpdateWithoutEmailsInput {
  Credentials: CredentialsUpdateOneWithoutAuthenticationProviderNestedInput
  Password: PasswordUpdateOneWithoutAuthenticationProviderNestedInput
  codepassword: CodeUpdateOneWithoutAuthenticationProviderNestedInput
  id: StringFieldUpdateOperationsInput
  phones: PhoneUpdateManyWithoutAuthenticationProviderNestedInput
}

input AuthenticationProviderUpdateWithoutPasswordInput {
  Credentials: CredentialsUpdateOneWithoutAuthenticationProviderNestedInput
  codepassword: CodeUpdateOneWithoutAuthenticationProviderNestedInput
  emails: EmailUpdateManyWithoutAuthenticationProviderNestedInput
  id: StringFieldUpdateOperationsInput
  phones: PhoneUpdateManyWithoutAuthenticationProviderNestedInput
}

input AuthenticationProviderUpdateWithoutPhonesInput {
  Credentials: CredentialsUpdateOneWithoutAuthenticationProviderNestedInput
  Password: PasswordUpdateOneWithoutAuthenticationProviderNestedInput
  codepassword: CodeUpdateOneWithoutAuthenticationProviderNestedInput
  emails: EmailUpdateManyWithoutAuthenticationProviderNestedInput
  id: StringFieldUpdateOperationsInput
}

input AuthenticationProviderUpsertWithWhereUniqueWithoutEmailsInput {
  create: AuthenticationProviderCreateWithoutEmailsInput!
  update: AuthenticationProviderUpdateWithoutEmailsInput!
  where: AuthenticationProviderWhereUniqueInput!
}

input AuthenticationProviderUpsertWithWhereUniqueWithoutPhonesInput {
  create: AuthenticationProviderCreateWithoutPhonesInput!
  update: AuthenticationProviderUpdateWithoutPhonesInput!
  where: AuthenticationProviderWhereUniqueInput!
}

input AuthenticationProviderUpsertWithoutCodepasswordInput {
  create: AuthenticationProviderCreateWithoutCodepasswordInput!
  update: AuthenticationProviderUpdateWithoutCodepasswordInput!
  where: AuthenticationProviderWhereInput
}

input AuthenticationProviderUpsertWithoutCredentialsInput {
  create: AuthenticationProviderCreateWithoutCredentialsInput!
  update: AuthenticationProviderUpdateWithoutCredentialsInput!
  where: AuthenticationProviderWhereInput
}

input AuthenticationProviderUpsertWithoutPasswordInput {
  create: AuthenticationProviderCreateWithoutPasswordInput!
  update: AuthenticationProviderUpdateWithoutPasswordInput!
  where: AuthenticationProviderWhereInput
}

input AuthenticationProviderWhereInput {
  AND: [AuthenticationProviderWhereInput!]
  Credentials: CredentialsWhereInput
  NOT: [AuthenticationProviderWhereInput!]
  OR: [AuthenticationProviderWhereInput!]
  Password: PasswordWhereInput
  codepassword: CodeWhereInput
  emails: EmailListRelationFilter
  id: StringFilter
  phones: PhoneListRelationFilter
}

input AuthenticationProviderWhereUniqueInput {
  AND: [AuthenticationProviderWhereInput!]
  Credentials: CredentialsWhereInput
  NOT: [AuthenticationProviderWhereInput!]
  OR: [AuthenticationProviderWhereInput!]
  Password: PasswordWhereInput
  codepassword: CodeWhereInput
  emails: EmailListRelationFilter
  id: String
  phones: PhoneListRelationFilter
}

union AuthenticationResponseUnion = AuthorizationDeviceProfile | Error

input Authenticators {
  EmailInput: EmailInput
  PhoneInput: PhoneInput
  username: String
}

type AuthorizationDeviceManager {
  Device: Device
  DeviceProfile: AuthorizationDeviceProfile
  id: String
}

type AuthorizationDeviceProfile {
  AppType: AppType!
  DeviceManager: DeviceManager!
  Profile: Profile
  ProfileType: ProfileType!
  RefreshToken: RefreshToken
  createdAt: DateTime!
  deviceManagerId: String!
  id: ID!
  isActive: Boolean!
  profileId: String!
  updatedAt: DateTime!
}

union AuthorizedProfilesResponseUnion = Error | ProfilesResponse

input AuthorizedProfilesWhereInput {
  profiles: CustomProfileWhereInput!
}

"""Batch payloads from prisma."""
type BatchPayload {
  """Prisma Batch Payload"""
  count: Int!
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input BoolNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedBoolNullableFilter
  _min: NestedBoolNullableFilter
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

type Category {
  Tags(cursor: TagWhereUniqueInput, distinct: [TagScalarFieldEnum!], orderBy: [TagOrderByWithRelationInput!], skip: Int, take: Int, where: TagWhereInput): [Tag!]!
  id: ID!
  name: String!
}

input CategoryCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
}

input CategoryCreateInput {
  Tags: TagCreateNestedManyWithoutCategoryInput
  id: String
  name: String!
}

input CategoryCreateManyInput {
  id: String
  name: String!
}

input CategoryCreateNestedOneWithoutTagsInput {
  connect: CategoryWhereUniqueInput
  connectOrCreate: CategoryCreateOrConnectWithoutTagsInput
  create: CategoryCreateWithoutTagsInput
}

input CategoryCreateOrConnectWithoutTagsInput {
  create: CategoryCreateWithoutTagsInput!
  where: CategoryWhereUniqueInput!
}

input CategoryCreateWithoutTagsInput {
  id: String
  name: String!
}

input CategoryMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
}

input CategoryMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
}

input CategoryNullableRelationFilter {
  is: CategoryWhereInput
  isNot: CategoryWhereInput
}

input CategoryOrderByWithAggregationInput {
  _count: CategoryCountOrderByAggregateInput
  _max: CategoryMaxOrderByAggregateInput
  _min: CategoryMinOrderByAggregateInput
  id: SortOrder
  name: SortOrder
}

input CategoryOrderByWithRelationInput {
  Tags: TagOrderByRelationAggregateInput
  id: SortOrder
  name: SortOrder
}

enum CategoryScalarFieldEnum {
  id
  name
}

input CategoryScalarWhereWithAggregatesInput {
  AND: [CategoryScalarWhereWithAggregatesInput!]
  NOT: [CategoryScalarWhereWithAggregatesInput!]
  OR: [CategoryScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
}

input CategoryUpdateInput {
  Tags: TagUpdateManyWithoutCategoryNestedInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CategoryUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CategoryUpdateOneWithoutTagsNestedInput {
  connect: CategoryWhereUniqueInput
  connectOrCreate: CategoryCreateOrConnectWithoutTagsInput
  create: CategoryCreateWithoutTagsInput
  delete: CategoryWhereInput
  disconnect: CategoryWhereInput
  update: CategoryUpdateToOneWithWhereWithoutTagsInput
  upsert: CategoryUpsertWithoutTagsInput
}

input CategoryUpdateToOneWithWhereWithoutTagsInput {
  data: CategoryUpdateWithoutTagsInput!
  where: CategoryWhereInput
}

input CategoryUpdateWithoutTagsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CategoryUpsertWithoutTagsInput {
  create: CategoryCreateWithoutTagsInput!
  update: CategoryUpdateWithoutTagsInput!
  where: CategoryWhereInput
}

input CategoryWhereInput {
  AND: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  Tags: TagListRelationFilter
  id: StringFilter
  name: StringFilter
}

input CategoryWhereUniqueInput {
  AND: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  Tags: TagListRelationFilter
  id: String
  name: StringFilter
}

type City {
  Area(cursor: AreaWhereUniqueInput, distinct: [AreaScalarFieldEnum!], orderBy: [AreaOrderByWithRelationInput!], skip: Int, take: Int, where: AreaWhereInput): [Area!]!
  Geometry: Geometry!
  geometryId: Int!
  id: ID!
  name: String!
}

input CityAvgOrderByAggregateInput {
  geometryId: SortOrder
}

input CityCountOrderByAggregateInput {
  geometryId: SortOrder
  id: SortOrder
  name: SortOrder
}

input CityCreateInput {
  Area: AreaCreateNestedManyWithoutCityInput
  Geometry: GeometryCreateNestedOneWithoutCityInput!
  id: String
  name: String!
}

input CityCreateManyInput {
  geometryId: Int!
  id: String
  name: String!
}

input CityCreateNestedOneWithoutAreaInput {
  connect: CityWhereUniqueInput
  connectOrCreate: CityCreateOrConnectWithoutAreaInput
  create: CityCreateWithoutAreaInput
}

input CityCreateNestedOneWithoutGeometryInput {
  connect: CityWhereUniqueInput
  connectOrCreate: CityCreateOrConnectWithoutGeometryInput
  create: CityCreateWithoutGeometryInput
}

input CityCreateOrConnectWithoutAreaInput {
  create: CityCreateWithoutAreaInput!
  where: CityWhereUniqueInput!
}

input CityCreateOrConnectWithoutGeometryInput {
  create: CityCreateWithoutGeometryInput!
  where: CityWhereUniqueInput!
}

input CityCreateWithoutAreaInput {
  Geometry: GeometryCreateNestedOneWithoutCityInput!
  id: String
  name: String!
}

input CityCreateWithoutGeometryInput {
  Area: AreaCreateNestedManyWithoutCityInput
  id: String
  name: String!
}

input CityMaxOrderByAggregateInput {
  geometryId: SortOrder
  id: SortOrder
  name: SortOrder
}

input CityMinOrderByAggregateInput {
  geometryId: SortOrder
  id: SortOrder
  name: SortOrder
}

input CityNullableRelationFilter {
  is: CityWhereInput
  isNot: CityWhereInput
}

input CityOrderByWithAggregationInput {
  _avg: CityAvgOrderByAggregateInput
  _count: CityCountOrderByAggregateInput
  _max: CityMaxOrderByAggregateInput
  _min: CityMinOrderByAggregateInput
  _sum: CitySumOrderByAggregateInput
  geometryId: SortOrder
  id: SortOrder
  name: SortOrder
}

input CityOrderByWithRelationInput {
  Area: AreaOrderByRelationAggregateInput
  Geometry: GeometryOrderByWithRelationInput
  geometryId: SortOrder
  id: SortOrder
  name: SortOrder
}

input CityRelationFilter {
  is: CityWhereInput
  isNot: CityWhereInput
}

type CityResponseObject {
  countryCode: String
  latitude: String
  longitude: String
  name: String
  stateCode: String
  venuesInArea: Int
}

enum CityScalarFieldEnum {
  geometryId
  id
  name
}

input CityScalarWhereWithAggregatesInput {
  AND: [CityScalarWhereWithAggregatesInput!]
  NOT: [CityScalarWhereWithAggregatesInput!]
  OR: [CityScalarWhereWithAggregatesInput!]
  geometryId: IntWithAggregatesFilter
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
}

input CitySumOrderByAggregateInput {
  geometryId: SortOrder
}

input CityUpdateInput {
  Area: AreaUpdateManyWithoutCityNestedInput
  Geometry: GeometryUpdateOneRequiredWithoutCityNestedInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CityUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CityUpdateOneRequiredWithoutAreaNestedInput {
  connect: CityWhereUniqueInput
  connectOrCreate: CityCreateOrConnectWithoutAreaInput
  create: CityCreateWithoutAreaInput
  update: CityUpdateToOneWithWhereWithoutAreaInput
  upsert: CityUpsertWithoutAreaInput
}

input CityUpdateOneWithoutGeometryNestedInput {
  connect: CityWhereUniqueInput
  connectOrCreate: CityCreateOrConnectWithoutGeometryInput
  create: CityCreateWithoutGeometryInput
  delete: CityWhereInput
  disconnect: CityWhereInput
  update: CityUpdateToOneWithWhereWithoutGeometryInput
  upsert: CityUpsertWithoutGeometryInput
}

input CityUpdateToOneWithWhereWithoutAreaInput {
  data: CityUpdateWithoutAreaInput!
  where: CityWhereInput
}

input CityUpdateToOneWithWhereWithoutGeometryInput {
  data: CityUpdateWithoutGeometryInput!
  where: CityWhereInput
}

input CityUpdateWithoutAreaInput {
  Geometry: GeometryUpdateOneRequiredWithoutCityNestedInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CityUpdateWithoutGeometryInput {
  Area: AreaUpdateManyWithoutCityNestedInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CityUpsertWithoutAreaInput {
  create: CityCreateWithoutAreaInput!
  update: CityUpdateWithoutAreaInput!
  where: CityWhereInput
}

input CityUpsertWithoutGeometryInput {
  create: CityCreateWithoutGeometryInput!
  update: CityUpdateWithoutGeometryInput!
  where: CityWhereInput
}

input CityWhereInput {
  AND: [CityWhereInput!]
  Area: AreaListRelationFilter
  Geometry: GeometryWhereInput
  NOT: [CityWhereInput!]
  OR: [CityWhereInput!]
  geometryId: IntFilter
  id: StringFilter
  name: StringFilter
}

input CityWhereUniqueInput {
  AND: [CityWhereInput!]
  Area: AreaListRelationFilter
  Geometry: GeometryWhereInput
  NOT: [CityWhereInput!]
  OR: [CityWhereInput!]
  geometryId: Int
  id: String
  name: String
}

type Code {
  code: String
  id: ID
}

input CodeCountOrderByAggregateInput {
  authenitcationProviderId: SortOrder
  canUseAsRecovery: SortOrder
  code: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input CodeCreateInput {
  AuthenticationProvider: AuthenticationProviderCreateNestedOneWithoutCodepasswordInput
  canUseAsRecovery: Boolean
  code: String!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input CodeCreateManyInput {
  authenitcationProviderId: String
  canUseAsRecovery: Boolean
  code: String!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input CodeCreateNestedOneWithoutAuthenticationProviderInput {
  connect: CodeWhereUniqueInput
  connectOrCreate: CodeCreateOrConnectWithoutAuthenticationProviderInput
  create: CodeCreateWithoutAuthenticationProviderInput
}

input CodeCreateOrConnectWithoutAuthenticationProviderInput {
  create: CodeCreateWithoutAuthenticationProviderInput!
  where: CodeWhereUniqueInput!
}

input CodeCreateWithoutAuthenticationProviderInput {
  canUseAsRecovery: Boolean
  code: String!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input CodeDataInput {
  """Length is the total numbers that you want the code to be."""
  length: Int = 4
}

input CodeMaxOrderByAggregateInput {
  authenitcationProviderId: SortOrder
  canUseAsRecovery: SortOrder
  code: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input CodeMinOrderByAggregateInput {
  authenitcationProviderId: SortOrder
  canUseAsRecovery: SortOrder
  code: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input CodeNullableRelationFilter {
  is: CodeWhereInput
  isNot: CodeWhereInput
}

input CodeOrderByWithAggregationInput {
  _count: CodeCountOrderByAggregateInput
  _max: CodeMaxOrderByAggregateInput
  _min: CodeMinOrderByAggregateInput
  authenitcationProviderId: SortOrder
  canUseAsRecovery: SortOrder
  code: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input CodeOrderByWithRelationInput {
  AuthenticationProvider: AuthenticationProviderOrderByWithRelationInput
  authenitcationProviderId: SortOrder
  canUseAsRecovery: SortOrder
  code: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

union CodeResponse = Code | Error

enum CodeScalarFieldEnum {
  authenitcationProviderId
  canUseAsRecovery
  code
  createdAt
  id
  updatedAt
}

input CodeScalarWhereWithAggregatesInput {
  AND: [CodeScalarWhereWithAggregatesInput!]
  NOT: [CodeScalarWhereWithAggregatesInput!]
  OR: [CodeScalarWhereWithAggregatesInput!]
  authenitcationProviderId: StringNullableWithAggregatesFilter
  canUseAsRecovery: BoolNullableWithAggregatesFilter
  code: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input CodeUpdateInput {
  AuthenticationProvider: AuthenticationProviderUpdateOneWithoutCodepasswordNestedInput
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CodeUpdateManyMutationInput {
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CodeUpdateOneWithoutAuthenticationProviderNestedInput {
  connect: CodeWhereUniqueInput
  connectOrCreate: CodeCreateOrConnectWithoutAuthenticationProviderInput
  create: CodeCreateWithoutAuthenticationProviderInput
  delete: CodeWhereInput
  disconnect: CodeWhereInput
  update: CodeUpdateToOneWithWhereWithoutAuthenticationProviderInput
  upsert: CodeUpsertWithoutAuthenticationProviderInput
}

input CodeUpdateToOneWithWhereWithoutAuthenticationProviderInput {
  data: CodeUpdateWithoutAuthenticationProviderInput!
  where: CodeWhereInput
}

input CodeUpdateWithoutAuthenticationProviderInput {
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  code: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CodeUpsertWithoutAuthenticationProviderInput {
  create: CodeCreateWithoutAuthenticationProviderInput!
  update: CodeUpdateWithoutAuthenticationProviderInput!
  where: CodeWhereInput
}

input CodeWhereInput {
  AND: [CodeWhereInput!]
  AuthenticationProvider: AuthenticationProviderWhereInput
  NOT: [CodeWhereInput!]
  OR: [CodeWhereInput!]
  authenitcationProviderId: StringNullableFilter
  canUseAsRecovery: BoolNullableFilter
  code: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  updatedAt: DateTimeFilter
}

input CodeWhereUniqueInput {
  AND: [CodeWhereInput!]
  AuthenticationProvider: AuthenticationProviderWhereInput
  NOT: [CodeWhereInput!]
  OR: [CodeWhereInput!]
  authenitcationProviderId: String
  canUseAsRecovery: BoolNullableFilter
  code: StringFilter
  createdAt: DateTimeFilter
  id: String
  updatedAt: DateTimeFilter
}

type ComingArea {
  Area: Area
  Vote(cursor: VoteWhereUniqueInput, distinct: [VoteScalarFieldEnum!], orderBy: [VoteOrderByWithRelationInput!], skip: Int, take: Int, where: VoteWhereInput): [Vote!]!
  areaId: String
  createdAt: DateTime!
  h3Index5: String!
  h3Index6: String!
  id: ID!
  keywordSuggestions: [String!]!
  timesRequested: Int
  toBeNotifiedProfileIds: [String!]!
  updatedAt: DateTime!
}

input ComingAreaAvgOrderByAggregateInput {
  timesRequested: SortOrder
}

input ComingAreaCountOrderByAggregateInput {
  areaId: SortOrder
  createdAt: SortOrder
  h3Index5: SortOrder
  h3Index6: SortOrder
  id: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
  toBeNotifiedProfileIds: SortOrder
  updatedAt: SortOrder
}

input ComingAreaCreateInput {
  Area: AreaCreateNestedOneWithoutComingAreaInput
  Vote: VoteCreateNestedManyWithoutComingAreaInput
  createdAt: DateTime
  h3Index5: String!
  h3Index6: String!
  id: String
  keywordSuggestions: [String!]
  timesRequested: Int
  toBeNotifiedProfileIds: [String!]
  updatedAt: DateTime
}

input ComingAreaCreateManyInput {
  areaId: String
  createdAt: DateTime
  h3Index5: String!
  h3Index6: String!
  id: String
  keywordSuggestions: [String!]
  timesRequested: Int
  toBeNotifiedProfileIds: [String!]
  updatedAt: DateTime
}

input ComingAreaCreateNestedOneWithoutAreaInput {
  connect: ComingAreaWhereUniqueInput
  connectOrCreate: ComingAreaCreateOrConnectWithoutAreaInput
  create: ComingAreaCreateWithoutAreaInput
}

input ComingAreaCreateNestedOneWithoutVoteInput {
  connect: ComingAreaWhereUniqueInput
  connectOrCreate: ComingAreaCreateOrConnectWithoutVoteInput
  create: ComingAreaCreateWithoutVoteInput
}

input ComingAreaCreateOrConnectWithoutAreaInput {
  create: ComingAreaCreateWithoutAreaInput!
  where: ComingAreaWhereUniqueInput!
}

input ComingAreaCreateOrConnectWithoutVoteInput {
  create: ComingAreaCreateWithoutVoteInput!
  where: ComingAreaWhereUniqueInput!
}

input ComingAreaCreateWithoutAreaInput {
  Vote: VoteCreateNestedManyWithoutComingAreaInput
  createdAt: DateTime
  h3Index5: String!
  h3Index6: String!
  id: String
  keywordSuggestions: [String!]
  timesRequested: Int
  toBeNotifiedProfileIds: [String!]
  updatedAt: DateTime
}

input ComingAreaCreateWithoutVoteInput {
  Area: AreaCreateNestedOneWithoutComingAreaInput
  createdAt: DateTime
  h3Index5: String!
  h3Index6: String!
  id: String
  keywordSuggestions: [String!]
  timesRequested: Int
  toBeNotifiedProfileIds: [String!]
  updatedAt: DateTime
}

input ComingAreaCreatekeywordSuggestionsInput {
  set: [String!]!
}

input ComingAreaCreatetoBeNotifiedProfileIdsInput {
  set: [String!]!
}

input ComingAreaMaxOrderByAggregateInput {
  areaId: SortOrder
  createdAt: SortOrder
  h3Index5: SortOrder
  h3Index6: SortOrder
  id: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
}

input ComingAreaMinOrderByAggregateInput {
  areaId: SortOrder
  createdAt: SortOrder
  h3Index5: SortOrder
  h3Index6: SortOrder
  id: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
}

input ComingAreaNullableRelationFilter {
  is: ComingAreaWhereInput
  isNot: ComingAreaWhereInput
}

input ComingAreaOrderByWithAggregationInput {
  _avg: ComingAreaAvgOrderByAggregateInput
  _count: ComingAreaCountOrderByAggregateInput
  _max: ComingAreaMaxOrderByAggregateInput
  _min: ComingAreaMinOrderByAggregateInput
  _sum: ComingAreaSumOrderByAggregateInput
  areaId: SortOrder
  createdAt: SortOrder
  h3Index5: SortOrder
  h3Index6: SortOrder
  id: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
  toBeNotifiedProfileIds: SortOrder
  updatedAt: SortOrder
}

input ComingAreaOrderByWithRelationInput {
  Area: AreaOrderByWithRelationInput
  Vote: VoteOrderByRelationAggregateInput
  areaId: SortOrder
  createdAt: SortOrder
  h3Index5: SortOrder
  h3Index6: SortOrder
  id: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
  toBeNotifiedProfileIds: SortOrder
  updatedAt: SortOrder
}

type ComingAreaResponse {
  comingAreas: [ComingArea!]
  recommendedAreas: [H3Index6VenueRecommendation!]
  searchArea: Area
}

enum ComingAreaScalarFieldEnum {
  areaId
  createdAt
  h3Index5
  h3Index6
  id
  keywordSuggestions
  timesRequested
  toBeNotifiedProfileIds
  updatedAt
}

input ComingAreaScalarWhereWithAggregatesInput {
  AND: [ComingAreaScalarWhereWithAggregatesInput!]
  NOT: [ComingAreaScalarWhereWithAggregatesInput!]
  OR: [ComingAreaScalarWhereWithAggregatesInput!]
  areaId: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  h3Index5: StringWithAggregatesFilter
  h3Index6: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  keywordSuggestions: StringNullableListFilter
  timesRequested: IntNullableWithAggregatesFilter
  toBeNotifiedProfileIds: StringNullableListFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input ComingAreaSumOrderByAggregateInput {
  timesRequested: SortOrder
}

input ComingAreaUpdateInput {
  Area: AreaUpdateOneWithoutComingAreaNestedInput
  Vote: VoteUpdateManyWithoutComingAreaNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  keywordSuggestions: [String!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  toBeNotifiedProfileIds: [String!]
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ComingAreaUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  keywordSuggestions: [String!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  toBeNotifiedProfileIds: [String!]
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ComingAreaUpdateOneWithoutAreaNestedInput {
  connect: ComingAreaWhereUniqueInput
  connectOrCreate: ComingAreaCreateOrConnectWithoutAreaInput
  create: ComingAreaCreateWithoutAreaInput
  delete: ComingAreaWhereInput
  disconnect: ComingAreaWhereInput
  update: ComingAreaUpdateToOneWithWhereWithoutAreaInput
  upsert: ComingAreaUpsertWithoutAreaInput
}

input ComingAreaUpdateOneWithoutVoteNestedInput {
  connect: ComingAreaWhereUniqueInput
  connectOrCreate: ComingAreaCreateOrConnectWithoutVoteInput
  create: ComingAreaCreateWithoutVoteInput
  delete: ComingAreaWhereInput
  disconnect: ComingAreaWhereInput
  update: ComingAreaUpdateToOneWithWhereWithoutVoteInput
  upsert: ComingAreaUpsertWithoutVoteInput
}

input ComingAreaUpdateToOneWithWhereWithoutAreaInput {
  data: ComingAreaUpdateWithoutAreaInput!
  where: ComingAreaWhereInput
}

input ComingAreaUpdateToOneWithWhereWithoutVoteInput {
  data: ComingAreaUpdateWithoutVoteInput!
  where: ComingAreaWhereInput
}

input ComingAreaUpdateWithoutAreaInput {
  Vote: VoteUpdateManyWithoutComingAreaNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  keywordSuggestions: [String!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  toBeNotifiedProfileIds: [String!]
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ComingAreaUpdateWithoutVoteInput {
  Area: AreaUpdateOneWithoutComingAreaNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  keywordSuggestions: [String!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  toBeNotifiedProfileIds: [String!]
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ComingAreaUpdatekeywordSuggestionsInput {
  push: [String!]
  set: [String!]
}

input ComingAreaUpdatetoBeNotifiedProfileIdsInput {
  push: [String!]
  set: [String!]
}

input ComingAreaUpsertWithoutAreaInput {
  create: ComingAreaCreateWithoutAreaInput!
  update: ComingAreaUpdateWithoutAreaInput!
  where: ComingAreaWhereInput
}

input ComingAreaUpsertWithoutVoteInput {
  create: ComingAreaCreateWithoutVoteInput!
  update: ComingAreaUpdateWithoutVoteInput!
  where: ComingAreaWhereInput
}

input ComingAreaWhereInput {
  AND: [ComingAreaWhereInput!]
  Area: AreaWhereInput
  NOT: [ComingAreaWhereInput!]
  OR: [ComingAreaWhereInput!]
  Vote: VoteListRelationFilter
  areaId: StringNullableFilter
  createdAt: DateTimeFilter
  h3Index5: StringFilter
  h3Index6: StringFilter
  id: StringFilter
  keywordSuggestions: StringNullableListFilter
  timesRequested: IntNullableFilter
  toBeNotifiedProfileIds: StringNullableListFilter
  updatedAt: DateTimeFilter
}

input ComingAreaWhereUniqueInput {
  AND: [ComingAreaWhereInput!]
  Area: AreaWhereInput
  NOT: [ComingAreaWhereInput!]
  OR: [ComingAreaWhereInput!]
  Vote: VoteListRelationFilter
  areaId: String
  createdAt: DateTimeFilter
  h3Index5: StringFilter
  h3Index6: StringFilter
  id: String
  keywordSuggestions: StringNullableListFilter
  timesRequested: IntNullableFilter
  toBeNotifiedProfileIds: StringNullableListFilter
  updatedAt: DateTimeFilter
}

input ContactInput {
  name: String
  number: String
}

type Conversation {
  Members(cursor: ProfileWhereUniqueInput, distinct: [ProfileScalarFieldEnum!], orderBy: [ProfileOrderByWithRelationInput!], skip: Int, take: Int, where: ProfileWhereInput): [Profile!]!
  MembersConversationNotificationSetting(cursor: MemberConversationNotificationSettingWhereUniqueInput, distinct: [MemberConversationNotificationSettingScalarFieldEnum!], orderBy: [MemberConversationNotificationSettingOrderByWithRelationInput!], skip: Int, take: Int, where: MemberConversationNotificationSettingWhereInput): [MemberConversationNotificationSetting!]!
  Messages(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum!], orderBy: [MessageOrderByWithRelationInput!], skip: Int, take: Int, where: MessageWhereInput): [Message!]!
  id: ID!
  name: String
}

input ConversationCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
}

input ConversationCreateInput {
  Members: ProfileCreateNestedManyWithoutConversationsInput
  MembersConversationNotificationSetting: MemberConversationNotificationSettingCreateNestedManyWithoutConversationInput
  Messages: MessageCreateNestedManyWithoutConversationInput
  id: String
  name: String
}

input ConversationCreateManyInput {
  id: String
  name: String
}

input ConversationCreateNestedManyWithoutMembersInput {
  connect: [ConversationWhereUniqueInput!]
  connectOrCreate: [ConversationCreateOrConnectWithoutMembersInput!]
  create: [ConversationCreateWithoutMembersInput!]
}

input ConversationCreateNestedOneWithoutMembersConversationNotificationSettingInput {
  connect: ConversationWhereUniqueInput
  connectOrCreate: ConversationCreateOrConnectWithoutMembersConversationNotificationSettingInput
  create: ConversationCreateWithoutMembersConversationNotificationSettingInput
}

input ConversationCreateNestedOneWithoutMessagesInput {
  connect: ConversationWhereUniqueInput
  connectOrCreate: ConversationCreateOrConnectWithoutMessagesInput
  create: ConversationCreateWithoutMessagesInput
}

input ConversationCreateOrConnectWithoutMembersConversationNotificationSettingInput {
  create: ConversationCreateWithoutMembersConversationNotificationSettingInput!
  where: ConversationWhereUniqueInput!
}

input ConversationCreateOrConnectWithoutMembersInput {
  create: ConversationCreateWithoutMembersInput!
  where: ConversationWhereUniqueInput!
}

input ConversationCreateOrConnectWithoutMessagesInput {
  create: ConversationCreateWithoutMessagesInput!
  where: ConversationWhereUniqueInput!
}

input ConversationCreateWithoutMembersConversationNotificationSettingInput {
  Members: ProfileCreateNestedManyWithoutConversationsInput
  Messages: MessageCreateNestedManyWithoutConversationInput
  id: String
  name: String
}

input ConversationCreateWithoutMembersInput {
  MembersConversationNotificationSetting: MemberConversationNotificationSettingCreateNestedManyWithoutConversationInput
  Messages: MessageCreateNestedManyWithoutConversationInput
  id: String
  name: String
}

input ConversationCreateWithoutMessagesInput {
  Members: ProfileCreateNestedManyWithoutConversationsInput
  MembersConversationNotificationSetting: MemberConversationNotificationSettingCreateNestedManyWithoutConversationInput
  id: String
  name: String
}

input ConversationListRelationFilter {
  every: ConversationWhereInput
  none: ConversationWhereInput
  some: ConversationWhereInput
}

input ConversationMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
}

input ConversationMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
}

input ConversationNullableRelationFilter {
  is: ConversationWhereInput
  isNot: ConversationWhereInput
}

input ConversationOrderByRelationAggregateInput {
  _count: SortOrder
}

input ConversationOrderByWithAggregationInput {
  _count: ConversationCountOrderByAggregateInput
  _max: ConversationMaxOrderByAggregateInput
  _min: ConversationMinOrderByAggregateInput
  id: SortOrder
  name: SortOrder
}

input ConversationOrderByWithRelationInput {
  Members: ProfileOrderByRelationAggregateInput
  MembersConversationNotificationSetting: MemberConversationNotificationSettingOrderByRelationAggregateInput
  Messages: MessageOrderByRelationAggregateInput
  id: SortOrder
  name: SortOrder
}

enum ConversationScalarFieldEnum {
  id
  name
}

input ConversationScalarWhereInput {
  AND: [ConversationScalarWhereInput!]
  NOT: [ConversationScalarWhereInput!]
  OR: [ConversationScalarWhereInput!]
  id: StringFilter
  name: StringNullableFilter
}

input ConversationScalarWhereWithAggregatesInput {
  AND: [ConversationScalarWhereWithAggregatesInput!]
  NOT: [ConversationScalarWhereWithAggregatesInput!]
  OR: [ConversationScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
}

input ConversationUpdateInput {
  Members: ProfileUpdateManyWithoutConversationsNestedInput
  MembersConversationNotificationSetting: MemberConversationNotificationSettingUpdateManyWithoutConversationNestedInput
  Messages: MessageUpdateManyWithoutConversationNestedInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ConversationUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ConversationUpdateManyWithWhereWithoutMembersInput {
  data: ConversationUpdateManyMutationInput!
  where: ConversationScalarWhereInput!
}

input ConversationUpdateManyWithoutMembersNestedInput {
  connect: [ConversationWhereUniqueInput!]
  connectOrCreate: [ConversationCreateOrConnectWithoutMembersInput!]
  create: [ConversationCreateWithoutMembersInput!]
  delete: [ConversationWhereUniqueInput!]
  deleteMany: [ConversationScalarWhereInput!]
  disconnect: [ConversationWhereUniqueInput!]
  set: [ConversationWhereUniqueInput!]
  update: [ConversationUpdateWithWhereUniqueWithoutMembersInput!]
  updateMany: [ConversationUpdateManyWithWhereWithoutMembersInput!]
  upsert: [ConversationUpsertWithWhereUniqueWithoutMembersInput!]
}

input ConversationUpdateOneWithoutMembersConversationNotificationSettingNestedInput {
  connect: ConversationWhereUniqueInput
  connectOrCreate: ConversationCreateOrConnectWithoutMembersConversationNotificationSettingInput
  create: ConversationCreateWithoutMembersConversationNotificationSettingInput
  delete: ConversationWhereInput
  disconnect: ConversationWhereInput
  update: ConversationUpdateToOneWithWhereWithoutMembersConversationNotificationSettingInput
  upsert: ConversationUpsertWithoutMembersConversationNotificationSettingInput
}

input ConversationUpdateOneWithoutMessagesNestedInput {
  connect: ConversationWhereUniqueInput
  connectOrCreate: ConversationCreateOrConnectWithoutMessagesInput
  create: ConversationCreateWithoutMessagesInput
  delete: ConversationWhereInput
  disconnect: ConversationWhereInput
  update: ConversationUpdateToOneWithWhereWithoutMessagesInput
  upsert: ConversationUpsertWithoutMessagesInput
}

input ConversationUpdateToOneWithWhereWithoutMembersConversationNotificationSettingInput {
  data: ConversationUpdateWithoutMembersConversationNotificationSettingInput!
  where: ConversationWhereInput
}

input ConversationUpdateToOneWithWhereWithoutMessagesInput {
  data: ConversationUpdateWithoutMessagesInput!
  where: ConversationWhereInput
}

input ConversationUpdateWithWhereUniqueWithoutMembersInput {
  data: ConversationUpdateWithoutMembersInput!
  where: ConversationWhereUniqueInput!
}

input ConversationUpdateWithoutMembersConversationNotificationSettingInput {
  Members: ProfileUpdateManyWithoutConversationsNestedInput
  Messages: MessageUpdateManyWithoutConversationNestedInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ConversationUpdateWithoutMembersInput {
  MembersConversationNotificationSetting: MemberConversationNotificationSettingUpdateManyWithoutConversationNestedInput
  Messages: MessageUpdateManyWithoutConversationNestedInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ConversationUpdateWithoutMessagesInput {
  Members: ProfileUpdateManyWithoutConversationsNestedInput
  MembersConversationNotificationSetting: MemberConversationNotificationSettingUpdateManyWithoutConversationNestedInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ConversationUpsertWithWhereUniqueWithoutMembersInput {
  create: ConversationCreateWithoutMembersInput!
  update: ConversationUpdateWithoutMembersInput!
  where: ConversationWhereUniqueInput!
}

input ConversationUpsertWithoutMembersConversationNotificationSettingInput {
  create: ConversationCreateWithoutMembersConversationNotificationSettingInput!
  update: ConversationUpdateWithoutMembersConversationNotificationSettingInput!
  where: ConversationWhereInput
}

input ConversationUpsertWithoutMessagesInput {
  create: ConversationCreateWithoutMessagesInput!
  update: ConversationUpdateWithoutMessagesInput!
  where: ConversationWhereInput
}

input ConversationWhereInput {
  AND: [ConversationWhereInput!]
  Members: ProfileListRelationFilter
  MembersConversationNotificationSetting: MemberConversationNotificationSettingListRelationFilter
  Messages: MessageListRelationFilter
  NOT: [ConversationWhereInput!]
  OR: [ConversationWhereInput!]
  id: StringFilter
  name: StringNullableFilter
}

input ConversationWhereUniqueInput {
  AND: [ConversationWhereInput!]
  Members: ProfileListRelationFilter
  MembersConversationNotificationSetting: MemberConversationNotificationSettingListRelationFilter
  Messages: MessageListRelationFilter
  NOT: [ConversationWhereInput!]
  OR: [ConversationWhereInput!]
  id: String
  name: StringNullableFilter
}

type Coords {
  latitude: Float
  longitude: Float
}

input CoordsInput {
  latitude: Float!
  longitude: Float!
}

type Country {
  Area(cursor: AreaWhereUniqueInput, distinct: [AreaScalarFieldEnum!], orderBy: [AreaOrderByWithRelationInput!], skip: Int, take: Int, where: AreaWhereInput): [Area!]!
  flag: String!
  id: ID!
  isoCode: String!
  name: String!
}

input CountryCountOrderByAggregateInput {
  flag: SortOrder
  id: SortOrder
  isoCode: SortOrder
  name: SortOrder
}

input CountryCreateInput {
  Area: AreaCreateNestedManyWithoutCountryInput
  flag: String!
  id: String
  isoCode: String!
  name: String!
}

input CountryCreateManyInput {
  flag: String!
  id: String
  isoCode: String!
  name: String!
}

input CountryCreateNestedOneWithoutAreaInput {
  connect: CountryWhereUniqueInput
  connectOrCreate: CountryCreateOrConnectWithoutAreaInput
  create: CountryCreateWithoutAreaInput
}

input CountryCreateOrConnectWithoutAreaInput {
  create: CountryCreateWithoutAreaInput!
  where: CountryWhereUniqueInput!
}

input CountryCreateWithoutAreaInput {
  flag: String!
  id: String
  isoCode: String!
  name: String!
}

input CountryMaxOrderByAggregateInput {
  flag: SortOrder
  id: SortOrder
  isoCode: SortOrder
  name: SortOrder
}

input CountryMinOrderByAggregateInput {
  flag: SortOrder
  id: SortOrder
  isoCode: SortOrder
  name: SortOrder
}

input CountryOrderByWithAggregationInput {
  _count: CountryCountOrderByAggregateInput
  _max: CountryMaxOrderByAggregateInput
  _min: CountryMinOrderByAggregateInput
  flag: SortOrder
  id: SortOrder
  isoCode: SortOrder
  name: SortOrder
}

input CountryOrderByWithRelationInput {
  Area: AreaOrderByRelationAggregateInput
  flag: SortOrder
  id: SortOrder
  isoCode: SortOrder
  name: SortOrder
}

input CountryRelationFilter {
  is: CountryWhereInput
  isNot: CountryWhereInput
}

type CountryResponseObject {
  currency: String
  flag: String
  isoCode: String
  latitude: String
  longitude: String
  name: String
  phonecode: String
}

enum CountryScalarFieldEnum {
  flag
  id
  isoCode
  name
}

input CountryScalarWhereWithAggregatesInput {
  AND: [CountryScalarWhereWithAggregatesInput!]
  NOT: [CountryScalarWhereWithAggregatesInput!]
  OR: [CountryScalarWhereWithAggregatesInput!]
  flag: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  isoCode: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
}

input CountryUpdateInput {
  Area: AreaUpdateManyWithoutCountryNestedInput
  flag: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CountryUpdateManyMutationInput {
  flag: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CountryUpdateOneRequiredWithoutAreaNestedInput {
  connect: CountryWhereUniqueInput
  connectOrCreate: CountryCreateOrConnectWithoutAreaInput
  create: CountryCreateWithoutAreaInput
  update: CountryUpdateToOneWithWhereWithoutAreaInput
  upsert: CountryUpsertWithoutAreaInput
}

input CountryUpdateToOneWithWhereWithoutAreaInput {
  data: CountryUpdateWithoutAreaInput!
  where: CountryWhereInput
}

input CountryUpdateWithoutAreaInput {
  flag: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CountryUpsertWithoutAreaInput {
  create: CountryCreateWithoutAreaInput!
  update: CountryUpdateWithoutAreaInput!
  where: CountryWhereInput
}

input CountryWhereInput {
  AND: [CountryWhereInput!]
  Area: AreaListRelationFilter
  NOT: [CountryWhereInput!]
  OR: [CountryWhereInput!]
  flag: StringFilter
  id: StringFilter
  isoCode: StringFilter
  name: StringFilter
}

input CountryWhereUniqueInput {
  AND: [CountryWhereInput!]
  Area: AreaListRelationFilter
  NOT: [CountryWhereInput!]
  OR: [CountryWhereInput!]
  flag: StringFilter
  id: String
  isoCode: String
  name: String
}

input CreatePersonalDataInput {
  EmailInput: EmailInput
  PhoneInput: PhoneInput
  PrivacyPolicyId: ID
  ServicesId: ID
  address: String!
  birthday: DateTime!
  fullname: String
  password: String!
  username: String!
}

input CreateVenueDataInput {
  EmailInput: EmailInput
  PhoneInput: PhoneInput
  PrivacyPolicyId: ID
  ServicesId: ID
  address: String!
  birthday: DateTime
  capacity: String!
  contacts: [VenueContactInput!]!
  description: String
  established: DateTime!
  ownername: String!
  password: String!
  photos: PhotoCreateManyProfileInputEnvelope
  venuelocalname: String!
  venuename: String!
  venuetypes: [String!]
  venueusername: String!
}

type Credentials {
  AuthenticationProvider: AuthenticationProvider
  LegalAgreement(cursor: LegalAgreementWhereUniqueInput, distinct: [LegalAgreementScalarFieldEnum!], orderBy: [LegalAgreementOrderByWithRelationInput!], skip: Int, take: Int, where: LegalAgreementWhereInput): [LegalAgreement!]!
  Profile: Profile!
  authenticationProviderId: String
  createdtAt: DateTime!
  id: ID!
  profileId: String!
  updatedAt: DateTime!
}

input CredentialsCountOrderByAggregateInput {
  authenticationProviderId: SortOrder
  createdtAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input CredentialsCreateInput {
  AuthenticationProvider: AuthenticationProviderCreateNestedOneWithoutCredentialsInput
  LegalAgreement: LegalAgreementCreateNestedManyWithoutCredentialsInput
  Profile: ProfileCreateNestedOneWithoutCredentialsInput!
  createdtAt: DateTime
  id: String
  updatedAt: DateTime
}

input CredentialsCreateManyInput {
  authenticationProviderId: String
  createdtAt: DateTime
  id: String
  profileId: String!
  updatedAt: DateTime
}

input CredentialsCreateNestedOneWithoutAuthenticationProviderInput {
  connect: CredentialsWhereUniqueInput
  connectOrCreate: CredentialsCreateOrConnectWithoutAuthenticationProviderInput
  create: CredentialsCreateWithoutAuthenticationProviderInput
}

input CredentialsCreateNestedOneWithoutLegalAgreementInput {
  connect: CredentialsWhereUniqueInput
  connectOrCreate: CredentialsCreateOrConnectWithoutLegalAgreementInput
  create: CredentialsCreateWithoutLegalAgreementInput
}

input CredentialsCreateNestedOneWithoutProfileInput {
  connect: CredentialsWhereUniqueInput
  connectOrCreate: CredentialsCreateOrConnectWithoutProfileInput
  create: CredentialsCreateWithoutProfileInput
}

input CredentialsCreateOrConnectWithoutAuthenticationProviderInput {
  create: CredentialsCreateWithoutAuthenticationProviderInput!
  where: CredentialsWhereUniqueInput!
}

input CredentialsCreateOrConnectWithoutLegalAgreementInput {
  create: CredentialsCreateWithoutLegalAgreementInput!
  where: CredentialsWhereUniqueInput!
}

input CredentialsCreateOrConnectWithoutProfileInput {
  create: CredentialsCreateWithoutProfileInput!
  where: CredentialsWhereUniqueInput!
}

input CredentialsCreateWithoutAuthenticationProviderInput {
  LegalAgreement: LegalAgreementCreateNestedManyWithoutCredentialsInput
  Profile: ProfileCreateNestedOneWithoutCredentialsInput!
  createdtAt: DateTime
  id: String
  updatedAt: DateTime
}

input CredentialsCreateWithoutLegalAgreementInput {
  AuthenticationProvider: AuthenticationProviderCreateNestedOneWithoutCredentialsInput
  Profile: ProfileCreateNestedOneWithoutCredentialsInput!
  createdtAt: DateTime
  id: String
  updatedAt: DateTime
}

input CredentialsCreateWithoutProfileInput {
  AuthenticationProvider: AuthenticationProviderCreateNestedOneWithoutCredentialsInput
  LegalAgreement: LegalAgreementCreateNestedManyWithoutCredentialsInput
  createdtAt: DateTime
  id: String
  updatedAt: DateTime
}

input CredentialsMaxOrderByAggregateInput {
  authenticationProviderId: SortOrder
  createdtAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input CredentialsMinOrderByAggregateInput {
  authenticationProviderId: SortOrder
  createdtAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input CredentialsNullableRelationFilter {
  is: CredentialsWhereInput
  isNot: CredentialsWhereInput
}

input CredentialsOrderByWithAggregationInput {
  _count: CredentialsCountOrderByAggregateInput
  _max: CredentialsMaxOrderByAggregateInput
  _min: CredentialsMinOrderByAggregateInput
  authenticationProviderId: SortOrder
  createdtAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input CredentialsOrderByWithRelationInput {
  AuthenticationProvider: AuthenticationProviderOrderByWithRelationInput
  LegalAgreement: LegalAgreementOrderByRelationAggregateInput
  Profile: ProfileOrderByWithRelationInput
  authenticationProviderId: SortOrder
  createdtAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

enum CredentialsScalarFieldEnum {
  authenticationProviderId
  createdtAt
  id
  profileId
  updatedAt
}

input CredentialsScalarWhereWithAggregatesInput {
  AND: [CredentialsScalarWhereWithAggregatesInput!]
  NOT: [CredentialsScalarWhereWithAggregatesInput!]
  OR: [CredentialsScalarWhereWithAggregatesInput!]
  authenticationProviderId: StringNullableWithAggregatesFilter
  createdtAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input CredentialsUpdateInput {
  AuthenticationProvider: AuthenticationProviderUpdateOneWithoutCredentialsNestedInput
  LegalAgreement: LegalAgreementUpdateManyWithoutCredentialsNestedInput
  Profile: ProfileUpdateOneRequiredWithoutCredentialsNestedInput
  createdtAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CredentialsUpdateManyMutationInput {
  createdtAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CredentialsUpdateOneWithoutAuthenticationProviderNestedInput {
  connect: CredentialsWhereUniqueInput
  connectOrCreate: CredentialsCreateOrConnectWithoutAuthenticationProviderInput
  create: CredentialsCreateWithoutAuthenticationProviderInput
  delete: CredentialsWhereInput
  disconnect: CredentialsWhereInput
  update: CredentialsUpdateToOneWithWhereWithoutAuthenticationProviderInput
  upsert: CredentialsUpsertWithoutAuthenticationProviderInput
}

input CredentialsUpdateOneWithoutLegalAgreementNestedInput {
  connect: CredentialsWhereUniqueInput
  connectOrCreate: CredentialsCreateOrConnectWithoutLegalAgreementInput
  create: CredentialsCreateWithoutLegalAgreementInput
  delete: CredentialsWhereInput
  disconnect: CredentialsWhereInput
  update: CredentialsUpdateToOneWithWhereWithoutLegalAgreementInput
  upsert: CredentialsUpsertWithoutLegalAgreementInput
}

input CredentialsUpdateOneWithoutProfileNestedInput {
  connect: CredentialsWhereUniqueInput
  connectOrCreate: CredentialsCreateOrConnectWithoutProfileInput
  create: CredentialsCreateWithoutProfileInput
  delete: CredentialsWhereInput
  disconnect: CredentialsWhereInput
  update: CredentialsUpdateToOneWithWhereWithoutProfileInput
  upsert: CredentialsUpsertWithoutProfileInput
}

input CredentialsUpdateToOneWithWhereWithoutAuthenticationProviderInput {
  data: CredentialsUpdateWithoutAuthenticationProviderInput!
  where: CredentialsWhereInput
}

input CredentialsUpdateToOneWithWhereWithoutLegalAgreementInput {
  data: CredentialsUpdateWithoutLegalAgreementInput!
  where: CredentialsWhereInput
}

input CredentialsUpdateToOneWithWhereWithoutProfileInput {
  data: CredentialsUpdateWithoutProfileInput!
  where: CredentialsWhereInput
}

input CredentialsUpdateWithoutAuthenticationProviderInput {
  LegalAgreement: LegalAgreementUpdateManyWithoutCredentialsNestedInput
  Profile: ProfileUpdateOneRequiredWithoutCredentialsNestedInput
  createdtAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CredentialsUpdateWithoutLegalAgreementInput {
  AuthenticationProvider: AuthenticationProviderUpdateOneWithoutCredentialsNestedInput
  Profile: ProfileUpdateOneRequiredWithoutCredentialsNestedInput
  createdtAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CredentialsUpdateWithoutProfileInput {
  AuthenticationProvider: AuthenticationProviderUpdateOneWithoutCredentialsNestedInput
  LegalAgreement: LegalAgreementUpdateManyWithoutCredentialsNestedInput
  createdtAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CredentialsUpsertWithoutAuthenticationProviderInput {
  create: CredentialsCreateWithoutAuthenticationProviderInput!
  update: CredentialsUpdateWithoutAuthenticationProviderInput!
  where: CredentialsWhereInput
}

input CredentialsUpsertWithoutLegalAgreementInput {
  create: CredentialsCreateWithoutLegalAgreementInput!
  update: CredentialsUpdateWithoutLegalAgreementInput!
  where: CredentialsWhereInput
}

input CredentialsUpsertWithoutProfileInput {
  create: CredentialsCreateWithoutProfileInput!
  update: CredentialsUpdateWithoutProfileInput!
  where: CredentialsWhereInput
}

input CredentialsWhereInput {
  AND: [CredentialsWhereInput!]
  AuthenticationProvider: AuthenticationProviderWhereInput
  LegalAgreement: LegalAgreementListRelationFilter
  NOT: [CredentialsWhereInput!]
  OR: [CredentialsWhereInput!]
  Profile: ProfileWhereInput
  authenticationProviderId: StringNullableFilter
  createdtAt: DateTimeFilter
  id: StringFilter
  profileId: StringFilter
  updatedAt: DateTimeFilter
}

input CredentialsWhereUniqueInput {
  AND: [CredentialsWhereInput!]
  AuthenticationProvider: AuthenticationProviderWhereInput
  LegalAgreement: LegalAgreementListRelationFilter
  NOT: [CredentialsWhereInput!]
  OR: [CredentialsWhereInput!]
  Profile: ProfileWhereInput
  authenticationProviderId: String
  createdtAt: DateTimeFilter
  id: String
  profileId: String
  updatedAt: DateTimeFilter
}

input CustomCodeWhereInput {
  Authenticators: Authenticators
}

input CustomProfileWhereInput {
  Phone: PhoneInput
  email: String
  username: String
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input DateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

type DetailInformation {
  Profile: Profile!
  Tags(cursor: TagWhereUniqueInput, distinct: [TagScalarFieldEnum!], orderBy: [TagOrderByWithRelationInput!], skip: Int, take: Int, where: TagWhereInput): [Tag!]!
  capacity: Int
  description: String
  established: DateTime
  id: ID!
  profileId: String!
}

input DetailInformationAvgOrderByAggregateInput {
  capacity: SortOrder
}

input DetailInformationCountOrderByAggregateInput {
  capacity: SortOrder
  description: SortOrder
  established: SortOrder
  id: SortOrder
  profileId: SortOrder
}

input DetailInformationCreateInput {
  Profile: ProfileCreateNestedOneWithoutDetailInformationInput!
  Tags: TagCreateNestedManyWithoutDetailInformationInput
  capacity: Int
  description: String
  established: DateTime
  id: String
}

input DetailInformationCreateManyInput {
  capacity: Int
  description: String
  established: DateTime
  id: String
  profileId: String!
}

input DetailInformationCreateNestedManyWithoutTagsInput {
  connect: [DetailInformationWhereUniqueInput!]
  connectOrCreate: [DetailInformationCreateOrConnectWithoutTagsInput!]
  create: [DetailInformationCreateWithoutTagsInput!]
}

input DetailInformationCreateNestedOneWithoutProfileInput {
  connect: DetailInformationWhereUniqueInput
  connectOrCreate: DetailInformationCreateOrConnectWithoutProfileInput
  create: DetailInformationCreateWithoutProfileInput
}

input DetailInformationCreateOrConnectWithoutProfileInput {
  create: DetailInformationCreateWithoutProfileInput!
  where: DetailInformationWhereUniqueInput!
}

input DetailInformationCreateOrConnectWithoutTagsInput {
  create: DetailInformationCreateWithoutTagsInput!
  where: DetailInformationWhereUniqueInput!
}

input DetailInformationCreateWithoutProfileInput {
  Tags: TagCreateNestedManyWithoutDetailInformationInput
  capacity: Int
  description: String
  established: DateTime
  id: String
}

input DetailInformationCreateWithoutTagsInput {
  Profile: ProfileCreateNestedOneWithoutDetailInformationInput!
  capacity: Int
  description: String
  established: DateTime
  id: String
}

input DetailInformationListRelationFilter {
  every: DetailInformationWhereInput
  none: DetailInformationWhereInput
  some: DetailInformationWhereInput
}

input DetailInformationMaxOrderByAggregateInput {
  capacity: SortOrder
  description: SortOrder
  established: SortOrder
  id: SortOrder
  profileId: SortOrder
}

input DetailInformationMinOrderByAggregateInput {
  capacity: SortOrder
  description: SortOrder
  established: SortOrder
  id: SortOrder
  profileId: SortOrder
}

input DetailInformationNullableRelationFilter {
  is: DetailInformationWhereInput
  isNot: DetailInformationWhereInput
}

input DetailInformationOrderByRelationAggregateInput {
  _count: SortOrder
}

input DetailInformationOrderByWithAggregationInput {
  _avg: DetailInformationAvgOrderByAggregateInput
  _count: DetailInformationCountOrderByAggregateInput
  _max: DetailInformationMaxOrderByAggregateInput
  _min: DetailInformationMinOrderByAggregateInput
  _sum: DetailInformationSumOrderByAggregateInput
  capacity: SortOrder
  description: SortOrder
  established: SortOrder
  id: SortOrder
  profileId: SortOrder
}

input DetailInformationOrderByWithRelationInput {
  Profile: ProfileOrderByWithRelationInput
  Tags: TagOrderByRelationAggregateInput
  capacity: SortOrder
  description: SortOrder
  established: SortOrder
  id: SortOrder
  profileId: SortOrder
}

enum DetailInformationScalarFieldEnum {
  capacity
  description
  established
  id
  profileId
}

input DetailInformationScalarWhereInput {
  AND: [DetailInformationScalarWhereInput!]
  NOT: [DetailInformationScalarWhereInput!]
  OR: [DetailInformationScalarWhereInput!]
  capacity: IntNullableFilter
  description: StringNullableFilter
  established: DateTimeNullableFilter
  id: StringFilter
  profileId: StringFilter
}

input DetailInformationScalarWhereWithAggregatesInput {
  AND: [DetailInformationScalarWhereWithAggregatesInput!]
  NOT: [DetailInformationScalarWhereWithAggregatesInput!]
  OR: [DetailInformationScalarWhereWithAggregatesInput!]
  capacity: IntNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  established: DateTimeNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
}

input DetailInformationSumOrderByAggregateInput {
  capacity: SortOrder
}

input DetailInformationUpdateInput {
  Profile: ProfileUpdateOneRequiredWithoutDetailInformationNestedInput
  Tags: TagUpdateManyWithoutDetailInformationNestedInput
  capacity: NullableIntFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  established: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input DetailInformationUpdateManyMutationInput {
  capacity: NullableIntFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  established: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input DetailInformationUpdateManyWithWhereWithoutTagsInput {
  data: DetailInformationUpdateManyMutationInput!
  where: DetailInformationScalarWhereInput!
}

input DetailInformationUpdateManyWithoutTagsNestedInput {
  connect: [DetailInformationWhereUniqueInput!]
  connectOrCreate: [DetailInformationCreateOrConnectWithoutTagsInput!]
  create: [DetailInformationCreateWithoutTagsInput!]
  delete: [DetailInformationWhereUniqueInput!]
  deleteMany: [DetailInformationScalarWhereInput!]
  disconnect: [DetailInformationWhereUniqueInput!]
  set: [DetailInformationWhereUniqueInput!]
  update: [DetailInformationUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [DetailInformationUpdateManyWithWhereWithoutTagsInput!]
  upsert: [DetailInformationUpsertWithWhereUniqueWithoutTagsInput!]
}

input DetailInformationUpdateOneWithoutProfileNestedInput {
  connect: DetailInformationWhereUniqueInput
  connectOrCreate: DetailInformationCreateOrConnectWithoutProfileInput
  create: DetailInformationCreateWithoutProfileInput
  delete: DetailInformationWhereInput
  disconnect: DetailInformationWhereInput
  update: DetailInformationUpdateToOneWithWhereWithoutProfileInput
  upsert: DetailInformationUpsertWithoutProfileInput
}

input DetailInformationUpdateToOneWithWhereWithoutProfileInput {
  data: DetailInformationUpdateWithoutProfileInput!
  where: DetailInformationWhereInput
}

input DetailInformationUpdateWithWhereUniqueWithoutTagsInput {
  data: DetailInformationUpdateWithoutTagsInput!
  where: DetailInformationWhereUniqueInput!
}

input DetailInformationUpdateWithoutProfileInput {
  Tags: TagUpdateManyWithoutDetailInformationNestedInput
  capacity: NullableIntFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  established: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input DetailInformationUpdateWithoutTagsInput {
  Profile: ProfileUpdateOneRequiredWithoutDetailInformationNestedInput
  capacity: NullableIntFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  established: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input DetailInformationUpsertWithWhereUniqueWithoutTagsInput {
  create: DetailInformationCreateWithoutTagsInput!
  update: DetailInformationUpdateWithoutTagsInput!
  where: DetailInformationWhereUniqueInput!
}

input DetailInformationUpsertWithoutProfileInput {
  create: DetailInformationCreateWithoutProfileInput!
  update: DetailInformationUpdateWithoutProfileInput!
  where: DetailInformationWhereInput
}

input DetailInformationWhereInput {
  AND: [DetailInformationWhereInput!]
  NOT: [DetailInformationWhereInput!]
  OR: [DetailInformationWhereInput!]
  Profile: ProfileWhereInput
  Tags: TagListRelationFilter
  capacity: IntNullableFilter
  description: StringNullableFilter
  established: DateTimeNullableFilter
  id: StringFilter
  profileId: StringFilter
}

input DetailInformationWhereUniqueInput {
  AND: [DetailInformationWhereInput!]
  NOT: [DetailInformationWhereInput!]
  OR: [DetailInformationWhereInput!]
  Profile: ProfileWhereInput
  Tags: TagListRelationFilter
  capacity: IntNullableFilter
  description: StringNullableFilter
  established: DateTimeNullableFilter
  id: String
  profileId: String
}

type Device {
  DeviceManager: DeviceManager!
  PushToken: PushToken
  createdAt: DateTime
  deviceManagerId: String!
  deviceType: String!
  id: ID!
  pushTokenId: String
  updatedAt: DateTime
}

input DeviceCountOrderByAggregateInput {
  createdAt: SortOrder
  deviceManagerId: SortOrder
  deviceType: SortOrder
  id: SortOrder
  pushTokenId: SortOrder
  updatedAt: SortOrder
}

input DeviceCreateInput {
  DeviceManager: DeviceManagerCreateNestedOneWithoutDeviceInput!
  PushToken: PushTokenCreateNestedOneWithoutDeviceInput
  createdAt: DateTime
  deviceType: String!
  id: String
  updatedAt: DateTime
}

input DeviceCreateManyInput {
  createdAt: DateTime
  deviceManagerId: String!
  deviceType: String!
  id: String
  pushTokenId: String
  updatedAt: DateTime
}

input DeviceCreateNestedOneWithoutDeviceManagerInput {
  connect: DeviceWhereUniqueInput
  connectOrCreate: DeviceCreateOrConnectWithoutDeviceManagerInput
  create: DeviceCreateWithoutDeviceManagerInput
}

input DeviceCreateNestedOneWithoutPushTokenInput {
  connect: DeviceWhereUniqueInput
  connectOrCreate: DeviceCreateOrConnectWithoutPushTokenInput
  create: DeviceCreateWithoutPushTokenInput
}

input DeviceCreateOrConnectWithoutDeviceManagerInput {
  create: DeviceCreateWithoutDeviceManagerInput!
  where: DeviceWhereUniqueInput!
}

input DeviceCreateOrConnectWithoutPushTokenInput {
  create: DeviceCreateWithoutPushTokenInput!
  where: DeviceWhereUniqueInput!
}

input DeviceCreateWithoutDeviceManagerInput {
  PushToken: PushTokenCreateNestedOneWithoutDeviceInput
  createdAt: DateTime
  deviceType: String!
  id: String
  updatedAt: DateTime
}

input DeviceCreateWithoutPushTokenInput {
  DeviceManager: DeviceManagerCreateNestedOneWithoutDeviceInput!
  createdAt: DateTime
  deviceType: String!
  id: String
  updatedAt: DateTime
}

type DeviceManager {
  Device: Device
  DeviceProfiles(cursor: DeviceProfileWhereUniqueInput, distinct: [DeviceProfileScalarFieldEnum!], orderBy: [DeviceProfileOrderByWithRelationInput!], skip: Int, take: Int, where: DeviceProfileWhereInput): [AuthorizationDeviceProfile!]!
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
}

input DeviceManagerCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input DeviceManagerCreateInput {
  Device: DeviceCreateNestedOneWithoutDeviceManagerInput
  DeviceProfiles: DeviceProfileCreateNestedManyWithoutDeviceManagerInput
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input DeviceManagerCreateManyInput {
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input DeviceManagerCreateNestedOneWithoutDeviceInput {
  connect: DeviceManagerWhereUniqueInput
  connectOrCreate: DeviceManagerCreateOrConnectWithoutDeviceInput
  create: DeviceManagerCreateWithoutDeviceInput
}

input DeviceManagerCreateNestedOneWithoutDeviceProfilesInput {
  connect: DeviceManagerWhereUniqueInput
  connectOrCreate: DeviceManagerCreateOrConnectWithoutDeviceProfilesInput
  create: DeviceManagerCreateWithoutDeviceProfilesInput
}

input DeviceManagerCreateOrConnectWithoutDeviceInput {
  create: DeviceManagerCreateWithoutDeviceInput!
  where: DeviceManagerWhereUniqueInput!
}

input DeviceManagerCreateOrConnectWithoutDeviceProfilesInput {
  create: DeviceManagerCreateWithoutDeviceProfilesInput!
  where: DeviceManagerWhereUniqueInput!
}

input DeviceManagerCreateWithoutDeviceInput {
  DeviceProfiles: DeviceProfileCreateNestedManyWithoutDeviceManagerInput
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input DeviceManagerCreateWithoutDeviceProfilesInput {
  Device: DeviceCreateNestedOneWithoutDeviceManagerInput
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

type DeviceManagerDeviceProfiles {
  DeviceProfiles: [AuthorizationDeviceProfile!]
}

union DeviceManagerDeviceProfilesResponseUnion = DeviceManagerDeviceProfiles | Error

input DeviceManagerMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input DeviceManagerMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input DeviceManagerOrderByWithAggregationInput {
  _count: DeviceManagerCountOrderByAggregateInput
  _max: DeviceManagerMaxOrderByAggregateInput
  _min: DeviceManagerMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input DeviceManagerOrderByWithRelationInput {
  Device: DeviceOrderByWithRelationInput
  DeviceProfiles: DeviceProfileOrderByRelationAggregateInput
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input DeviceManagerRelationFilter {
  is: DeviceManagerWhereInput
  isNot: DeviceManagerWhereInput
}

enum DeviceManagerScalarFieldEnum {
  createdAt
  id
  updatedAt
}

input DeviceManagerScalarWhereWithAggregatesInput {
  AND: [DeviceManagerScalarWhereWithAggregatesInput!]
  NOT: [DeviceManagerScalarWhereWithAggregatesInput!]
  OR: [DeviceManagerScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input DeviceManagerUpdateInput {
  Device: DeviceUpdateOneWithoutDeviceManagerNestedInput
  DeviceProfiles: DeviceProfileUpdateManyWithoutDeviceManagerNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DeviceManagerUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DeviceManagerUpdateOneRequiredWithoutDeviceNestedInput {
  connect: DeviceManagerWhereUniqueInput
  connectOrCreate: DeviceManagerCreateOrConnectWithoutDeviceInput
  create: DeviceManagerCreateWithoutDeviceInput
  update: DeviceManagerUpdateToOneWithWhereWithoutDeviceInput
  upsert: DeviceManagerUpsertWithoutDeviceInput
}

input DeviceManagerUpdateOneRequiredWithoutDeviceProfilesNestedInput {
  connect: DeviceManagerWhereUniqueInput
  connectOrCreate: DeviceManagerCreateOrConnectWithoutDeviceProfilesInput
  create: DeviceManagerCreateWithoutDeviceProfilesInput
  update: DeviceManagerUpdateToOneWithWhereWithoutDeviceProfilesInput
  upsert: DeviceManagerUpsertWithoutDeviceProfilesInput
}

input DeviceManagerUpdateToOneWithWhereWithoutDeviceInput {
  data: DeviceManagerUpdateWithoutDeviceInput!
  where: DeviceManagerWhereInput
}

input DeviceManagerUpdateToOneWithWhereWithoutDeviceProfilesInput {
  data: DeviceManagerUpdateWithoutDeviceProfilesInput!
  where: DeviceManagerWhereInput
}

input DeviceManagerUpdateWithoutDeviceInput {
  DeviceProfiles: DeviceProfileUpdateManyWithoutDeviceManagerNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DeviceManagerUpdateWithoutDeviceProfilesInput {
  Device: DeviceUpdateOneWithoutDeviceManagerNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DeviceManagerUpsertWithoutDeviceInput {
  create: DeviceManagerCreateWithoutDeviceInput!
  update: DeviceManagerUpdateWithoutDeviceInput!
  where: DeviceManagerWhereInput
}

input DeviceManagerUpsertWithoutDeviceProfilesInput {
  create: DeviceManagerCreateWithoutDeviceProfilesInput!
  update: DeviceManagerUpdateWithoutDeviceProfilesInput!
  where: DeviceManagerWhereInput
}

input DeviceManagerWhereInput {
  AND: [DeviceManagerWhereInput!]
  Device: DeviceWhereInput
  DeviceProfiles: DeviceProfileListRelationFilter
  NOT: [DeviceManagerWhereInput!]
  OR: [DeviceManagerWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  updatedAt: DateTimeFilter
}

input DeviceManagerWhereUniqueInput {
  AND: [DeviceManagerWhereInput!]
  Device: DeviceWhereInput
  DeviceProfiles: DeviceProfileListRelationFilter
  NOT: [DeviceManagerWhereInput!]
  OR: [DeviceManagerWhereInput!]
  createdAt: DateTimeFilter
  id: String
  updatedAt: DateTimeFilter
}

input DeviceMaxOrderByAggregateInput {
  createdAt: SortOrder
  deviceManagerId: SortOrder
  deviceType: SortOrder
  id: SortOrder
  pushTokenId: SortOrder
  updatedAt: SortOrder
}

input DeviceMinOrderByAggregateInput {
  createdAt: SortOrder
  deviceManagerId: SortOrder
  deviceType: SortOrder
  id: SortOrder
  pushTokenId: SortOrder
  updatedAt: SortOrder
}

input DeviceNullableRelationFilter {
  is: DeviceWhereInput
  isNot: DeviceWhereInput
}

input DeviceOrderByWithAggregationInput {
  _count: DeviceCountOrderByAggregateInput
  _max: DeviceMaxOrderByAggregateInput
  _min: DeviceMinOrderByAggregateInput
  createdAt: SortOrder
  deviceManagerId: SortOrder
  deviceType: SortOrder
  id: SortOrder
  pushTokenId: SortOrder
  updatedAt: SortOrder
}

input DeviceOrderByWithRelationInput {
  DeviceManager: DeviceManagerOrderByWithRelationInput
  PushToken: PushTokenOrderByWithRelationInput
  createdAt: SortOrder
  deviceManagerId: SortOrder
  deviceType: SortOrder
  id: SortOrder
  pushTokenId: SortOrder
  updatedAt: SortOrder
}

input DeviceProfileCountOrderByAggregateInput {
  AppType: SortOrder
  ProfileType: SortOrder
  createdAt: SortOrder
  deviceManagerId: SortOrder
  id: SortOrder
  isActive: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input DeviceProfileCreateInput {
  AppType: AppType!
  DeviceManager: DeviceManagerCreateNestedOneWithoutDeviceProfilesInput!
  ProfileType: ProfileType!
  RefreshToken: RefreshTokenCreateNestedOneWithoutDeviceProfileInput
  createdAt: DateTime
  id: String
  isActive: Boolean!
  profileId: String!
  updatedAt: DateTime
}

input DeviceProfileCreateManyDeviceManagerInput {
  AppType: AppType!
  ProfileType: ProfileType!
  createdAt: DateTime
  id: String
  isActive: Boolean!
  profileId: String!
  updatedAt: DateTime
}

input DeviceProfileCreateManyDeviceManagerInputEnvelope {
  data: [DeviceProfileCreateManyDeviceManagerInput!]!
  skipDuplicates: Boolean
}

input DeviceProfileCreateManyInput {
  AppType: AppType!
  ProfileType: ProfileType!
  createdAt: DateTime
  deviceManagerId: String!
  id: String
  isActive: Boolean!
  profileId: String!
  updatedAt: DateTime
}

input DeviceProfileCreateNestedManyWithoutDeviceManagerInput {
  connect: [DeviceProfileWhereUniqueInput!]
  connectOrCreate: [DeviceProfileCreateOrConnectWithoutDeviceManagerInput!]
  create: [DeviceProfileCreateWithoutDeviceManagerInput!]
  createMany: DeviceProfileCreateManyDeviceManagerInputEnvelope
}

input DeviceProfileCreateNestedOneWithoutRefreshTokenInput {
  connect: DeviceProfileWhereUniqueInput
  connectOrCreate: DeviceProfileCreateOrConnectWithoutRefreshTokenInput
  create: DeviceProfileCreateWithoutRefreshTokenInput
}

input DeviceProfileCreateOrConnectWithoutDeviceManagerInput {
  create: DeviceProfileCreateWithoutDeviceManagerInput!
  where: DeviceProfileWhereUniqueInput!
}

input DeviceProfileCreateOrConnectWithoutRefreshTokenInput {
  create: DeviceProfileCreateWithoutRefreshTokenInput!
  where: DeviceProfileWhereUniqueInput!
}

input DeviceProfileCreateWithoutDeviceManagerInput {
  AppType: AppType!
  ProfileType: ProfileType!
  RefreshToken: RefreshTokenCreateNestedOneWithoutDeviceProfileInput
  createdAt: DateTime
  id: String
  isActive: Boolean!
  profileId: String!
  updatedAt: DateTime
}

input DeviceProfileCreateWithoutRefreshTokenInput {
  AppType: AppType!
  DeviceManager: DeviceManagerCreateNestedOneWithoutDeviceProfilesInput!
  ProfileType: ProfileType!
  createdAt: DateTime
  id: String
  isActive: Boolean!
  profileId: String!
  updatedAt: DateTime
}

input DeviceProfileListRelationFilter {
  every: DeviceProfileWhereInput
  none: DeviceProfileWhereInput
  some: DeviceProfileWhereInput
}

input DeviceProfileMaxOrderByAggregateInput {
  AppType: SortOrder
  ProfileType: SortOrder
  createdAt: SortOrder
  deviceManagerId: SortOrder
  id: SortOrder
  isActive: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input DeviceProfileMinOrderByAggregateInput {
  AppType: SortOrder
  ProfileType: SortOrder
  createdAt: SortOrder
  deviceManagerId: SortOrder
  id: SortOrder
  isActive: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input DeviceProfileNullableRelationFilter {
  is: DeviceProfileWhereInput
  isNot: DeviceProfileWhereInput
}

input DeviceProfileOrderByRelationAggregateInput {
  _count: SortOrder
}

input DeviceProfileOrderByWithAggregationInput {
  AppType: SortOrder
  ProfileType: SortOrder
  _count: DeviceProfileCountOrderByAggregateInput
  _max: DeviceProfileMaxOrderByAggregateInput
  _min: DeviceProfileMinOrderByAggregateInput
  createdAt: SortOrder
  deviceManagerId: SortOrder
  id: SortOrder
  isActive: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input DeviceProfileOrderByWithRelationInput {
  AppType: SortOrder
  DeviceManager: DeviceManagerOrderByWithRelationInput
  ProfileType: SortOrder
  RefreshToken: RefreshTokenOrderByWithRelationInput
  createdAt: SortOrder
  deviceManagerId: SortOrder
  id: SortOrder
  isActive: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

enum DeviceProfileScalarFieldEnum {
  AppType
  ProfileType
  createdAt
  deviceManagerId
  id
  isActive
  profileId
  updatedAt
}

input DeviceProfileScalarWhereInput {
  AND: [DeviceProfileScalarWhereInput!]
  AppType: EnumAppTypeFilter
  NOT: [DeviceProfileScalarWhereInput!]
  OR: [DeviceProfileScalarWhereInput!]
  ProfileType: EnumProfileTypeFilter
  createdAt: DateTimeFilter
  deviceManagerId: StringFilter
  id: StringFilter
  isActive: BoolFilter
  profileId: StringFilter
  updatedAt: DateTimeFilter
}

input DeviceProfileScalarWhereWithAggregatesInput {
  AND: [DeviceProfileScalarWhereWithAggregatesInput!]
  AppType: EnumAppTypeWithAggregatesFilter
  NOT: [DeviceProfileScalarWhereWithAggregatesInput!]
  OR: [DeviceProfileScalarWhereWithAggregatesInput!]
  ProfileType: EnumProfileTypeWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  deviceManagerId: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  isActive: BoolWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input DeviceProfileUpdateInput {
  AppType: EnumAppTypeFieldUpdateOperationsInput
  DeviceManager: DeviceManagerUpdateOneRequiredWithoutDeviceProfilesNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  RefreshToken: RefreshTokenUpdateOneWithoutDeviceProfileNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  profileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DeviceProfileUpdateManyMutationInput {
  AppType: EnumAppTypeFieldUpdateOperationsInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  profileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DeviceProfileUpdateManyWithWhereWithoutDeviceManagerInput {
  data: DeviceProfileUpdateManyMutationInput!
  where: DeviceProfileScalarWhereInput!
}

input DeviceProfileUpdateManyWithoutDeviceManagerNestedInput {
  connect: [DeviceProfileWhereUniqueInput!]
  connectOrCreate: [DeviceProfileCreateOrConnectWithoutDeviceManagerInput!]
  create: [DeviceProfileCreateWithoutDeviceManagerInput!]
  createMany: DeviceProfileCreateManyDeviceManagerInputEnvelope
  delete: [DeviceProfileWhereUniqueInput!]
  deleteMany: [DeviceProfileScalarWhereInput!]
  disconnect: [DeviceProfileWhereUniqueInput!]
  set: [DeviceProfileWhereUniqueInput!]
  update: [DeviceProfileUpdateWithWhereUniqueWithoutDeviceManagerInput!]
  updateMany: [DeviceProfileUpdateManyWithWhereWithoutDeviceManagerInput!]
  upsert: [DeviceProfileUpsertWithWhereUniqueWithoutDeviceManagerInput!]
}

input DeviceProfileUpdateOneWithoutRefreshTokenNestedInput {
  connect: DeviceProfileWhereUniqueInput
  connectOrCreate: DeviceProfileCreateOrConnectWithoutRefreshTokenInput
  create: DeviceProfileCreateWithoutRefreshTokenInput
  delete: DeviceProfileWhereInput
  disconnect: DeviceProfileWhereInput
  update: DeviceProfileUpdateToOneWithWhereWithoutRefreshTokenInput
  upsert: DeviceProfileUpsertWithoutRefreshTokenInput
}

input DeviceProfileUpdateToOneWithWhereWithoutRefreshTokenInput {
  data: DeviceProfileUpdateWithoutRefreshTokenInput!
  where: DeviceProfileWhereInput
}

input DeviceProfileUpdateWithWhereUniqueWithoutDeviceManagerInput {
  data: DeviceProfileUpdateWithoutDeviceManagerInput!
  where: DeviceProfileWhereUniqueInput!
}

input DeviceProfileUpdateWithoutDeviceManagerInput {
  AppType: EnumAppTypeFieldUpdateOperationsInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  RefreshToken: RefreshTokenUpdateOneWithoutDeviceProfileNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  profileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DeviceProfileUpdateWithoutRefreshTokenInput {
  AppType: EnumAppTypeFieldUpdateOperationsInput
  DeviceManager: DeviceManagerUpdateOneRequiredWithoutDeviceProfilesNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  profileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DeviceProfileUpsertWithWhereUniqueWithoutDeviceManagerInput {
  create: DeviceProfileCreateWithoutDeviceManagerInput!
  update: DeviceProfileUpdateWithoutDeviceManagerInput!
  where: DeviceProfileWhereUniqueInput!
}

input DeviceProfileUpsertWithoutRefreshTokenInput {
  create: DeviceProfileCreateWithoutRefreshTokenInput!
  update: DeviceProfileUpdateWithoutRefreshTokenInput!
  where: DeviceProfileWhereInput
}

input DeviceProfileWhereInput {
  AND: [DeviceProfileWhereInput!]
  AppType: EnumAppTypeFilter
  DeviceManager: DeviceManagerWhereInput
  NOT: [DeviceProfileWhereInput!]
  OR: [DeviceProfileWhereInput!]
  ProfileType: EnumProfileTypeFilter
  RefreshToken: RefreshTokenWhereInput
  createdAt: DateTimeFilter
  deviceManagerId: StringFilter
  id: StringFilter
  isActive: BoolFilter
  profileId: StringFilter
  updatedAt: DateTimeFilter
}

input DeviceProfileWhereUniqueInput {
  AND: [DeviceProfileWhereInput!]
  AppType: EnumAppTypeFilter
  DeviceManager: DeviceManagerWhereInput
  NOT: [DeviceProfileWhereInput!]
  OR: [DeviceProfileWhereInput!]
  ProfileType: EnumProfileTypeFilter
  RefreshToken: RefreshTokenWhereInput
  createdAt: DateTimeFilter
  deviceManagerId: StringFilter
  id: String
  isActive: BoolFilter
  profileId: StringFilter
  updatedAt: DateTimeFilter
}

enum DeviceScalarFieldEnum {
  createdAt
  deviceManagerId
  deviceType
  id
  pushTokenId
  updatedAt
}

input DeviceScalarWhereWithAggregatesInput {
  AND: [DeviceScalarWhereWithAggregatesInput!]
  NOT: [DeviceScalarWhereWithAggregatesInput!]
  OR: [DeviceScalarWhereWithAggregatesInput!]
  createdAt: DateTimeNullableWithAggregatesFilter
  deviceManagerId: StringWithAggregatesFilter
  deviceType: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  pushTokenId: StringNullableWithAggregatesFilter
  updatedAt: DateTimeNullableWithAggregatesFilter
}

input DeviceUpdateInput {
  DeviceManager: DeviceManagerUpdateOneRequiredWithoutDeviceNestedInput
  PushToken: PushTokenUpdateOneWithoutDeviceNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  deviceType: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input DeviceUpdateManyMutationInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  deviceType: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input DeviceUpdateOneWithoutDeviceManagerNestedInput {
  connect: DeviceWhereUniqueInput
  connectOrCreate: DeviceCreateOrConnectWithoutDeviceManagerInput
  create: DeviceCreateWithoutDeviceManagerInput
  delete: DeviceWhereInput
  disconnect: DeviceWhereInput
  update: DeviceUpdateToOneWithWhereWithoutDeviceManagerInput
  upsert: DeviceUpsertWithoutDeviceManagerInput
}

input DeviceUpdateOneWithoutPushTokenNestedInput {
  connect: DeviceWhereUniqueInput
  connectOrCreate: DeviceCreateOrConnectWithoutPushTokenInput
  create: DeviceCreateWithoutPushTokenInput
  delete: DeviceWhereInput
  disconnect: DeviceWhereInput
  update: DeviceUpdateToOneWithWhereWithoutPushTokenInput
  upsert: DeviceUpsertWithoutPushTokenInput
}

input DeviceUpdateToOneWithWhereWithoutDeviceManagerInput {
  data: DeviceUpdateWithoutDeviceManagerInput!
  where: DeviceWhereInput
}

input DeviceUpdateToOneWithWhereWithoutPushTokenInput {
  data: DeviceUpdateWithoutPushTokenInput!
  where: DeviceWhereInput
}

input DeviceUpdateWithoutDeviceManagerInput {
  PushToken: PushTokenUpdateOneWithoutDeviceNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  deviceType: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input DeviceUpdateWithoutPushTokenInput {
  DeviceManager: DeviceManagerUpdateOneRequiredWithoutDeviceNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  deviceType: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input DeviceUpsertWithoutDeviceManagerInput {
  create: DeviceCreateWithoutDeviceManagerInput!
  update: DeviceUpdateWithoutDeviceManagerInput!
  where: DeviceWhereInput
}

input DeviceUpsertWithoutPushTokenInput {
  create: DeviceCreateWithoutPushTokenInput!
  update: DeviceUpdateWithoutPushTokenInput!
  where: DeviceWhereInput
}

input DeviceWhereInput {
  AND: [DeviceWhereInput!]
  DeviceManager: DeviceManagerWhereInput
  NOT: [DeviceWhereInput!]
  OR: [DeviceWhereInput!]
  PushToken: PushTokenWhereInput
  createdAt: DateTimeNullableFilter
  deviceManagerId: StringFilter
  deviceType: StringFilter
  id: StringFilter
  pushTokenId: StringNullableFilter
  updatedAt: DateTimeNullableFilter
}

input DeviceWhereUniqueInput {
  AND: [DeviceWhereInput!]
  DeviceManager: DeviceManagerWhereInput
  NOT: [DeviceWhereInput!]
  OR: [DeviceWhereInput!]
  PushToken: PushTokenWhereInput
  createdAt: DateTimeNullableFilter
  deviceManagerId: String
  deviceType: StringFilter
  id: String
  pushTokenId: String
  updatedAt: DateTimeNullableFilter
}

type Document {
  LegalAgreement: [LegalAgreement!]
  TypeOfDocument: TypeOfDocument
  content: String
  createdAt: DateTime
  id: ID
  updatedAt: DateTime
}

input DocumentAvgOrderByAggregateInput {
  id: SortOrder
}

input DocumentCountOrderByAggregateInput {
  TypeOfDocument: SortOrder
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input DocumentCreateInput {
  LegalAgreement: LegalAgreementCreateNestedManyWithoutDocumentInput
  TypeOfDocument: TypeOfDocument!
  content: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input DocumentCreateManyInput {
  TypeOfDocument: TypeOfDocument!
  content: String!
  createdAt: DateTime
  id: Int
  updatedAt: DateTime
}

input DocumentCreateNestedOneWithoutLegalAgreementInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutLegalAgreementInput
  create: DocumentCreateWithoutLegalAgreementInput
}

input DocumentCreateOrConnectWithoutLegalAgreementInput {
  create: DocumentCreateWithoutLegalAgreementInput!
  where: DocumentWhereUniqueInput!
}

input DocumentCreateWithoutLegalAgreementInput {
  TypeOfDocument: TypeOfDocument!
  content: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input DocumentMaxOrderByAggregateInput {
  TypeOfDocument: SortOrder
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input DocumentMinOrderByAggregateInput {
  TypeOfDocument: SortOrder
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input DocumentOrderByWithAggregationInput {
  TypeOfDocument: SortOrder
  _avg: DocumentAvgOrderByAggregateInput
  _count: DocumentCountOrderByAggregateInput
  _max: DocumentMaxOrderByAggregateInput
  _min: DocumentMinOrderByAggregateInput
  _sum: DocumentSumOrderByAggregateInput
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input DocumentOrderByWithRelationInput {
  LegalAgreement: LegalAgreementOrderByRelationAggregateInput
  TypeOfDocument: SortOrder
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input DocumentRelationFilter {
  is: DocumentWhereInput
  isNot: DocumentWhereInput
}

enum DocumentScalarFieldEnum {
  TypeOfDocument
  content
  createdAt
  id
  updatedAt
}

input DocumentScalarWhereWithAggregatesInput {
  AND: [DocumentScalarWhereWithAggregatesInput!]
  NOT: [DocumentScalarWhereWithAggregatesInput!]
  OR: [DocumentScalarWhereWithAggregatesInput!]
  TypeOfDocument: EnumTypeOfDocumentWithAggregatesFilter
  content: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input DocumentSumOrderByAggregateInput {
  id: SortOrder
}

input DocumentUpdateInput {
  LegalAgreement: LegalAgreementUpdateManyWithoutDocumentNestedInput
  TypeOfDocument: EnumTypeOfDocumentFieldUpdateOperationsInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DocumentUpdateManyMutationInput {
  TypeOfDocument: EnumTypeOfDocumentFieldUpdateOperationsInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DocumentUpdateOneRequiredWithoutLegalAgreementNestedInput {
  connect: DocumentWhereUniqueInput
  connectOrCreate: DocumentCreateOrConnectWithoutLegalAgreementInput
  create: DocumentCreateWithoutLegalAgreementInput
  update: DocumentUpdateToOneWithWhereWithoutLegalAgreementInput
  upsert: DocumentUpsertWithoutLegalAgreementInput
}

input DocumentUpdateToOneWithWhereWithoutLegalAgreementInput {
  data: DocumentUpdateWithoutLegalAgreementInput!
  where: DocumentWhereInput
}

input DocumentUpdateWithoutLegalAgreementInput {
  TypeOfDocument: EnumTypeOfDocumentFieldUpdateOperationsInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DocumentUpsertWithoutLegalAgreementInput {
  create: DocumentCreateWithoutLegalAgreementInput!
  update: DocumentUpdateWithoutLegalAgreementInput!
  where: DocumentWhereInput
}

input DocumentWhereInput {
  AND: [DocumentWhereInput!]
  LegalAgreement: LegalAgreementListRelationFilter
  NOT: [DocumentWhereInput!]
  OR: [DocumentWhereInput!]
  TypeOfDocument: EnumTypeOfDocumentFilter
  content: StringFilter
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
}

input DocumentWhereUniqueInput {
  AND: [DocumentWhereInput!]
  LegalAgreement: LegalAgreementListRelationFilter
  NOT: [DocumentWhereInput!]
  OR: [DocumentWhereInput!]
  TypeOfDocument: EnumTypeOfDocumentFilter
  content: StringFilter
  createdAt: DateTimeFilter
  id: Int
  updatedAt: DateTimeFilter
}

type Email {
  AuthenticationProvider(cursor: AuthenticationProviderWhereUniqueInput, distinct: [AuthenticationProviderScalarFieldEnum!], orderBy: [AuthenticationProviderOrderByWithRelationInput!], skip: Int, take: Int, where: AuthenticationProviderWhereInput): [AuthenticationProvider!]!
  canUseAsRecovery: Boolean
  createdAt: DateTime!
  email: String!
  id: ID!
  updatedAt: DateTime!
}

input EmailAvgOrderByAggregateInput {
  id: SortOrder
}

input EmailCountOrderByAggregateInput {
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input EmailCreateInput {
  AuthenticationProvider: AuthenticationProviderCreateNestedManyWithoutEmailsInput
  canUseAsRecovery: Boolean
  createdAt: DateTime
  email: String!
  updatedAt: DateTime
}

input EmailCreateManyInput {
  canUseAsRecovery: Boolean
  createdAt: DateTime
  email: String!
  id: Int
  updatedAt: DateTime
}

input EmailCreateNestedManyWithoutAuthenticationProviderInput {
  connect: [EmailWhereUniqueInput!]
  connectOrCreate: [EmailCreateOrConnectWithoutAuthenticationProviderInput!]
  create: [EmailCreateWithoutAuthenticationProviderInput!]
}

input EmailCreateOrConnectWithoutAuthenticationProviderInput {
  create: EmailCreateWithoutAuthenticationProviderInput!
  where: EmailWhereUniqueInput!
}

input EmailCreateWithoutAuthenticationProviderInput {
  canUseAsRecovery: Boolean
  createdAt: DateTime
  email: String!
  updatedAt: DateTime
}

input EmailInput {
  email: String
}

input EmailListRelationFilter {
  every: EmailWhereInput
  none: EmailWhereInput
  some: EmailWhereInput
}

input EmailMaxOrderByAggregateInput {
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input EmailMinOrderByAggregateInput {
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input EmailOrderByRelationAggregateInput {
  _count: SortOrder
}

input EmailOrderByWithAggregationInput {
  _avg: EmailAvgOrderByAggregateInput
  _count: EmailCountOrderByAggregateInput
  _max: EmailMaxOrderByAggregateInput
  _min: EmailMinOrderByAggregateInput
  _sum: EmailSumOrderByAggregateInput
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input EmailOrderByWithRelationInput {
  AuthenticationProvider: AuthenticationProviderOrderByRelationAggregateInput
  canUseAsRecovery: SortOrder
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

enum EmailScalarFieldEnum {
  canUseAsRecovery
  createdAt
  email
  id
  updatedAt
}

input EmailScalarWhereInput {
  AND: [EmailScalarWhereInput!]
  NOT: [EmailScalarWhereInput!]
  OR: [EmailScalarWhereInput!]
  canUseAsRecovery: BoolNullableFilter
  createdAt: DateTimeFilter
  email: StringFilter
  id: IntFilter
  updatedAt: DateTimeFilter
}

input EmailScalarWhereWithAggregatesInput {
  AND: [EmailScalarWhereWithAggregatesInput!]
  NOT: [EmailScalarWhereWithAggregatesInput!]
  OR: [EmailScalarWhereWithAggregatesInput!]
  canUseAsRecovery: BoolNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  email: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input EmailSumOrderByAggregateInput {
  id: SortOrder
}

input EmailUpdateInput {
  AuthenticationProvider: AuthenticationProviderUpdateManyWithoutEmailsNestedInput
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input EmailUpdateManyMutationInput {
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input EmailUpdateManyWithWhereWithoutAuthenticationProviderInput {
  data: EmailUpdateManyMutationInput!
  where: EmailScalarWhereInput!
}

input EmailUpdateManyWithoutAuthenticationProviderNestedInput {
  connect: [EmailWhereUniqueInput!]
  connectOrCreate: [EmailCreateOrConnectWithoutAuthenticationProviderInput!]
  create: [EmailCreateWithoutAuthenticationProviderInput!]
  delete: [EmailWhereUniqueInput!]
  deleteMany: [EmailScalarWhereInput!]
  disconnect: [EmailWhereUniqueInput!]
  set: [EmailWhereUniqueInput!]
  update: [EmailUpdateWithWhereUniqueWithoutAuthenticationProviderInput!]
  updateMany: [EmailUpdateManyWithWhereWithoutAuthenticationProviderInput!]
  upsert: [EmailUpsertWithWhereUniqueWithoutAuthenticationProviderInput!]
}

input EmailUpdateWithWhereUniqueWithoutAuthenticationProviderInput {
  data: EmailUpdateWithoutAuthenticationProviderInput!
  where: EmailWhereUniqueInput!
}

input EmailUpdateWithoutAuthenticationProviderInput {
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input EmailUpsertWithWhereUniqueWithoutAuthenticationProviderInput {
  create: EmailCreateWithoutAuthenticationProviderInput!
  update: EmailUpdateWithoutAuthenticationProviderInput!
  where: EmailWhereUniqueInput!
}

input EmailWhereInput {
  AND: [EmailWhereInput!]
  AuthenticationProvider: AuthenticationProviderListRelationFilter
  NOT: [EmailWhereInput!]
  OR: [EmailWhereInput!]
  canUseAsRecovery: BoolNullableFilter
  createdAt: DateTimeFilter
  email: StringFilter
  id: IntFilter
  updatedAt: DateTimeFilter
}

input EmailWhereUniqueInput {
  AND: [EmailWhereInput!]
  AuthenticationProvider: AuthenticationProviderListRelationFilter
  NOT: [EmailWhereInput!]
  OR: [EmailWhereInput!]
  canUseAsRecovery: BoolNullableFilter
  createdAt: DateTimeFilter
  email: StringFilter
  id: Int
  updatedAt: DateTimeFilter
}

type Emojimood {
  colors: [String!]
  emoji: String
  emojiname: String
  id: ID
}

input EmojimoodAvgOrderByAggregateInput {
  id: SortOrder
}

input EmojimoodCountOrderByAggregateInput {
  colors: SortOrder
  emoji: SortOrder
  emojiname: SortOrder
  id: SortOrder
}

input EmojimoodCreateInput {
  Story: StoryCreateNestedManyWithoutEmojimoodInput
  colors: [String!]
  emoji: String
  emojiname: String
}

input EmojimoodCreateManyInput {
  colors: [String!]
  emoji: String
  emojiname: String
  id: Int
}

input EmojimoodCreateNestedOneWithoutStoryInput {
  connect: EmojimoodWhereUniqueInput
  connectOrCreate: EmojimoodCreateOrConnectWithoutStoryInput
  create: EmojimoodCreateWithoutStoryInput
}

input EmojimoodCreateOrConnectWithoutStoryInput {
  create: EmojimoodCreateWithoutStoryInput!
  where: EmojimoodWhereUniqueInput!
}

input EmojimoodCreateWithoutStoryInput {
  colors: [String!]
  emoji: String
  emojiname: String
}

input EmojimoodCreatecolorsInput {
  set: [String!]!
}

input EmojimoodMaxOrderByAggregateInput {
  emoji: SortOrder
  emojiname: SortOrder
  id: SortOrder
}

input EmojimoodMinOrderByAggregateInput {
  emoji: SortOrder
  emojiname: SortOrder
  id: SortOrder
}

input EmojimoodNullableRelationFilter {
  is: EmojimoodWhereInput
  isNot: EmojimoodWhereInput
}

input EmojimoodOrderByWithAggregationInput {
  _avg: EmojimoodAvgOrderByAggregateInput
  _count: EmojimoodCountOrderByAggregateInput
  _max: EmojimoodMaxOrderByAggregateInput
  _min: EmojimoodMinOrderByAggregateInput
  _sum: EmojimoodSumOrderByAggregateInput
  colors: SortOrder
  emoji: SortOrder
  emojiname: SortOrder
  id: SortOrder
}

input EmojimoodOrderByWithRelationInput {
  Story: StoryOrderByRelationAggregateInput
  colors: SortOrder
  emoji: SortOrder
  emojiname: SortOrder
  id: SortOrder
}

enum EmojimoodScalarFieldEnum {
  colors
  emoji
  emojiname
  id
}

input EmojimoodScalarWhereWithAggregatesInput {
  AND: [EmojimoodScalarWhereWithAggregatesInput!]
  NOT: [EmojimoodScalarWhereWithAggregatesInput!]
  OR: [EmojimoodScalarWhereWithAggregatesInput!]
  colors: StringNullableListFilter
  emoji: StringNullableWithAggregatesFilter
  emojiname: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
}

input EmojimoodSumOrderByAggregateInput {
  id: SortOrder
}

input EmojimoodUpdateInput {
  Story: StoryUpdateManyWithoutEmojimoodNestedInput
  colors: [String!]
  emoji: NullableStringFieldUpdateOperationsInput
  emojiname: NullableStringFieldUpdateOperationsInput
}

input EmojimoodUpdateManyMutationInput {
  colors: [String!]
  emoji: NullableStringFieldUpdateOperationsInput
  emojiname: NullableStringFieldUpdateOperationsInput
}

input EmojimoodUpdateOneWithoutStoryNestedInput {
  connect: EmojimoodWhereUniqueInput
  connectOrCreate: EmojimoodCreateOrConnectWithoutStoryInput
  create: EmojimoodCreateWithoutStoryInput
  delete: EmojimoodWhereInput
  disconnect: EmojimoodWhereInput
  update: EmojimoodUpdateToOneWithWhereWithoutStoryInput
  upsert: EmojimoodUpsertWithoutStoryInput
}

input EmojimoodUpdateToOneWithWhereWithoutStoryInput {
  data: EmojimoodUpdateWithoutStoryInput!
  where: EmojimoodWhereInput
}

input EmojimoodUpdateWithoutStoryInput {
  colors: [String!]
  emoji: NullableStringFieldUpdateOperationsInput
  emojiname: NullableStringFieldUpdateOperationsInput
}

input EmojimoodUpdatecolorsInput {
  push: [String!]
  set: [String!]
}

input EmojimoodUpsertWithoutStoryInput {
  create: EmojimoodCreateWithoutStoryInput!
  update: EmojimoodUpdateWithoutStoryInput!
  where: EmojimoodWhereInput
}

input EmojimoodWhereInput {
  AND: [EmojimoodWhereInput!]
  NOT: [EmojimoodWhereInput!]
  OR: [EmojimoodWhereInput!]
  Story: StoryListRelationFilter
  colors: StringNullableListFilter
  emoji: StringNullableFilter
  emojiname: StringNullableFilter
  id: IntFilter
}

input EmojimoodWhereUniqueInput {
  AND: [EmojimoodWhereInput!]
  NOT: [EmojimoodWhereInput!]
  OR: [EmojimoodWhereInput!]
  Story: StoryListRelationFilter
  colors: StringNullableListFilter
  emoji: StringNullableFilter
  emojiname: StringNullableFilter
  id: Int
}

input EnumAppTypeFieldUpdateOperationsInput {
  set: AppType
}

input EnumAppTypeFilter {
  equals: AppType
  in: [AppType!]
  not: AppType
  notIn: [AppType!]
}

input EnumAppTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumAppTypeFilter
  _min: NestedEnumAppTypeFilter
  equals: AppType
  in: [AppType!]
  not: AppType
  notIn: [AppType!]
}

input EnumNotificationTypeFieldUpdateOperationsInput {
  set: NotificationType
}

input EnumNotificationTypeFilter {
  equals: NotificationType
  in: [NotificationType!]
  not: NotificationType
  notIn: [NotificationType!]
}

input EnumNotificationTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumNotificationTypeFilter
  _min: NestedEnumNotificationTypeFilter
  equals: NotificationType
  in: [NotificationType!]
  not: NotificationType
  notIn: [NotificationType!]
}

input EnumOutTypeFieldUpdateOperationsInput {
  set: OutType
}

input EnumOutTypeFilter {
  equals: OutType
  in: [OutType!]
  not: OutType
  notIn: [OutType!]
}

input EnumOutTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumOutTypeFilter
  _min: NestedEnumOutTypeFilter
  equals: OutType
  in: [OutType!]
  not: OutType
  notIn: [OutType!]
}

input EnumPhotoTypeNullableFilter {
  equals: PhotoType
  in: [PhotoType!]
  not: PhotoType
  notIn: [PhotoType!]
}

input EnumPhotoTypeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedEnumPhotoTypeNullableFilter
  _min: NestedEnumPhotoTypeNullableFilter
  equals: PhotoType
  in: [PhotoType!]
  not: PhotoType
  notIn: [PhotoType!]
}

input EnumProfileTypeFieldUpdateOperationsInput {
  set: ProfileType
}

input EnumProfileTypeFilter {
  equals: ProfileType
  in: [ProfileType!]
  not: ProfileType
  notIn: [ProfileType!]
}

input EnumProfileTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumProfileTypeFilter
  _min: NestedEnumProfileTypeFilter
  equals: ProfileType
  in: [ProfileType!]
  not: ProfileType
  notIn: [ProfileType!]
}

input EnumRelationshipStatusNullableListFilter {
  equals: [RelationshipStatus!]
  has: RelationshipStatus
  hasEvery: [RelationshipStatus!]
  hasSome: [RelationshipStatus!]
  isEmpty: Boolean
}

input EnumSecureDataTypeFieldUpdateOperationsInput {
  set: SecureDataType
}

input EnumSecureDataTypeFilter {
  equals: SecureDataType
  in: [SecureDataType!]
  not: SecureDataType
  notIn: [SecureDataType!]
}

input EnumSecureDataTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumSecureDataTypeFilter
  _min: NestedEnumSecureDataTypeFilter
  equals: SecureDataType
  in: [SecureDataType!]
  not: SecureDataType
  notIn: [SecureDataType!]
}

input EnumTokenTypeNullableFilter {
  equals: TokenType
  in: [TokenType!]
  not: TokenType
  notIn: [TokenType!]
}

input EnumTokenTypeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedEnumTokenTypeNullableFilter
  _min: NestedEnumTokenTypeNullableFilter
  equals: TokenType
  in: [TokenType!]
  not: TokenType
  notIn: [TokenType!]
}

input EnumTypeOfDocumentFieldUpdateOperationsInput {
  set: TypeOfDocument
}

input EnumTypeOfDocumentFilter {
  equals: TypeOfDocument
  in: [TypeOfDocument!]
  not: TypeOfDocument
  notIn: [TypeOfDocument!]
}

input EnumTypeOfDocumentWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumTypeOfDocumentFilter
  _min: NestedEnumTypeOfDocumentFilter
  equals: TypeOfDocument
  in: [TypeOfDocument!]
  not: TypeOfDocument
  notIn: [TypeOfDocument!]
}

"""Long necks, cool patterns, taller than you."""
type Error {
  errorCode: String
  message: String
}

type ExploreResponse {
  events: [Json!]
  people: [Personal!]
  venues: [Venue!]
}

input FloatFieldUpdateOperationsInput {
  decrement: Float
  divide: Float
  increment: Float
  multiply: Float
  set: Float
}

input FloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input FloatWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedFloatFilter
  _min: NestedFloatFilter
  _sum: NestedFloatFilter
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatWithAggregatesFilter
  notIn: [Float!]
}

type Geometry {
  City: City
  Location: Location
  State: State
  h3Index15: String
  id: ID!
  latitude: Float!
  longitude: Float!
}

input GeometryAvgOrderByAggregateInput {
  id: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input GeometryCountOrderByAggregateInput {
  h3Index15: SortOrder
  id: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input GeometryCreateInput {
  City: CityCreateNestedOneWithoutGeometryInput
  Location: LocationCreateNestedOneWithoutGeometryInput
  State: StateCreateNestedOneWithoutGeometryInput
  h3Index15: String
  latitude: Float!
  longitude: Float!
}

input GeometryCreateManyInput {
  h3Index15: String
  id: Int
  latitude: Float!
  longitude: Float!
}

input GeometryCreateNestedOneWithoutCityInput {
  connect: GeometryWhereUniqueInput
  connectOrCreate: GeometryCreateOrConnectWithoutCityInput
  create: GeometryCreateWithoutCityInput
}

input GeometryCreateNestedOneWithoutLocationInput {
  connect: GeometryWhereUniqueInput
  connectOrCreate: GeometryCreateOrConnectWithoutLocationInput
  create: GeometryCreateWithoutLocationInput
}

input GeometryCreateNestedOneWithoutStateInput {
  connect: GeometryWhereUniqueInput
  connectOrCreate: GeometryCreateOrConnectWithoutStateInput
  create: GeometryCreateWithoutStateInput
}

input GeometryCreateOrConnectWithoutCityInput {
  create: GeometryCreateWithoutCityInput!
  where: GeometryWhereUniqueInput!
}

input GeometryCreateOrConnectWithoutLocationInput {
  create: GeometryCreateWithoutLocationInput!
  where: GeometryWhereUniqueInput!
}

input GeometryCreateOrConnectWithoutStateInput {
  create: GeometryCreateWithoutStateInput!
  where: GeometryWhereUniqueInput!
}

input GeometryCreateWithoutCityInput {
  Location: LocationCreateNestedOneWithoutGeometryInput
  State: StateCreateNestedOneWithoutGeometryInput
  h3Index15: String
  latitude: Float!
  longitude: Float!
}

input GeometryCreateWithoutLocationInput {
  City: CityCreateNestedOneWithoutGeometryInput
  State: StateCreateNestedOneWithoutGeometryInput
  h3Index15: String
  latitude: Float!
  longitude: Float!
}

input GeometryCreateWithoutStateInput {
  City: CityCreateNestedOneWithoutGeometryInput
  Location: LocationCreateNestedOneWithoutGeometryInput
  h3Index15: String
  latitude: Float!
  longitude: Float!
}

input GeometryMaxOrderByAggregateInput {
  h3Index15: SortOrder
  id: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input GeometryMinOrderByAggregateInput {
  h3Index15: SortOrder
  id: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input GeometryNullableRelationFilter {
  is: GeometryWhereInput
  isNot: GeometryWhereInput
}

input GeometryOrderByWithAggregationInput {
  _avg: GeometryAvgOrderByAggregateInput
  _count: GeometryCountOrderByAggregateInput
  _max: GeometryMaxOrderByAggregateInput
  _min: GeometryMinOrderByAggregateInput
  _sum: GeometrySumOrderByAggregateInput
  h3Index15: SortOrder
  id: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input GeometryOrderByWithRelationInput {
  City: CityOrderByWithRelationInput
  Location: LocationOrderByWithRelationInput
  State: StateOrderByWithRelationInput
  h3Index15: SortOrder
  id: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input GeometryRelationFilter {
  is: GeometryWhereInput
  isNot: GeometryWhereInput
}

enum GeometryScalarFieldEnum {
  h3Index15
  id
  latitude
  longitude
}

input GeometryScalarWhereWithAggregatesInput {
  AND: [GeometryScalarWhereWithAggregatesInput!]
  NOT: [GeometryScalarWhereWithAggregatesInput!]
  OR: [GeometryScalarWhereWithAggregatesInput!]
  h3Index15: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  latitude: FloatWithAggregatesFilter
  longitude: FloatWithAggregatesFilter
}

input GeometrySumOrderByAggregateInput {
  id: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input GeometryUpdateInput {
  City: CityUpdateOneWithoutGeometryNestedInput
  Location: LocationUpdateOneWithoutGeometryNestedInput
  State: StateUpdateOneWithoutGeometryNestedInput
  h3Index15: NullableStringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
}

input GeometryUpdateManyMutationInput {
  h3Index15: NullableStringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
}

input GeometryUpdateOneRequiredWithoutCityNestedInput {
  connect: GeometryWhereUniqueInput
  connectOrCreate: GeometryCreateOrConnectWithoutCityInput
  create: GeometryCreateWithoutCityInput
  update: GeometryUpdateToOneWithWhereWithoutCityInput
  upsert: GeometryUpsertWithoutCityInput
}

input GeometryUpdateOneRequiredWithoutStateNestedInput {
  connect: GeometryWhereUniqueInput
  connectOrCreate: GeometryCreateOrConnectWithoutStateInput
  create: GeometryCreateWithoutStateInput
  update: GeometryUpdateToOneWithWhereWithoutStateInput
  upsert: GeometryUpsertWithoutStateInput
}

input GeometryUpdateOneWithoutLocationNestedInput {
  connect: GeometryWhereUniqueInput
  connectOrCreate: GeometryCreateOrConnectWithoutLocationInput
  create: GeometryCreateWithoutLocationInput
  delete: GeometryWhereInput
  disconnect: GeometryWhereInput
  update: GeometryUpdateToOneWithWhereWithoutLocationInput
  upsert: GeometryUpsertWithoutLocationInput
}

input GeometryUpdateToOneWithWhereWithoutCityInput {
  data: GeometryUpdateWithoutCityInput!
  where: GeometryWhereInput
}

input GeometryUpdateToOneWithWhereWithoutLocationInput {
  data: GeometryUpdateWithoutLocationInput!
  where: GeometryWhereInput
}

input GeometryUpdateToOneWithWhereWithoutStateInput {
  data: GeometryUpdateWithoutStateInput!
  where: GeometryWhereInput
}

input GeometryUpdateWithoutCityInput {
  Location: LocationUpdateOneWithoutGeometryNestedInput
  State: StateUpdateOneWithoutGeometryNestedInput
  h3Index15: NullableStringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
}

input GeometryUpdateWithoutLocationInput {
  City: CityUpdateOneWithoutGeometryNestedInput
  State: StateUpdateOneWithoutGeometryNestedInput
  h3Index15: NullableStringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
}

input GeometryUpdateWithoutStateInput {
  City: CityUpdateOneWithoutGeometryNestedInput
  Location: LocationUpdateOneWithoutGeometryNestedInput
  h3Index15: NullableStringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
}

input GeometryUpsertWithoutCityInput {
  create: GeometryCreateWithoutCityInput!
  update: GeometryUpdateWithoutCityInput!
  where: GeometryWhereInput
}

input GeometryUpsertWithoutLocationInput {
  create: GeometryCreateWithoutLocationInput!
  update: GeometryUpdateWithoutLocationInput!
  where: GeometryWhereInput
}

input GeometryUpsertWithoutStateInput {
  create: GeometryCreateWithoutStateInput!
  update: GeometryUpdateWithoutStateInput!
  where: GeometryWhereInput
}

input GeometryWhereInput {
  AND: [GeometryWhereInput!]
  City: CityWhereInput
  Location: LocationWhereInput
  NOT: [GeometryWhereInput!]
  OR: [GeometryWhereInput!]
  State: StateWhereInput
  h3Index15: StringNullableFilter
  id: IntFilter
  latitude: FloatFilter
  longitude: FloatFilter
}

input GeometryWhereUniqueInput {
  AND: [GeometryWhereInput!]
  City: CityWhereInput
  Location: LocationWhereInput
  NOT: [GeometryWhereInput!]
  OR: [GeometryWhereInput!]
  State: StateWhereInput
  h3Index15: StringNullableFilter
  id: Int
  latitude: FloatFilter
  longitude: FloatFilter
}

type Group {
  Photos(cursor: PhotoWhereUniqueInput, distinct: [PhotoScalarFieldEnum!], orderBy: [PhotoOrderByWithRelationInput!], skip: Int, take: Int, where: PhotoWhereInput): [Photo!]!
  Profile(cursor: ProfileWhereUniqueInput, distinct: [ProfileScalarFieldEnum!], orderBy: [ProfileOrderByWithRelationInput!], skip: Int, take: Int, where: ProfileWhereInput): [Profile!]!
  createdAt: DateTime!
  id: ID!
  name: String!
  updatedAt: DateTime!
}

input GroupCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input GroupCreateInput {
  Photos: PhotoCreateNestedManyWithoutGroupInput
  Profile: ProfileCreateNestedManyWithoutGroupsInput
  createdAt: DateTime
  id: String
  name: String!
  updatedAt: DateTime
}

input GroupCreateManyInput {
  createdAt: DateTime
  id: String
  name: String!
  updatedAt: DateTime
}

input GroupCreateNestedManyWithoutProfileInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutProfileInput!]
  create: [GroupCreateWithoutProfileInput!]
}

input GroupCreateNestedOneWithoutPhotosInput {
  connect: GroupWhereUniqueInput
  connectOrCreate: GroupCreateOrConnectWithoutPhotosInput
  create: GroupCreateWithoutPhotosInput
}

input GroupCreateOrConnectWithoutPhotosInput {
  create: GroupCreateWithoutPhotosInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateOrConnectWithoutProfileInput {
  create: GroupCreateWithoutProfileInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateWithoutPhotosInput {
  Profile: ProfileCreateNestedManyWithoutGroupsInput
  createdAt: DateTime
  id: String
  name: String!
  updatedAt: DateTime
}

input GroupCreateWithoutProfileInput {
  Photos: PhotoCreateNestedManyWithoutGroupInput
  createdAt: DateTime
  id: String
  name: String!
  updatedAt: DateTime
}

input GroupListRelationFilter {
  every: GroupWhereInput
  none: GroupWhereInput
  some: GroupWhereInput
}

input GroupMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input GroupMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input GroupNullableRelationFilter {
  is: GroupWhereInput
  isNot: GroupWhereInput
}

input GroupOrderByRelationAggregateInput {
  _count: SortOrder
}

input GroupOrderByWithAggregationInput {
  _count: GroupCountOrderByAggregateInput
  _max: GroupMaxOrderByAggregateInput
  _min: GroupMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input GroupOrderByWithRelationInput {
  Photos: PhotoOrderByRelationAggregateInput
  Profile: ProfileOrderByRelationAggregateInput
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

enum GroupScalarFieldEnum {
  createdAt
  id
  name
  updatedAt
}

input GroupScalarWhereInput {
  AND: [GroupScalarWhereInput!]
  NOT: [GroupScalarWhereInput!]
  OR: [GroupScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  updatedAt: DateTimeFilter
}

input GroupScalarWhereWithAggregatesInput {
  AND: [GroupScalarWhereWithAggregatesInput!]
  NOT: [GroupScalarWhereWithAggregatesInput!]
  OR: [GroupScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input GroupUpdateInput {
  Photos: PhotoUpdateManyWithoutGroupNestedInput
  Profile: ProfileUpdateManyWithoutGroupsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupUpdateManyWithWhereWithoutProfileInput {
  data: GroupUpdateManyMutationInput!
  where: GroupScalarWhereInput!
}

input GroupUpdateManyWithoutProfileNestedInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutProfileInput!]
  create: [GroupCreateWithoutProfileInput!]
  delete: [GroupWhereUniqueInput!]
  deleteMany: [GroupScalarWhereInput!]
  disconnect: [GroupWhereUniqueInput!]
  set: [GroupWhereUniqueInput!]
  update: [GroupUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [GroupUpdateManyWithWhereWithoutProfileInput!]
  upsert: [GroupUpsertWithWhereUniqueWithoutProfileInput!]
}

input GroupUpdateOneWithoutPhotosNestedInput {
  connect: GroupWhereUniqueInput
  connectOrCreate: GroupCreateOrConnectWithoutPhotosInput
  create: GroupCreateWithoutPhotosInput
  delete: GroupWhereInput
  disconnect: GroupWhereInput
  update: GroupUpdateToOneWithWhereWithoutPhotosInput
  upsert: GroupUpsertWithoutPhotosInput
}

input GroupUpdateToOneWithWhereWithoutPhotosInput {
  data: GroupUpdateWithoutPhotosInput!
  where: GroupWhereInput
}

input GroupUpdateWithWhereUniqueWithoutProfileInput {
  data: GroupUpdateWithoutProfileInput!
  where: GroupWhereUniqueInput!
}

input GroupUpdateWithoutPhotosInput {
  Profile: ProfileUpdateManyWithoutGroupsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupUpdateWithoutProfileInput {
  Photos: PhotoUpdateManyWithoutGroupNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input GroupUpsertWithWhereUniqueWithoutProfileInput {
  create: GroupCreateWithoutProfileInput!
  update: GroupUpdateWithoutProfileInput!
  where: GroupWhereUniqueInput!
}

input GroupUpsertWithoutPhotosInput {
  create: GroupCreateWithoutPhotosInput!
  update: GroupUpdateWithoutPhotosInput!
  where: GroupWhereInput
}

input GroupWhereInput {
  AND: [GroupWhereInput!]
  NOT: [GroupWhereInput!]
  OR: [GroupWhereInput!]
  Photos: PhotoListRelationFilter
  Profile: ProfileListRelationFilter
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  updatedAt: DateTimeFilter
}

input GroupWhereUniqueInput {
  AND: [GroupWhereInput!]
  NOT: [GroupWhereInput!]
  OR: [GroupWhereInput!]
  Photos: PhotoListRelationFilter
  Profile: ProfileListRelationFilter
  createdAt: DateTimeFilter
  id: String
  name: StringFilter
  updatedAt: DateTimeFilter
}

type H3Index5VenueRecommendation {
  Area: Area
  SearchAreaMetrics(cursor: SearchAreaMetricsWhereUniqueInput, distinct: [SearchAreaMetricsScalarFieldEnum!], orderBy: [SearchAreaMetricsOrderByWithRelationInput!], skip: Int, take: Int, where: SearchAreaMetricsWhereInput): [SearchAreaMetrics!]!
  Vote(cursor: VoteWhereUniqueInput, distinct: [VoteScalarFieldEnum!], orderBy: [VoteOrderByWithRelationInput!], skip: Int, take: Int, where: VoteWhereInput): [Vote!]!
  areaId: String
  createdAt: DateTime!
  h3Index5: String!
  id: ID!
  keywordSuggestions: [Json!]!
  timesRequested: Int
  updatedAt: DateTime!
  venuesProfileIds: [String!]!
}

input H3Index5VenueRecommendationAvgOrderByAggregateInput {
  timesRequested: SortOrder
}

input H3Index5VenueRecommendationCountOrderByAggregateInput {
  areaId: SortOrder
  createdAt: SortOrder
  h3Index5: SortOrder
  id: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
  venuesProfileIds: SortOrder
}

input H3Index5VenueRecommendationCreateInput {
  Area: AreaCreateNestedOneWithoutH3Index5VenueRecommendationInput
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutH3Index5VenueRecommendationInput
  Vote: VoteCreateNestedManyWithoutH3Index5VenueRecommendationInput
  createdAt: DateTime
  h3Index5: String!
  id: String
  keywordSuggestions: [Json!]
  timesRequested: Int
  updatedAt: DateTime
  venuesProfileIds: [String!]
}

input H3Index5VenueRecommendationCreateManyInput {
  areaId: String
  createdAt: DateTime
  h3Index5: String!
  id: String
  keywordSuggestions: [Json!]
  timesRequested: Int
  updatedAt: DateTime
  venuesProfileIds: [String!]
}

input H3Index5VenueRecommendationCreateNestedOneWithoutAreaInput {
  connect: H3Index5VenueRecommendationWhereUniqueInput
  connectOrCreate: H3Index5VenueRecommendationCreateOrConnectWithoutAreaInput
  create: H3Index5VenueRecommendationCreateWithoutAreaInput
}

input H3Index5VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput {
  connect: H3Index5VenueRecommendationWhereUniqueInput
  connectOrCreate: H3Index5VenueRecommendationCreateOrConnectWithoutSearchAreaMetricsInput
  create: H3Index5VenueRecommendationCreateWithoutSearchAreaMetricsInput
}

input H3Index5VenueRecommendationCreateNestedOneWithoutVoteInput {
  connect: H3Index5VenueRecommendationWhereUniqueInput
  connectOrCreate: H3Index5VenueRecommendationCreateOrConnectWithoutVoteInput
  create: H3Index5VenueRecommendationCreateWithoutVoteInput
}

input H3Index5VenueRecommendationCreateOrConnectWithoutAreaInput {
  create: H3Index5VenueRecommendationCreateWithoutAreaInput!
  where: H3Index5VenueRecommendationWhereUniqueInput!
}

input H3Index5VenueRecommendationCreateOrConnectWithoutSearchAreaMetricsInput {
  create: H3Index5VenueRecommendationCreateWithoutSearchAreaMetricsInput!
  where: H3Index5VenueRecommendationWhereUniqueInput!
}

input H3Index5VenueRecommendationCreateOrConnectWithoutVoteInput {
  create: H3Index5VenueRecommendationCreateWithoutVoteInput!
  where: H3Index5VenueRecommendationWhereUniqueInput!
}

input H3Index5VenueRecommendationCreateWithoutAreaInput {
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutH3Index5VenueRecommendationInput
  Vote: VoteCreateNestedManyWithoutH3Index5VenueRecommendationInput
  createdAt: DateTime
  h3Index5: String!
  id: String
  keywordSuggestions: [Json!]
  timesRequested: Int
  updatedAt: DateTime
  venuesProfileIds: [String!]
}

input H3Index5VenueRecommendationCreateWithoutSearchAreaMetricsInput {
  Area: AreaCreateNestedOneWithoutH3Index5VenueRecommendationInput
  Vote: VoteCreateNestedManyWithoutH3Index5VenueRecommendationInput
  createdAt: DateTime
  h3Index5: String!
  id: String
  keywordSuggestions: [Json!]
  timesRequested: Int
  updatedAt: DateTime
  venuesProfileIds: [String!]
}

input H3Index5VenueRecommendationCreateWithoutVoteInput {
  Area: AreaCreateNestedOneWithoutH3Index5VenueRecommendationInput
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutH3Index5VenueRecommendationInput
  createdAt: DateTime
  h3Index5: String!
  id: String
  keywordSuggestions: [Json!]
  timesRequested: Int
  updatedAt: DateTime
  venuesProfileIds: [String!]
}

input H3Index5VenueRecommendationCreatekeywordSuggestionsInput {
  set: [Json!]!
}

input H3Index5VenueRecommendationCreatevenuesProfileIdsInput {
  set: [String!]!
}

input H3Index5VenueRecommendationMaxOrderByAggregateInput {
  areaId: SortOrder
  createdAt: SortOrder
  h3Index5: SortOrder
  id: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
}

input H3Index5VenueRecommendationMinOrderByAggregateInput {
  areaId: SortOrder
  createdAt: SortOrder
  h3Index5: SortOrder
  id: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
}

input H3Index5VenueRecommendationNullableRelationFilter {
  is: H3Index5VenueRecommendationWhereInput
  isNot: H3Index5VenueRecommendationWhereInput
}

input H3Index5VenueRecommendationOrderByWithAggregationInput {
  _avg: H3Index5VenueRecommendationAvgOrderByAggregateInput
  _count: H3Index5VenueRecommendationCountOrderByAggregateInput
  _max: H3Index5VenueRecommendationMaxOrderByAggregateInput
  _min: H3Index5VenueRecommendationMinOrderByAggregateInput
  _sum: H3Index5VenueRecommendationSumOrderByAggregateInput
  areaId: SortOrder
  createdAt: SortOrder
  h3Index5: SortOrder
  id: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
  venuesProfileIds: SortOrder
}

input H3Index5VenueRecommendationOrderByWithRelationInput {
  Area: AreaOrderByWithRelationInput
  SearchAreaMetrics: SearchAreaMetricsOrderByRelationAggregateInput
  Vote: VoteOrderByRelationAggregateInput
  areaId: SortOrder
  createdAt: SortOrder
  h3Index5: SortOrder
  id: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
  venuesProfileIds: SortOrder
}

enum H3Index5VenueRecommendationScalarFieldEnum {
  areaId
  createdAt
  h3Index5
  id
  keywordSuggestions
  timesRequested
  updatedAt
  venuesProfileIds
}

input H3Index5VenueRecommendationScalarWhereWithAggregatesInput {
  AND: [H3Index5VenueRecommendationScalarWhereWithAggregatesInput!]
  NOT: [H3Index5VenueRecommendationScalarWhereWithAggregatesInput!]
  OR: [H3Index5VenueRecommendationScalarWhereWithAggregatesInput!]
  areaId: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  h3Index5: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  keywordSuggestions: JsonNullableListFilter
  timesRequested: IntNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  venuesProfileIds: StringNullableListFilter
}

input H3Index5VenueRecommendationSumOrderByAggregateInput {
  timesRequested: SortOrder
}

input H3Index5VenueRecommendationUpdateInput {
  Area: AreaUpdateOneWithoutH3Index5VenueRecommendationNestedInput
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutH3Index5VenueRecommendationNestedInput
  Vote: VoteUpdateManyWithoutH3Index5VenueRecommendationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venuesProfileIds: [String!]
}

input H3Index5VenueRecommendationUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venuesProfileIds: [String!]
}

input H3Index5VenueRecommendationUpdateOneWithoutAreaNestedInput {
  connect: H3Index5VenueRecommendationWhereUniqueInput
  connectOrCreate: H3Index5VenueRecommendationCreateOrConnectWithoutAreaInput
  create: H3Index5VenueRecommendationCreateWithoutAreaInput
  delete: H3Index5VenueRecommendationWhereInput
  disconnect: H3Index5VenueRecommendationWhereInput
  update: H3Index5VenueRecommendationUpdateToOneWithWhereWithoutAreaInput
  upsert: H3Index5VenueRecommendationUpsertWithoutAreaInput
}

input H3Index5VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput {
  connect: H3Index5VenueRecommendationWhereUniqueInput
  connectOrCreate: H3Index5VenueRecommendationCreateOrConnectWithoutSearchAreaMetricsInput
  create: H3Index5VenueRecommendationCreateWithoutSearchAreaMetricsInput
  delete: H3Index5VenueRecommendationWhereInput
  disconnect: H3Index5VenueRecommendationWhereInput
  update: H3Index5VenueRecommendationUpdateToOneWithWhereWithoutSearchAreaMetricsInput
  upsert: H3Index5VenueRecommendationUpsertWithoutSearchAreaMetricsInput
}

input H3Index5VenueRecommendationUpdateOneWithoutVoteNestedInput {
  connect: H3Index5VenueRecommendationWhereUniqueInput
  connectOrCreate: H3Index5VenueRecommendationCreateOrConnectWithoutVoteInput
  create: H3Index5VenueRecommendationCreateWithoutVoteInput
  delete: H3Index5VenueRecommendationWhereInput
  disconnect: H3Index5VenueRecommendationWhereInput
  update: H3Index5VenueRecommendationUpdateToOneWithWhereWithoutVoteInput
  upsert: H3Index5VenueRecommendationUpsertWithoutVoteInput
}

input H3Index5VenueRecommendationUpdateToOneWithWhereWithoutAreaInput {
  data: H3Index5VenueRecommendationUpdateWithoutAreaInput!
  where: H3Index5VenueRecommendationWhereInput
}

input H3Index5VenueRecommendationUpdateToOneWithWhereWithoutSearchAreaMetricsInput {
  data: H3Index5VenueRecommendationUpdateWithoutSearchAreaMetricsInput!
  where: H3Index5VenueRecommendationWhereInput
}

input H3Index5VenueRecommendationUpdateToOneWithWhereWithoutVoteInput {
  data: H3Index5VenueRecommendationUpdateWithoutVoteInput!
  where: H3Index5VenueRecommendationWhereInput
}

input H3Index5VenueRecommendationUpdateWithoutAreaInput {
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutH3Index5VenueRecommendationNestedInput
  Vote: VoteUpdateManyWithoutH3Index5VenueRecommendationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venuesProfileIds: [String!]
}

input H3Index5VenueRecommendationUpdateWithoutSearchAreaMetricsInput {
  Area: AreaUpdateOneWithoutH3Index5VenueRecommendationNestedInput
  Vote: VoteUpdateManyWithoutH3Index5VenueRecommendationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venuesProfileIds: [String!]
}

input H3Index5VenueRecommendationUpdateWithoutVoteInput {
  Area: AreaUpdateOneWithoutH3Index5VenueRecommendationNestedInput
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutH3Index5VenueRecommendationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index5: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venuesProfileIds: [String!]
}

input H3Index5VenueRecommendationUpdatekeywordSuggestionsInput {
  push: Json
  set: [Json!]
}

input H3Index5VenueRecommendationUpdatevenuesProfileIdsInput {
  push: [String!]
  set: [String!]
}

input H3Index5VenueRecommendationUpsertWithoutAreaInput {
  create: H3Index5VenueRecommendationCreateWithoutAreaInput!
  update: H3Index5VenueRecommendationUpdateWithoutAreaInput!
  where: H3Index5VenueRecommendationWhereInput
}

input H3Index5VenueRecommendationUpsertWithoutSearchAreaMetricsInput {
  create: H3Index5VenueRecommendationCreateWithoutSearchAreaMetricsInput!
  update: H3Index5VenueRecommendationUpdateWithoutSearchAreaMetricsInput!
  where: H3Index5VenueRecommendationWhereInput
}

input H3Index5VenueRecommendationUpsertWithoutVoteInput {
  create: H3Index5VenueRecommendationCreateWithoutVoteInput!
  update: H3Index5VenueRecommendationUpdateWithoutVoteInput!
  where: H3Index5VenueRecommendationWhereInput
}

input H3Index5VenueRecommendationWhereInput {
  AND: [H3Index5VenueRecommendationWhereInput!]
  Area: AreaWhereInput
  NOT: [H3Index5VenueRecommendationWhereInput!]
  OR: [H3Index5VenueRecommendationWhereInput!]
  SearchAreaMetrics: SearchAreaMetricsListRelationFilter
  Vote: VoteListRelationFilter
  areaId: StringNullableFilter
  createdAt: DateTimeFilter
  h3Index5: StringFilter
  id: StringFilter
  keywordSuggestions: JsonNullableListFilter
  timesRequested: IntNullableFilter
  updatedAt: DateTimeFilter
  venuesProfileIds: StringNullableListFilter
}

input H3Index5VenueRecommendationWhereUniqueInput {
  AND: [H3Index5VenueRecommendationWhereInput!]
  Area: AreaWhereInput
  NOT: [H3Index5VenueRecommendationWhereInput!]
  OR: [H3Index5VenueRecommendationWhereInput!]
  SearchAreaMetrics: SearchAreaMetricsListRelationFilter
  Vote: VoteListRelationFilter
  areaId: String
  createdAt: DateTimeFilter
  h3Index5: String
  id: String
  keywordSuggestions: JsonNullableListFilter
  timesRequested: IntNullableFilter
  updatedAt: DateTimeFilter
  venuesProfileIds: StringNullableListFilter
}

type H3Index6VenueRecommendation {
  Area: Area
  SearchAreaMetrics(cursor: SearchAreaMetricsWhereUniqueInput, distinct: [SearchAreaMetricsScalarFieldEnum!], orderBy: [SearchAreaMetricsOrderByWithRelationInput!], skip: Int, take: Int, where: SearchAreaMetricsWhereInput): [SearchAreaMetrics!]!
  Vote(cursor: VoteWhereUniqueInput, distinct: [VoteScalarFieldEnum!], orderBy: [VoteOrderByWithRelationInput!], skip: Int, take: Int, where: VoteWhereInput): [Vote!]!
  areaId: String
  createdAt: DateTime!
  distanceInM: Int
  h3Index6: String!
  id: ID!
  keywordSuggestions: [Json!]!
  timesRequested: Int
  updatedAt: DateTime!
  venues: [ProfileVenue!]
  venuesProfileIds: [String!]!
}

input H3Index6VenueRecommendationAvgOrderByAggregateInput {
  timesRequested: SortOrder
}

input H3Index6VenueRecommendationCountOrderByAggregateInput {
  areaId: SortOrder
  createdAt: SortOrder
  h3Index6: SortOrder
  id: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
  venuesProfileIds: SortOrder
}

input H3Index6VenueRecommendationCreateInput {
  Area: AreaCreateNestedOneWithoutH3Index6VenueRecommendationInput
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutH3Index6VenueRecommendationInput
  Vote: VoteCreateNestedManyWithoutH3Index6VenueRecommendationInput
  createdAt: DateTime
  h3Index6: String!
  id: String
  keywordSuggestions: [Json!]
  timesRequested: Int
  updatedAt: DateTime
  venuesProfileIds: [String!]
}

input H3Index6VenueRecommendationCreateManyInput {
  areaId: String
  createdAt: DateTime
  h3Index6: String!
  id: String
  keywordSuggestions: [Json!]
  timesRequested: Int
  updatedAt: DateTime
  venuesProfileIds: [String!]
}

input H3Index6VenueRecommendationCreateNestedOneWithoutAreaInput {
  connect: H3Index6VenueRecommendationWhereUniqueInput
  connectOrCreate: H3Index6VenueRecommendationCreateOrConnectWithoutAreaInput
  create: H3Index6VenueRecommendationCreateWithoutAreaInput
}

input H3Index6VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput {
  connect: H3Index6VenueRecommendationWhereUniqueInput
  connectOrCreate: H3Index6VenueRecommendationCreateOrConnectWithoutSearchAreaMetricsInput
  create: H3Index6VenueRecommendationCreateWithoutSearchAreaMetricsInput
}

input H3Index6VenueRecommendationCreateNestedOneWithoutVoteInput {
  connect: H3Index6VenueRecommendationWhereUniqueInput
  connectOrCreate: H3Index6VenueRecommendationCreateOrConnectWithoutVoteInput
  create: H3Index6VenueRecommendationCreateWithoutVoteInput
}

input H3Index6VenueRecommendationCreateOrConnectWithoutAreaInput {
  create: H3Index6VenueRecommendationCreateWithoutAreaInput!
  where: H3Index6VenueRecommendationWhereUniqueInput!
}

input H3Index6VenueRecommendationCreateOrConnectWithoutSearchAreaMetricsInput {
  create: H3Index6VenueRecommendationCreateWithoutSearchAreaMetricsInput!
  where: H3Index6VenueRecommendationWhereUniqueInput!
}

input H3Index6VenueRecommendationCreateOrConnectWithoutVoteInput {
  create: H3Index6VenueRecommendationCreateWithoutVoteInput!
  where: H3Index6VenueRecommendationWhereUniqueInput!
}

input H3Index6VenueRecommendationCreateWithoutAreaInput {
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutH3Index6VenueRecommendationInput
  Vote: VoteCreateNestedManyWithoutH3Index6VenueRecommendationInput
  createdAt: DateTime
  h3Index6: String!
  id: String
  keywordSuggestions: [Json!]
  timesRequested: Int
  updatedAt: DateTime
  venuesProfileIds: [String!]
}

input H3Index6VenueRecommendationCreateWithoutSearchAreaMetricsInput {
  Area: AreaCreateNestedOneWithoutH3Index6VenueRecommendationInput
  Vote: VoteCreateNestedManyWithoutH3Index6VenueRecommendationInput
  createdAt: DateTime
  h3Index6: String!
  id: String
  keywordSuggestions: [Json!]
  timesRequested: Int
  updatedAt: DateTime
  venuesProfileIds: [String!]
}

input H3Index6VenueRecommendationCreateWithoutVoteInput {
  Area: AreaCreateNestedOneWithoutH3Index6VenueRecommendationInput
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutH3Index6VenueRecommendationInput
  createdAt: DateTime
  h3Index6: String!
  id: String
  keywordSuggestions: [Json!]
  timesRequested: Int
  updatedAt: DateTime
  venuesProfileIds: [String!]
}

input H3Index6VenueRecommendationCreatekeywordSuggestionsInput {
  set: [Json!]!
}

input H3Index6VenueRecommendationCreatevenuesProfileIdsInput {
  set: [String!]!
}

input H3Index6VenueRecommendationMaxOrderByAggregateInput {
  areaId: SortOrder
  createdAt: SortOrder
  h3Index6: SortOrder
  id: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
}

input H3Index6VenueRecommendationMinOrderByAggregateInput {
  areaId: SortOrder
  createdAt: SortOrder
  h3Index6: SortOrder
  id: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
}

input H3Index6VenueRecommendationNullableRelationFilter {
  is: H3Index6VenueRecommendationWhereInput
  isNot: H3Index6VenueRecommendationWhereInput
}

input H3Index6VenueRecommendationOrderByWithAggregationInput {
  _avg: H3Index6VenueRecommendationAvgOrderByAggregateInput
  _count: H3Index6VenueRecommendationCountOrderByAggregateInput
  _max: H3Index6VenueRecommendationMaxOrderByAggregateInput
  _min: H3Index6VenueRecommendationMinOrderByAggregateInput
  _sum: H3Index6VenueRecommendationSumOrderByAggregateInput
  areaId: SortOrder
  createdAt: SortOrder
  h3Index6: SortOrder
  id: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
  venuesProfileIds: SortOrder
}

input H3Index6VenueRecommendationOrderByWithRelationInput {
  Area: AreaOrderByWithRelationInput
  SearchAreaMetrics: SearchAreaMetricsOrderByRelationAggregateInput
  Vote: VoteOrderByRelationAggregateInput
  areaId: SortOrder
  createdAt: SortOrder
  h3Index6: SortOrder
  id: SortOrder
  keywordSuggestions: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
  venuesProfileIds: SortOrder
}

enum H3Index6VenueRecommendationScalarFieldEnum {
  areaId
  createdAt
  h3Index6
  id
  keywordSuggestions
  timesRequested
  updatedAt
  venuesProfileIds
}

input H3Index6VenueRecommendationScalarWhereWithAggregatesInput {
  AND: [H3Index6VenueRecommendationScalarWhereWithAggregatesInput!]
  NOT: [H3Index6VenueRecommendationScalarWhereWithAggregatesInput!]
  OR: [H3Index6VenueRecommendationScalarWhereWithAggregatesInput!]
  areaId: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  h3Index6: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  keywordSuggestions: JsonNullableListFilter
  timesRequested: IntNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  venuesProfileIds: StringNullableListFilter
}

input H3Index6VenueRecommendationSumOrderByAggregateInput {
  timesRequested: SortOrder
}

input H3Index6VenueRecommendationUpdateInput {
  Area: AreaUpdateOneWithoutH3Index6VenueRecommendationNestedInput
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutH3Index6VenueRecommendationNestedInput
  Vote: VoteUpdateManyWithoutH3Index6VenueRecommendationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venuesProfileIds: [String!]
}

input H3Index6VenueRecommendationUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venuesProfileIds: [String!]
}

input H3Index6VenueRecommendationUpdateOneWithoutAreaNestedInput {
  connect: H3Index6VenueRecommendationWhereUniqueInput
  connectOrCreate: H3Index6VenueRecommendationCreateOrConnectWithoutAreaInput
  create: H3Index6VenueRecommendationCreateWithoutAreaInput
  delete: H3Index6VenueRecommendationWhereInput
  disconnect: H3Index6VenueRecommendationWhereInput
  update: H3Index6VenueRecommendationUpdateToOneWithWhereWithoutAreaInput
  upsert: H3Index6VenueRecommendationUpsertWithoutAreaInput
}

input H3Index6VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput {
  connect: H3Index6VenueRecommendationWhereUniqueInput
  connectOrCreate: H3Index6VenueRecommendationCreateOrConnectWithoutSearchAreaMetricsInput
  create: H3Index6VenueRecommendationCreateWithoutSearchAreaMetricsInput
  delete: H3Index6VenueRecommendationWhereInput
  disconnect: H3Index6VenueRecommendationWhereInput
  update: H3Index6VenueRecommendationUpdateToOneWithWhereWithoutSearchAreaMetricsInput
  upsert: H3Index6VenueRecommendationUpsertWithoutSearchAreaMetricsInput
}

input H3Index6VenueRecommendationUpdateOneWithoutVoteNestedInput {
  connect: H3Index6VenueRecommendationWhereUniqueInput
  connectOrCreate: H3Index6VenueRecommendationCreateOrConnectWithoutVoteInput
  create: H3Index6VenueRecommendationCreateWithoutVoteInput
  delete: H3Index6VenueRecommendationWhereInput
  disconnect: H3Index6VenueRecommendationWhereInput
  update: H3Index6VenueRecommendationUpdateToOneWithWhereWithoutVoteInput
  upsert: H3Index6VenueRecommendationUpsertWithoutVoteInput
}

input H3Index6VenueRecommendationUpdateToOneWithWhereWithoutAreaInput {
  data: H3Index6VenueRecommendationUpdateWithoutAreaInput!
  where: H3Index6VenueRecommendationWhereInput
}

input H3Index6VenueRecommendationUpdateToOneWithWhereWithoutSearchAreaMetricsInput {
  data: H3Index6VenueRecommendationUpdateWithoutSearchAreaMetricsInput!
  where: H3Index6VenueRecommendationWhereInput
}

input H3Index6VenueRecommendationUpdateToOneWithWhereWithoutVoteInput {
  data: H3Index6VenueRecommendationUpdateWithoutVoteInput!
  where: H3Index6VenueRecommendationWhereInput
}

input H3Index6VenueRecommendationUpdateWithoutAreaInput {
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutH3Index6VenueRecommendationNestedInput
  Vote: VoteUpdateManyWithoutH3Index6VenueRecommendationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venuesProfileIds: [String!]
}

input H3Index6VenueRecommendationUpdateWithoutSearchAreaMetricsInput {
  Area: AreaUpdateOneWithoutH3Index6VenueRecommendationNestedInput
  Vote: VoteUpdateManyWithoutH3Index6VenueRecommendationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venuesProfileIds: [String!]
}

input H3Index6VenueRecommendationUpdateWithoutVoteInput {
  Area: AreaUpdateOneWithoutH3Index6VenueRecommendationNestedInput
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutH3Index6VenueRecommendationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index6: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  keywordSuggestions: [Json!]
  timesRequested: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venuesProfileIds: [String!]
}

input H3Index6VenueRecommendationUpdatekeywordSuggestionsInput {
  push: Json
  set: [Json!]
}

input H3Index6VenueRecommendationUpdatevenuesProfileIdsInput {
  push: [String!]
  set: [String!]
}

input H3Index6VenueRecommendationUpsertWithoutAreaInput {
  create: H3Index6VenueRecommendationCreateWithoutAreaInput!
  update: H3Index6VenueRecommendationUpdateWithoutAreaInput!
  where: H3Index6VenueRecommendationWhereInput
}

input H3Index6VenueRecommendationUpsertWithoutSearchAreaMetricsInput {
  create: H3Index6VenueRecommendationCreateWithoutSearchAreaMetricsInput!
  update: H3Index6VenueRecommendationUpdateWithoutSearchAreaMetricsInput!
  where: H3Index6VenueRecommendationWhereInput
}

input H3Index6VenueRecommendationUpsertWithoutVoteInput {
  create: H3Index6VenueRecommendationCreateWithoutVoteInput!
  update: H3Index6VenueRecommendationUpdateWithoutVoteInput!
  where: H3Index6VenueRecommendationWhereInput
}

input H3Index6VenueRecommendationWhereInput {
  AND: [H3Index6VenueRecommendationWhereInput!]
  Area: AreaWhereInput
  NOT: [H3Index6VenueRecommendationWhereInput!]
  OR: [H3Index6VenueRecommendationWhereInput!]
  SearchAreaMetrics: SearchAreaMetricsListRelationFilter
  Vote: VoteListRelationFilter
  areaId: StringNullableFilter
  createdAt: DateTimeFilter
  h3Index6: StringFilter
  id: StringFilter
  keywordSuggestions: JsonNullableListFilter
  timesRequested: IntNullableFilter
  updatedAt: DateTimeFilter
  venuesProfileIds: StringNullableListFilter
}

input H3Index6VenueRecommendationWhereUniqueInput {
  AND: [H3Index6VenueRecommendationWhereInput!]
  Area: AreaWhereInput
  NOT: [H3Index6VenueRecommendationWhereInput!]
  OR: [H3Index6VenueRecommendationWhereInput!]
  SearchAreaMetrics: SearchAreaMetricsListRelationFilter
  Vote: VoteListRelationFilter
  areaId: String
  createdAt: DateTimeFilter
  h3Index6: String
  id: String
  keywordSuggestions: JsonNullableListFilter
  timesRequested: IntNullableFilter
  updatedAt: DateTimeFilter
  venuesProfileIds: StringNullableListFilter
}

interface IBaseMessageEvent {
  """Event type"""
  eventType: MessageEventType
}

interface IBasePostEvent {
  """Event type"""
  eventType: PostEventType
}

type IdentifiableInformation {
  Profile: Profile!
  birthday: DateTime
  createdAt: DateTime!
  currenttown: String
  firstname: String
  fullname: String
  gender: String
  hometown: String
  id: ID!
  lastname: String
  lookfor: String
  nickname: String
  profileId: String!
  storageId: String
  surname: String
  updatedAt: DateTime!
  username: String!
}

input IdentifiableInformationCountOrderByAggregateInput {
  birthday: SortOrder
  createdAt: SortOrder
  currenttown: SortOrder
  firstname: SortOrder
  fullname: SortOrder
  gender: SortOrder
  hometown: SortOrder
  id: SortOrder
  lastname: SortOrder
  lookfor: SortOrder
  nickname: SortOrder
  profileId: SortOrder
  storageId: SortOrder
  surname: SortOrder
  updatedAt: SortOrder
  username: SortOrder
}

input IdentifiableInformationCreateInput {
  Profile: ProfileCreateNestedOneWithoutIdentifiableInformationInput!
  birthday: DateTime
  createdAt: DateTime
  currenttown: String
  firstname: String
  fullname: String
  gender: String
  hometown: String
  id: String
  lastname: String
  lookfor: String
  nickname: String
  storageId: String
  surname: String
  updatedAt: DateTime
  username: String!
}

input IdentifiableInformationCreateManyInput {
  birthday: DateTime
  createdAt: DateTime
  currenttown: String
  firstname: String
  fullname: String
  gender: String
  hometown: String
  id: String
  lastname: String
  lookfor: String
  nickname: String
  profileId: String!
  storageId: String
  surname: String
  updatedAt: DateTime
  username: String!
}

input IdentifiableInformationCreateNestedOneWithoutProfileInput {
  connect: IdentifiableInformationWhereUniqueInput
  connectOrCreate: IdentifiableInformationCreateOrConnectWithoutProfileInput
  create: IdentifiableInformationCreateWithoutProfileInput
}

input IdentifiableInformationCreateOrConnectWithoutProfileInput {
  create: IdentifiableInformationCreateWithoutProfileInput!
  where: IdentifiableInformationWhereUniqueInput!
}

input IdentifiableInformationCreateWithoutProfileInput {
  birthday: DateTime
  createdAt: DateTime
  currenttown: String
  firstname: String
  fullname: String
  gender: String
  hometown: String
  id: String
  lastname: String
  lookfor: String
  nickname: String
  storageId: String
  surname: String
  updatedAt: DateTime
  username: String!
}

input IdentifiableInformationMaxOrderByAggregateInput {
  birthday: SortOrder
  createdAt: SortOrder
  currenttown: SortOrder
  firstname: SortOrder
  fullname: SortOrder
  gender: SortOrder
  hometown: SortOrder
  id: SortOrder
  lastname: SortOrder
  lookfor: SortOrder
  nickname: SortOrder
  profileId: SortOrder
  storageId: SortOrder
  surname: SortOrder
  updatedAt: SortOrder
  username: SortOrder
}

input IdentifiableInformationMinOrderByAggregateInput {
  birthday: SortOrder
  createdAt: SortOrder
  currenttown: SortOrder
  firstname: SortOrder
  fullname: SortOrder
  gender: SortOrder
  hometown: SortOrder
  id: SortOrder
  lastname: SortOrder
  lookfor: SortOrder
  nickname: SortOrder
  profileId: SortOrder
  storageId: SortOrder
  surname: SortOrder
  updatedAt: SortOrder
  username: SortOrder
}

input IdentifiableInformationNullableRelationFilter {
  is: IdentifiableInformationWhereInput
  isNot: IdentifiableInformationWhereInput
}

input IdentifiableInformationOrderByWithAggregationInput {
  _count: IdentifiableInformationCountOrderByAggregateInput
  _max: IdentifiableInformationMaxOrderByAggregateInput
  _min: IdentifiableInformationMinOrderByAggregateInput
  birthday: SortOrder
  createdAt: SortOrder
  currenttown: SortOrder
  firstname: SortOrder
  fullname: SortOrder
  gender: SortOrder
  hometown: SortOrder
  id: SortOrder
  lastname: SortOrder
  lookfor: SortOrder
  nickname: SortOrder
  profileId: SortOrder
  storageId: SortOrder
  surname: SortOrder
  updatedAt: SortOrder
  username: SortOrder
}

input IdentifiableInformationOrderByWithRelationInput {
  Profile: ProfileOrderByWithRelationInput
  birthday: SortOrder
  createdAt: SortOrder
  currenttown: SortOrder
  firstname: SortOrder
  fullname: SortOrder
  gender: SortOrder
  hometown: SortOrder
  id: SortOrder
  lastname: SortOrder
  lookfor: SortOrder
  nickname: SortOrder
  profileId: SortOrder
  storageId: SortOrder
  surname: SortOrder
  updatedAt: SortOrder
  username: SortOrder
}

enum IdentifiableInformationScalarFieldEnum {
  birthday
  createdAt
  currenttown
  firstname
  fullname
  gender
  hometown
  id
  lastname
  lookfor
  nickname
  profileId
  storageId
  surname
  updatedAt
  username
}

input IdentifiableInformationScalarWhereWithAggregatesInput {
  AND: [IdentifiableInformationScalarWhereWithAggregatesInput!]
  NOT: [IdentifiableInformationScalarWhereWithAggregatesInput!]
  OR: [IdentifiableInformationScalarWhereWithAggregatesInput!]
  birthday: DateTimeNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  currenttown: StringNullableWithAggregatesFilter
  firstname: StringNullableWithAggregatesFilter
  fullname: StringNullableWithAggregatesFilter
  gender: StringNullableWithAggregatesFilter
  hometown: StringNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  lastname: StringNullableWithAggregatesFilter
  lookfor: StringNullableWithAggregatesFilter
  nickname: StringNullableWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  storageId: StringNullableWithAggregatesFilter
  surname: StringNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  username: StringWithAggregatesFilter
}

input IdentifiableInformationUpdateInput {
  Profile: ProfileUpdateOneRequiredWithoutIdentifiableInformationNestedInput
  birthday: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  currenttown: NullableStringFieldUpdateOperationsInput
  firstname: NullableStringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  hometown: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  lookfor: NullableStringFieldUpdateOperationsInput
  nickname: NullableStringFieldUpdateOperationsInput
  storageId: NullableStringFieldUpdateOperationsInput
  surname: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input IdentifiableInformationUpdateManyMutationInput {
  birthday: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  currenttown: NullableStringFieldUpdateOperationsInput
  firstname: NullableStringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  hometown: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  lookfor: NullableStringFieldUpdateOperationsInput
  nickname: NullableStringFieldUpdateOperationsInput
  storageId: NullableStringFieldUpdateOperationsInput
  surname: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input IdentifiableInformationUpdateOneWithoutProfileNestedInput {
  connect: IdentifiableInformationWhereUniqueInput
  connectOrCreate: IdentifiableInformationCreateOrConnectWithoutProfileInput
  create: IdentifiableInformationCreateWithoutProfileInput
  delete: IdentifiableInformationWhereInput
  disconnect: IdentifiableInformationWhereInput
  update: IdentifiableInformationUpdateToOneWithWhereWithoutProfileInput
  upsert: IdentifiableInformationUpsertWithoutProfileInput
}

input IdentifiableInformationUpdateToOneWithWhereWithoutProfileInput {
  data: IdentifiableInformationUpdateWithoutProfileInput!
  where: IdentifiableInformationWhereInput
}

input IdentifiableInformationUpdateWithoutProfileInput {
  birthday: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  currenttown: NullableStringFieldUpdateOperationsInput
  firstname: NullableStringFieldUpdateOperationsInput
  fullname: NullableStringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  hometown: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  lookfor: NullableStringFieldUpdateOperationsInput
  nickname: NullableStringFieldUpdateOperationsInput
  storageId: NullableStringFieldUpdateOperationsInput
  surname: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input IdentifiableInformationUpsertWithoutProfileInput {
  create: IdentifiableInformationCreateWithoutProfileInput!
  update: IdentifiableInformationUpdateWithoutProfileInput!
  where: IdentifiableInformationWhereInput
}

input IdentifiableInformationWhereInput {
  AND: [IdentifiableInformationWhereInput!]
  NOT: [IdentifiableInformationWhereInput!]
  OR: [IdentifiableInformationWhereInput!]
  Profile: ProfileWhereInput
  birthday: DateTimeNullableFilter
  createdAt: DateTimeFilter
  currenttown: StringNullableFilter
  firstname: StringNullableFilter
  fullname: StringNullableFilter
  gender: StringNullableFilter
  hometown: StringNullableFilter
  id: StringFilter
  lastname: StringNullableFilter
  lookfor: StringNullableFilter
  nickname: StringNullableFilter
  profileId: StringFilter
  storageId: StringNullableFilter
  surname: StringNullableFilter
  updatedAt: DateTimeFilter
  username: StringFilter
}

input IdentifiableInformationWhereUniqueInput {
  AND: [IdentifiableInformationWhereInput!]
  NOT: [IdentifiableInformationWhereInput!]
  OR: [IdentifiableInformationWhereInput!]
  Profile: ProfileWhereInput
  birthday: DateTimeNullableFilter
  createdAt: DateTimeFilter
  currenttown: StringNullableFilter
  firstname: StringNullableFilter
  fullname: StringNullableFilter
  gender: StringNullableFilter
  hometown: StringNullableFilter
  id: String
  lastname: StringNullableFilter
  lookfor: StringNullableFilter
  nickname: StringNullableFilter
  profileId: String
  storageId: StringNullableFilter
  surname: StringNullableFilter
  updatedAt: DateTimeFilter
  username: String
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input IntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

scalar Json

input JsonFilter {
  array_contains: Json
  array_ends_with: Json
  array_starts_with: Json
  equals: Json
  gt: Json
  gte: Json
  lt: Json
  lte: Json
  not: Json
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

enum JsonNullValueFilter {
  AnyNull
  DbNull
  JsonNull
}

enum JsonNullValueInput {
  JsonNull
}

input JsonNullableListFilter {
  equals: [Json!]
  has: Json
  hasEvery: [Json!]
  hasSome: [Json!]
  isEmpty: Boolean
}

input JsonWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedJsonFilter
  _min: NestedJsonFilter
  array_contains: Json
  array_ends_with: Json
  array_starts_with: Json
  equals: Json
  gt: Json
  gte: Json
  lt: Json
  lte: Json
  not: Json
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

"""
Returns the Profile latest Privacy and Terms of Service documents to the client.
"""
type LatestPrivacyAndTermsDocumentResponse {
  privacy: Document
  termsofservice: Document
}

type LegalAgreement {
  Credentials: Credentials
  Document: Document!
  aggreed: Boolean!
  createdAt: DateTime!
  credentialsId: String
  documentId: Int!
  id: ID!
  updatedAt: DateTime!
}

input LegalAgreementAvgOrderByAggregateInput {
  documentId: SortOrder
}

input LegalAgreementCountOrderByAggregateInput {
  aggreed: SortOrder
  createdAt: SortOrder
  credentialsId: SortOrder
  documentId: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input LegalAgreementCreateInput {
  Credentials: CredentialsCreateNestedOneWithoutLegalAgreementInput
  Document: DocumentCreateNestedOneWithoutLegalAgreementInput!
  aggreed: Boolean
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input LegalAgreementCreateManyCredentialsInput {
  aggreed: Boolean
  createdAt: DateTime
  documentId: Int!
  id: String
  updatedAt: DateTime
}

input LegalAgreementCreateManyCredentialsInputEnvelope {
  data: [LegalAgreementCreateManyCredentialsInput!]!
  skipDuplicates: Boolean
}

input LegalAgreementCreateManyDocumentInput {
  aggreed: Boolean
  createdAt: DateTime
  credentialsId: String
  id: String
  updatedAt: DateTime
}

input LegalAgreementCreateManyDocumentInputEnvelope {
  data: [LegalAgreementCreateManyDocumentInput!]!
  skipDuplicates: Boolean
}

input LegalAgreementCreateManyInput {
  aggreed: Boolean
  createdAt: DateTime
  credentialsId: String
  documentId: Int!
  id: String
  updatedAt: DateTime
}

input LegalAgreementCreateNestedManyWithoutCredentialsInput {
  connect: [LegalAgreementWhereUniqueInput!]
  connectOrCreate: [LegalAgreementCreateOrConnectWithoutCredentialsInput!]
  create: [LegalAgreementCreateWithoutCredentialsInput!]
  createMany: LegalAgreementCreateManyCredentialsInputEnvelope
}

input LegalAgreementCreateNestedManyWithoutDocumentInput {
  connect: [LegalAgreementWhereUniqueInput!]
  connectOrCreate: [LegalAgreementCreateOrConnectWithoutDocumentInput!]
  create: [LegalAgreementCreateWithoutDocumentInput!]
  createMany: LegalAgreementCreateManyDocumentInputEnvelope
}

input LegalAgreementCreateOrConnectWithoutCredentialsInput {
  create: LegalAgreementCreateWithoutCredentialsInput!
  where: LegalAgreementWhereUniqueInput!
}

input LegalAgreementCreateOrConnectWithoutDocumentInput {
  create: LegalAgreementCreateWithoutDocumentInput!
  where: LegalAgreementWhereUniqueInput!
}

input LegalAgreementCreateWithoutCredentialsInput {
  Document: DocumentCreateNestedOneWithoutLegalAgreementInput!
  aggreed: Boolean
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input LegalAgreementCreateWithoutDocumentInput {
  Credentials: CredentialsCreateNestedOneWithoutLegalAgreementInput
  aggreed: Boolean
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input LegalAgreementListRelationFilter {
  every: LegalAgreementWhereInput
  none: LegalAgreementWhereInput
  some: LegalAgreementWhereInput
}

input LegalAgreementMaxOrderByAggregateInput {
  aggreed: SortOrder
  createdAt: SortOrder
  credentialsId: SortOrder
  documentId: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input LegalAgreementMinOrderByAggregateInput {
  aggreed: SortOrder
  createdAt: SortOrder
  credentialsId: SortOrder
  documentId: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input LegalAgreementOrderByRelationAggregateInput {
  _count: SortOrder
}

input LegalAgreementOrderByWithAggregationInput {
  _avg: LegalAgreementAvgOrderByAggregateInput
  _count: LegalAgreementCountOrderByAggregateInput
  _max: LegalAgreementMaxOrderByAggregateInput
  _min: LegalAgreementMinOrderByAggregateInput
  _sum: LegalAgreementSumOrderByAggregateInput
  aggreed: SortOrder
  createdAt: SortOrder
  credentialsId: SortOrder
  documentId: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input LegalAgreementOrderByWithRelationInput {
  Credentials: CredentialsOrderByWithRelationInput
  Document: DocumentOrderByWithRelationInput
  aggreed: SortOrder
  createdAt: SortOrder
  credentialsId: SortOrder
  documentId: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

enum LegalAgreementScalarFieldEnum {
  aggreed
  createdAt
  credentialsId
  documentId
  id
  updatedAt
}

input LegalAgreementScalarWhereInput {
  AND: [LegalAgreementScalarWhereInput!]
  NOT: [LegalAgreementScalarWhereInput!]
  OR: [LegalAgreementScalarWhereInput!]
  aggreed: BoolFilter
  createdAt: DateTimeFilter
  credentialsId: StringNullableFilter
  documentId: IntFilter
  id: StringFilter
  updatedAt: DateTimeFilter
}

input LegalAgreementScalarWhereWithAggregatesInput {
  AND: [LegalAgreementScalarWhereWithAggregatesInput!]
  NOT: [LegalAgreementScalarWhereWithAggregatesInput!]
  OR: [LegalAgreementScalarWhereWithAggregatesInput!]
  aggreed: BoolWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  credentialsId: StringNullableWithAggregatesFilter
  documentId: IntWithAggregatesFilter
  id: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input LegalAgreementSumOrderByAggregateInput {
  documentId: SortOrder
}

input LegalAgreementUpdateInput {
  Credentials: CredentialsUpdateOneWithoutLegalAgreementNestedInput
  Document: DocumentUpdateOneRequiredWithoutLegalAgreementNestedInput
  aggreed: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LegalAgreementUpdateManyMutationInput {
  aggreed: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LegalAgreementUpdateManyWithWhereWithoutCredentialsInput {
  data: LegalAgreementUpdateManyMutationInput!
  where: LegalAgreementScalarWhereInput!
}

input LegalAgreementUpdateManyWithWhereWithoutDocumentInput {
  data: LegalAgreementUpdateManyMutationInput!
  where: LegalAgreementScalarWhereInput!
}

input LegalAgreementUpdateManyWithoutCredentialsNestedInput {
  connect: [LegalAgreementWhereUniqueInput!]
  connectOrCreate: [LegalAgreementCreateOrConnectWithoutCredentialsInput!]
  create: [LegalAgreementCreateWithoutCredentialsInput!]
  createMany: LegalAgreementCreateManyCredentialsInputEnvelope
  delete: [LegalAgreementWhereUniqueInput!]
  deleteMany: [LegalAgreementScalarWhereInput!]
  disconnect: [LegalAgreementWhereUniqueInput!]
  set: [LegalAgreementWhereUniqueInput!]
  update: [LegalAgreementUpdateWithWhereUniqueWithoutCredentialsInput!]
  updateMany: [LegalAgreementUpdateManyWithWhereWithoutCredentialsInput!]
  upsert: [LegalAgreementUpsertWithWhereUniqueWithoutCredentialsInput!]
}

input LegalAgreementUpdateManyWithoutDocumentNestedInput {
  connect: [LegalAgreementWhereUniqueInput!]
  connectOrCreate: [LegalAgreementCreateOrConnectWithoutDocumentInput!]
  create: [LegalAgreementCreateWithoutDocumentInput!]
  createMany: LegalAgreementCreateManyDocumentInputEnvelope
  delete: [LegalAgreementWhereUniqueInput!]
  deleteMany: [LegalAgreementScalarWhereInput!]
  disconnect: [LegalAgreementWhereUniqueInput!]
  set: [LegalAgreementWhereUniqueInput!]
  update: [LegalAgreementUpdateWithWhereUniqueWithoutDocumentInput!]
  updateMany: [LegalAgreementUpdateManyWithWhereWithoutDocumentInput!]
  upsert: [LegalAgreementUpsertWithWhereUniqueWithoutDocumentInput!]
}

input LegalAgreementUpdateWithWhereUniqueWithoutCredentialsInput {
  data: LegalAgreementUpdateWithoutCredentialsInput!
  where: LegalAgreementWhereUniqueInput!
}

input LegalAgreementUpdateWithWhereUniqueWithoutDocumentInput {
  data: LegalAgreementUpdateWithoutDocumentInput!
  where: LegalAgreementWhereUniqueInput!
}

input LegalAgreementUpdateWithoutCredentialsInput {
  Document: DocumentUpdateOneRequiredWithoutLegalAgreementNestedInput
  aggreed: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LegalAgreementUpdateWithoutDocumentInput {
  Credentials: CredentialsUpdateOneWithoutLegalAgreementNestedInput
  aggreed: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LegalAgreementUpsertWithWhereUniqueWithoutCredentialsInput {
  create: LegalAgreementCreateWithoutCredentialsInput!
  update: LegalAgreementUpdateWithoutCredentialsInput!
  where: LegalAgreementWhereUniqueInput!
}

input LegalAgreementUpsertWithWhereUniqueWithoutDocumentInput {
  create: LegalAgreementCreateWithoutDocumentInput!
  update: LegalAgreementUpdateWithoutDocumentInput!
  where: LegalAgreementWhereUniqueInput!
}

input LegalAgreementWhereInput {
  AND: [LegalAgreementWhereInput!]
  Credentials: CredentialsWhereInput
  Document: DocumentWhereInput
  NOT: [LegalAgreementWhereInput!]
  OR: [LegalAgreementWhereInput!]
  aggreed: BoolFilter
  createdAt: DateTimeFilter
  credentialsId: StringNullableFilter
  documentId: IntFilter
  id: StringFilter
  updatedAt: DateTimeFilter
}

input LegalAgreementWhereUniqueInput {
  AND: [LegalAgreementWhereInput!]
  Credentials: CredentialsWhereInput
  Document: DocumentWhereInput
  NOT: [LegalAgreementWhereInput!]
  OR: [LegalAgreementWhereInput!]
  aggreed: BoolFilter
  createdAt: DateTimeFilter
  credentialsId: StringNullableFilter
  documentId: IntFilter
  id: String
  updatedAt: DateTimeFilter
}

type LiveOutPersonal {
  Out(cursor: OutWhereUniqueInput, distinct: [OutScalarFieldEnum!], orderBy: [OutOrderByWithRelationInput!], skip: Int, take: Int, where: OutWhereInput): [Out!]!
  Personal: Personal!
  createdAt: DateTime!
  id: ID!
  personalId: String!
  updatedAt: DateTime!
}

input LiveOutPersonalCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  personalId: SortOrder
  updatedAt: SortOrder
}

input LiveOutPersonalCreateInput {
  Out: OutCreateNestedManyWithoutLiveOutPersonalInput
  Personal: PersonalCreateNestedOneWithoutLiveOutPersonalInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input LiveOutPersonalCreateManyInput {
  createdAt: DateTime
  id: String
  personalId: String!
  updatedAt: DateTime
}

input LiveOutPersonalCreateNestedOneWithoutOutInput {
  connect: LiveOutPersonalWhereUniqueInput
  connectOrCreate: LiveOutPersonalCreateOrConnectWithoutOutInput
  create: LiveOutPersonalCreateWithoutOutInput
}

input LiveOutPersonalCreateNestedOneWithoutPersonalInput {
  connect: LiveOutPersonalWhereUniqueInput
  connectOrCreate: LiveOutPersonalCreateOrConnectWithoutPersonalInput
  create: LiveOutPersonalCreateWithoutPersonalInput
}

input LiveOutPersonalCreateOrConnectWithoutOutInput {
  create: LiveOutPersonalCreateWithoutOutInput!
  where: LiveOutPersonalWhereUniqueInput!
}

input LiveOutPersonalCreateOrConnectWithoutPersonalInput {
  create: LiveOutPersonalCreateWithoutPersonalInput!
  where: LiveOutPersonalWhereUniqueInput!
}

input LiveOutPersonalCreateWithoutOutInput {
  Personal: PersonalCreateNestedOneWithoutLiveOutPersonalInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input LiveOutPersonalCreateWithoutPersonalInput {
  Out: OutCreateNestedManyWithoutLiveOutPersonalInput
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input LiveOutPersonalMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  personalId: SortOrder
  updatedAt: SortOrder
}

input LiveOutPersonalMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  personalId: SortOrder
  updatedAt: SortOrder
}

input LiveOutPersonalNullableRelationFilter {
  is: LiveOutPersonalWhereInput
  isNot: LiveOutPersonalWhereInput
}

input LiveOutPersonalOrderByWithAggregationInput {
  _count: LiveOutPersonalCountOrderByAggregateInput
  _max: LiveOutPersonalMaxOrderByAggregateInput
  _min: LiveOutPersonalMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  personalId: SortOrder
  updatedAt: SortOrder
}

input LiveOutPersonalOrderByWithRelationInput {
  Out: OutOrderByRelationAggregateInput
  Personal: PersonalOrderByWithRelationInput
  createdAt: SortOrder
  id: SortOrder
  personalId: SortOrder
  updatedAt: SortOrder
}

enum LiveOutPersonalScalarFieldEnum {
  createdAt
  id
  personalId
  updatedAt
}

input LiveOutPersonalScalarWhereWithAggregatesInput {
  AND: [LiveOutPersonalScalarWhereWithAggregatesInput!]
  NOT: [LiveOutPersonalScalarWhereWithAggregatesInput!]
  OR: [LiveOutPersonalScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  personalId: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input LiveOutPersonalUpdateInput {
  Out: OutUpdateManyWithoutLiveOutPersonalNestedInput
  Personal: PersonalUpdateOneRequiredWithoutLiveOutPersonalNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LiveOutPersonalUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LiveOutPersonalUpdateOneWithoutOutNestedInput {
  connect: LiveOutPersonalWhereUniqueInput
  connectOrCreate: LiveOutPersonalCreateOrConnectWithoutOutInput
  create: LiveOutPersonalCreateWithoutOutInput
  delete: LiveOutPersonalWhereInput
  disconnect: LiveOutPersonalWhereInput
  update: LiveOutPersonalUpdateToOneWithWhereWithoutOutInput
  upsert: LiveOutPersonalUpsertWithoutOutInput
}

input LiveOutPersonalUpdateOneWithoutPersonalNestedInput {
  connect: LiveOutPersonalWhereUniqueInput
  connectOrCreate: LiveOutPersonalCreateOrConnectWithoutPersonalInput
  create: LiveOutPersonalCreateWithoutPersonalInput
  delete: LiveOutPersonalWhereInput
  disconnect: LiveOutPersonalWhereInput
  update: LiveOutPersonalUpdateToOneWithWhereWithoutPersonalInput
  upsert: LiveOutPersonalUpsertWithoutPersonalInput
}

input LiveOutPersonalUpdateToOneWithWhereWithoutOutInput {
  data: LiveOutPersonalUpdateWithoutOutInput!
  where: LiveOutPersonalWhereInput
}

input LiveOutPersonalUpdateToOneWithWhereWithoutPersonalInput {
  data: LiveOutPersonalUpdateWithoutPersonalInput!
  where: LiveOutPersonalWhereInput
}

input LiveOutPersonalUpdateWithoutOutInput {
  Personal: PersonalUpdateOneRequiredWithoutLiveOutPersonalNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LiveOutPersonalUpdateWithoutPersonalInput {
  Out: OutUpdateManyWithoutLiveOutPersonalNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LiveOutPersonalUpsertWithoutOutInput {
  create: LiveOutPersonalCreateWithoutOutInput!
  update: LiveOutPersonalUpdateWithoutOutInput!
  where: LiveOutPersonalWhereInput
}

input LiveOutPersonalUpsertWithoutPersonalInput {
  create: LiveOutPersonalCreateWithoutPersonalInput!
  update: LiveOutPersonalUpdateWithoutPersonalInput!
  where: LiveOutPersonalWhereInput
}

input LiveOutPersonalWhereInput {
  AND: [LiveOutPersonalWhereInput!]
  NOT: [LiveOutPersonalWhereInput!]
  OR: [LiveOutPersonalWhereInput!]
  Out: OutListRelationFilter
  Personal: PersonalWhereInput
  createdAt: DateTimeFilter
  id: StringFilter
  personalId: StringFilter
  updatedAt: DateTimeFilter
}

input LiveOutPersonalWhereUniqueInput {
  AND: [LiveOutPersonalWhereInput!]
  NOT: [LiveOutPersonalWhereInput!]
  OR: [LiveOutPersonalWhereInput!]
  Out: OutListRelationFilter
  Personal: PersonalWhereInput
  createdAt: DateTimeFilter
  id: String
  personalId: String
  updatedAt: DateTimeFilter
}

type LiveOutVenue {
  Out(cursor: OutWhereUniqueInput, distinct: [OutScalarFieldEnum!], orderBy: [OutOrderByWithRelationInput!], skip: Int, take: Int, where: OutWhereInput): [Out!]!
  Venue: Venue!
  createdAt: DateTime!
  id: ID!
  joined: Int!
  total: Int!
  updatedAt: DateTime!
  venueId: String!
}

input LiveOutVenueAvgOrderByAggregateInput {
  joined: SortOrder
  total: SortOrder
}

input LiveOutVenueCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  joined: SortOrder
  total: SortOrder
  updatedAt: SortOrder
  venueId: SortOrder
}

input LiveOutVenueCreateInput {
  Out: OutCreateNestedManyWithoutLiveOutVenueInput
  Venue: VenueCreateNestedOneWithoutLiveOutVenueInput!
  createdAt: DateTime
  id: String
  joined: Int
  total: Int
  updatedAt: DateTime
}

input LiveOutVenueCreateManyInput {
  createdAt: DateTime
  id: String
  joined: Int
  total: Int
  updatedAt: DateTime
  venueId: String!
}

input LiveOutVenueCreateNestedOneWithoutOutInput {
  connect: LiveOutVenueWhereUniqueInput
  connectOrCreate: LiveOutVenueCreateOrConnectWithoutOutInput
  create: LiveOutVenueCreateWithoutOutInput
}

input LiveOutVenueCreateNestedOneWithoutVenueInput {
  connect: LiveOutVenueWhereUniqueInput
  connectOrCreate: LiveOutVenueCreateOrConnectWithoutVenueInput
  create: LiveOutVenueCreateWithoutVenueInput
}

input LiveOutVenueCreateOrConnectWithoutOutInput {
  create: LiveOutVenueCreateWithoutOutInput!
  where: LiveOutVenueWhereUniqueInput!
}

input LiveOutVenueCreateOrConnectWithoutVenueInput {
  create: LiveOutVenueCreateWithoutVenueInput!
  where: LiveOutVenueWhereUniqueInput!
}

input LiveOutVenueCreateWithoutOutInput {
  Venue: VenueCreateNestedOneWithoutLiveOutVenueInput!
  createdAt: DateTime
  id: String
  joined: Int
  total: Int
  updatedAt: DateTime
}

input LiveOutVenueCreateWithoutVenueInput {
  Out: OutCreateNestedManyWithoutLiveOutVenueInput
  createdAt: DateTime
  id: String
  joined: Int
  total: Int
  updatedAt: DateTime
}

input LiveOutVenueMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  joined: SortOrder
  total: SortOrder
  updatedAt: SortOrder
  venueId: SortOrder
}

input LiveOutVenueMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  joined: SortOrder
  total: SortOrder
  updatedAt: SortOrder
  venueId: SortOrder
}

input LiveOutVenueNullableRelationFilter {
  is: LiveOutVenueWhereInput
  isNot: LiveOutVenueWhereInput
}

input LiveOutVenueOrderByWithAggregationInput {
  _avg: LiveOutVenueAvgOrderByAggregateInput
  _count: LiveOutVenueCountOrderByAggregateInput
  _max: LiveOutVenueMaxOrderByAggregateInput
  _min: LiveOutVenueMinOrderByAggregateInput
  _sum: LiveOutVenueSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  joined: SortOrder
  total: SortOrder
  updatedAt: SortOrder
  venueId: SortOrder
}

input LiveOutVenueOrderByWithRelationInput {
  Out: OutOrderByRelationAggregateInput
  Venue: VenueOrderByWithRelationInput
  createdAt: SortOrder
  id: SortOrder
  joined: SortOrder
  total: SortOrder
  updatedAt: SortOrder
  venueId: SortOrder
}

enum LiveOutVenueScalarFieldEnum {
  createdAt
  id
  joined
  total
  updatedAt
  venueId
}

input LiveOutVenueScalarWhereWithAggregatesInput {
  AND: [LiveOutVenueScalarWhereWithAggregatesInput!]
  NOT: [LiveOutVenueScalarWhereWithAggregatesInput!]
  OR: [LiveOutVenueScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  joined: IntWithAggregatesFilter
  total: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  venueId: StringWithAggregatesFilter
}

input LiveOutVenueSumOrderByAggregateInput {
  joined: SortOrder
  total: SortOrder
}

input LiveOutVenueUpdateInput {
  Out: OutUpdateManyWithoutLiveOutVenueNestedInput
  Venue: VenueUpdateOneRequiredWithoutLiveOutVenueNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  joined: IntFieldUpdateOperationsInput
  total: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LiveOutVenueUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  joined: IntFieldUpdateOperationsInput
  total: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LiveOutVenueUpdateOneWithoutOutNestedInput {
  connect: LiveOutVenueWhereUniqueInput
  connectOrCreate: LiveOutVenueCreateOrConnectWithoutOutInput
  create: LiveOutVenueCreateWithoutOutInput
  delete: LiveOutVenueWhereInput
  disconnect: LiveOutVenueWhereInput
  update: LiveOutVenueUpdateToOneWithWhereWithoutOutInput
  upsert: LiveOutVenueUpsertWithoutOutInput
}

input LiveOutVenueUpdateOneWithoutVenueNestedInput {
  connect: LiveOutVenueWhereUniqueInput
  connectOrCreate: LiveOutVenueCreateOrConnectWithoutVenueInput
  create: LiveOutVenueCreateWithoutVenueInput
  delete: LiveOutVenueWhereInput
  disconnect: LiveOutVenueWhereInput
  update: LiveOutVenueUpdateToOneWithWhereWithoutVenueInput
  upsert: LiveOutVenueUpsertWithoutVenueInput
}

input LiveOutVenueUpdateToOneWithWhereWithoutOutInput {
  data: LiveOutVenueUpdateWithoutOutInput!
  where: LiveOutVenueWhereInput
}

input LiveOutVenueUpdateToOneWithWhereWithoutVenueInput {
  data: LiveOutVenueUpdateWithoutVenueInput!
  where: LiveOutVenueWhereInput
}

input LiveOutVenueUpdateWithoutOutInput {
  Venue: VenueUpdateOneRequiredWithoutLiveOutVenueNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  joined: IntFieldUpdateOperationsInput
  total: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LiveOutVenueUpdateWithoutVenueInput {
  Out: OutUpdateManyWithoutLiveOutVenueNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  joined: IntFieldUpdateOperationsInput
  total: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LiveOutVenueUpsertWithoutOutInput {
  create: LiveOutVenueCreateWithoutOutInput!
  update: LiveOutVenueUpdateWithoutOutInput!
  where: LiveOutVenueWhereInput
}

input LiveOutVenueUpsertWithoutVenueInput {
  create: LiveOutVenueCreateWithoutVenueInput!
  update: LiveOutVenueUpdateWithoutVenueInput!
  where: LiveOutVenueWhereInput
}

input LiveOutVenueWhereInput {
  AND: [LiveOutVenueWhereInput!]
  NOT: [LiveOutVenueWhereInput!]
  OR: [LiveOutVenueWhereInput!]
  Out: OutListRelationFilter
  Venue: VenueWhereInput
  createdAt: DateTimeFilter
  id: StringFilter
  joined: IntFilter
  total: IntFilter
  updatedAt: DateTimeFilter
  venueId: StringFilter
}

input LiveOutVenueWhereUniqueInput {
  AND: [LiveOutVenueWhereInput!]
  NOT: [LiveOutVenueWhereInput!]
  OR: [LiveOutVenueWhereInput!]
  Out: OutListRelationFilter
  Venue: VenueWhereInput
  createdAt: DateTimeFilter
  id: String
  joined: IntFilter
  total: IntFilter
  updatedAt: DateTimeFilter
  venueId: String
}

type LiveVenueTotals {
  joined: [Out!]
  totaled: [Out!]
}

type LiveVenueTotals2 {
  id: String
  joined: Int
  out: [Out!]
  totaled: Int
  updateOut: Out
}

type Location {
  Address: Address
  Area: Area
  Geometry: Geometry
  Venue: Venue
  addressId: String
  areaId: String
  createdAt: DateTime!
  geometryId: Int
  h3Index15: String!
  id: ID!
  plusCode: PluseCode
  pluseCodeId: String
  updatedAt: DateTime!
  venueId: String
}

input LocationAvgOrderByAggregateInput {
  geometryId: SortOrder
}

input LocationCountOrderByAggregateInput {
  addressId: SortOrder
  areaId: SortOrder
  createdAt: SortOrder
  geometryId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  pluseCodeId: SortOrder
  updatedAt: SortOrder
  venueId: SortOrder
}

input LocationCreateInput {
  Address: AddressCreateNestedOneWithoutLocationInput
  Area: AreaCreateNestedOneWithoutLocationInput
  Geometry: GeometryCreateNestedOneWithoutLocationInput
  Venue: VenueCreateNestedOneWithoutLocationInput
  createdAt: DateTime
  h3Index15: String!
  id: String
  plusCode: PluseCodeCreateNestedOneWithoutLocationInput
  updatedAt: DateTime
}

input LocationCreateManyAddressInput {
  areaId: String
  createdAt: DateTime
  geometryId: Int
  h3Index15: String!
  id: String
  pluseCodeId: String
  updatedAt: DateTime
  venueId: String
}

input LocationCreateManyAddressInputEnvelope {
  data: [LocationCreateManyAddressInput!]!
  skipDuplicates: Boolean
}

input LocationCreateManyInput {
  addressId: String
  areaId: String
  createdAt: DateTime
  geometryId: Int
  h3Index15: String!
  id: String
  pluseCodeId: String
  updatedAt: DateTime
  venueId: String
}

input LocationCreateNestedManyWithoutAddressInput {
  connect: [LocationWhereUniqueInput!]
  connectOrCreate: [LocationCreateOrConnectWithoutAddressInput!]
  create: [LocationCreateWithoutAddressInput!]
  createMany: LocationCreateManyAddressInputEnvelope
}

input LocationCreateNestedOneWithoutAreaInput {
  connect: LocationWhereUniqueInput
  connectOrCreate: LocationCreateOrConnectWithoutAreaInput
  create: LocationCreateWithoutAreaInput
}

input LocationCreateNestedOneWithoutGeometryInput {
  connect: LocationWhereUniqueInput
  connectOrCreate: LocationCreateOrConnectWithoutGeometryInput
  create: LocationCreateWithoutGeometryInput
}

input LocationCreateNestedOneWithoutPlusCodeInput {
  connect: LocationWhereUniqueInput
  connectOrCreate: LocationCreateOrConnectWithoutPlusCodeInput
  create: LocationCreateWithoutPlusCodeInput
}

input LocationCreateNestedOneWithoutVenueInput {
  connect: LocationWhereUniqueInput
  connectOrCreate: LocationCreateOrConnectWithoutVenueInput
  create: LocationCreateWithoutVenueInput
}

input LocationCreateOrConnectWithoutAddressInput {
  create: LocationCreateWithoutAddressInput!
  where: LocationWhereUniqueInput!
}

input LocationCreateOrConnectWithoutAreaInput {
  create: LocationCreateWithoutAreaInput!
  where: LocationWhereUniqueInput!
}

input LocationCreateOrConnectWithoutGeometryInput {
  create: LocationCreateWithoutGeometryInput!
  where: LocationWhereUniqueInput!
}

input LocationCreateOrConnectWithoutPlusCodeInput {
  create: LocationCreateWithoutPlusCodeInput!
  where: LocationWhereUniqueInput!
}

input LocationCreateOrConnectWithoutVenueInput {
  create: LocationCreateWithoutVenueInput!
  where: LocationWhereUniqueInput!
}

input LocationCreateWithoutAddressInput {
  Area: AreaCreateNestedOneWithoutLocationInput
  Geometry: GeometryCreateNestedOneWithoutLocationInput
  Venue: VenueCreateNestedOneWithoutLocationInput
  createdAt: DateTime
  h3Index15: String!
  id: String
  plusCode: PluseCodeCreateNestedOneWithoutLocationInput
  updatedAt: DateTime
}

input LocationCreateWithoutAreaInput {
  Address: AddressCreateNestedOneWithoutLocationInput
  Geometry: GeometryCreateNestedOneWithoutLocationInput
  Venue: VenueCreateNestedOneWithoutLocationInput
  createdAt: DateTime
  h3Index15: String!
  id: String
  plusCode: PluseCodeCreateNestedOneWithoutLocationInput
  updatedAt: DateTime
}

input LocationCreateWithoutGeometryInput {
  Address: AddressCreateNestedOneWithoutLocationInput
  Area: AreaCreateNestedOneWithoutLocationInput
  Venue: VenueCreateNestedOneWithoutLocationInput
  createdAt: DateTime
  h3Index15: String!
  id: String
  plusCode: PluseCodeCreateNestedOneWithoutLocationInput
  updatedAt: DateTime
}

input LocationCreateWithoutPlusCodeInput {
  Address: AddressCreateNestedOneWithoutLocationInput
  Area: AreaCreateNestedOneWithoutLocationInput
  Geometry: GeometryCreateNestedOneWithoutLocationInput
  Venue: VenueCreateNestedOneWithoutLocationInput
  createdAt: DateTime
  h3Index15: String!
  id: String
  updatedAt: DateTime
}

input LocationCreateWithoutVenueInput {
  Address: AddressCreateNestedOneWithoutLocationInput
  Area: AreaCreateNestedOneWithoutLocationInput
  Geometry: GeometryCreateNestedOneWithoutLocationInput
  createdAt: DateTime
  h3Index15: String!
  id: String
  plusCode: PluseCodeCreateNestedOneWithoutLocationInput
  updatedAt: DateTime
}

input LocationListRelationFilter {
  every: LocationWhereInput
  none: LocationWhereInput
  some: LocationWhereInput
}

input LocationMaxOrderByAggregateInput {
  addressId: SortOrder
  areaId: SortOrder
  createdAt: SortOrder
  geometryId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  pluseCodeId: SortOrder
  updatedAt: SortOrder
  venueId: SortOrder
}

input LocationMinOrderByAggregateInput {
  addressId: SortOrder
  areaId: SortOrder
  createdAt: SortOrder
  geometryId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  pluseCodeId: SortOrder
  updatedAt: SortOrder
  venueId: SortOrder
}

input LocationNullableRelationFilter {
  is: LocationWhereInput
  isNot: LocationWhereInput
}

input LocationOrderByRelationAggregateInput {
  _count: SortOrder
}

input LocationOrderByWithAggregationInput {
  _avg: LocationAvgOrderByAggregateInput
  _count: LocationCountOrderByAggregateInput
  _max: LocationMaxOrderByAggregateInput
  _min: LocationMinOrderByAggregateInput
  _sum: LocationSumOrderByAggregateInput
  addressId: SortOrder
  areaId: SortOrder
  createdAt: SortOrder
  geometryId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  pluseCodeId: SortOrder
  updatedAt: SortOrder
  venueId: SortOrder
}

input LocationOrderByWithRelationInput {
  Address: AddressOrderByWithRelationInput
  Area: AreaOrderByWithRelationInput
  Geometry: GeometryOrderByWithRelationInput
  Venue: VenueOrderByWithRelationInput
  addressId: SortOrder
  areaId: SortOrder
  createdAt: SortOrder
  geometryId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  plusCode: PluseCodeOrderByWithRelationInput
  pluseCodeId: SortOrder
  updatedAt: SortOrder
  venueId: SortOrder
}

enum LocationScalarFieldEnum {
  addressId
  areaId
  createdAt
  geometryId
  h3Index15
  id
  pluseCodeId
  updatedAt
  venueId
}

input LocationScalarWhereInput {
  AND: [LocationScalarWhereInput!]
  NOT: [LocationScalarWhereInput!]
  OR: [LocationScalarWhereInput!]
  addressId: StringNullableFilter
  areaId: StringNullableFilter
  createdAt: DateTimeFilter
  geometryId: IntNullableFilter
  h3Index15: StringFilter
  id: StringFilter
  pluseCodeId: StringNullableFilter
  updatedAt: DateTimeFilter
  venueId: StringNullableFilter
}

input LocationScalarWhereWithAggregatesInput {
  AND: [LocationScalarWhereWithAggregatesInput!]
  NOT: [LocationScalarWhereWithAggregatesInput!]
  OR: [LocationScalarWhereWithAggregatesInput!]
  addressId: StringNullableWithAggregatesFilter
  areaId: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  geometryId: IntNullableWithAggregatesFilter
  h3Index15: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  pluseCodeId: StringNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  venueId: StringNullableWithAggregatesFilter
}

input LocationSumOrderByAggregateInput {
  geometryId: SortOrder
}

input LocationUpdateInput {
  Address: AddressUpdateOneWithoutLocationNestedInput
  Area: AreaUpdateOneWithoutLocationNestedInput
  Geometry: GeometryUpdateOneWithoutLocationNestedInput
  Venue: VenueUpdateOneWithoutLocationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index15: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  plusCode: PluseCodeUpdateOneWithoutLocationNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LocationUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index15: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LocationUpdateManyWithWhereWithoutAddressInput {
  data: LocationUpdateManyMutationInput!
  where: LocationScalarWhereInput!
}

input LocationUpdateManyWithoutAddressNestedInput {
  connect: [LocationWhereUniqueInput!]
  connectOrCreate: [LocationCreateOrConnectWithoutAddressInput!]
  create: [LocationCreateWithoutAddressInput!]
  createMany: LocationCreateManyAddressInputEnvelope
  delete: [LocationWhereUniqueInput!]
  deleteMany: [LocationScalarWhereInput!]
  disconnect: [LocationWhereUniqueInput!]
  set: [LocationWhereUniqueInput!]
  update: [LocationUpdateWithWhereUniqueWithoutAddressInput!]
  updateMany: [LocationUpdateManyWithWhereWithoutAddressInput!]
  upsert: [LocationUpsertWithWhereUniqueWithoutAddressInput!]
}

input LocationUpdateOneWithoutAreaNestedInput {
  connect: LocationWhereUniqueInput
  connectOrCreate: LocationCreateOrConnectWithoutAreaInput
  create: LocationCreateWithoutAreaInput
  delete: LocationWhereInput
  disconnect: LocationWhereInput
  update: LocationUpdateToOneWithWhereWithoutAreaInput
  upsert: LocationUpsertWithoutAreaInput
}

input LocationUpdateOneWithoutGeometryNestedInput {
  connect: LocationWhereUniqueInput
  connectOrCreate: LocationCreateOrConnectWithoutGeometryInput
  create: LocationCreateWithoutGeometryInput
  delete: LocationWhereInput
  disconnect: LocationWhereInput
  update: LocationUpdateToOneWithWhereWithoutGeometryInput
  upsert: LocationUpsertWithoutGeometryInput
}

input LocationUpdateOneWithoutPlusCodeNestedInput {
  connect: LocationWhereUniqueInput
  connectOrCreate: LocationCreateOrConnectWithoutPlusCodeInput
  create: LocationCreateWithoutPlusCodeInput
  delete: LocationWhereInput
  disconnect: LocationWhereInput
  update: LocationUpdateToOneWithWhereWithoutPlusCodeInput
  upsert: LocationUpsertWithoutPlusCodeInput
}

input LocationUpdateOneWithoutVenueNestedInput {
  connect: LocationWhereUniqueInput
  connectOrCreate: LocationCreateOrConnectWithoutVenueInput
  create: LocationCreateWithoutVenueInput
  delete: LocationWhereInput
  disconnect: LocationWhereInput
  update: LocationUpdateToOneWithWhereWithoutVenueInput
  upsert: LocationUpsertWithoutVenueInput
}

input LocationUpdateToOneWithWhereWithoutAreaInput {
  data: LocationUpdateWithoutAreaInput!
  where: LocationWhereInput
}

input LocationUpdateToOneWithWhereWithoutGeometryInput {
  data: LocationUpdateWithoutGeometryInput!
  where: LocationWhereInput
}

input LocationUpdateToOneWithWhereWithoutPlusCodeInput {
  data: LocationUpdateWithoutPlusCodeInput!
  where: LocationWhereInput
}

input LocationUpdateToOneWithWhereWithoutVenueInput {
  data: LocationUpdateWithoutVenueInput!
  where: LocationWhereInput
}

input LocationUpdateWithWhereUniqueWithoutAddressInput {
  data: LocationUpdateWithoutAddressInput!
  where: LocationWhereUniqueInput!
}

input LocationUpdateWithoutAddressInput {
  Area: AreaUpdateOneWithoutLocationNestedInput
  Geometry: GeometryUpdateOneWithoutLocationNestedInput
  Venue: VenueUpdateOneWithoutLocationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index15: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  plusCode: PluseCodeUpdateOneWithoutLocationNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LocationUpdateWithoutAreaInput {
  Address: AddressUpdateOneWithoutLocationNestedInput
  Geometry: GeometryUpdateOneWithoutLocationNestedInput
  Venue: VenueUpdateOneWithoutLocationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index15: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  plusCode: PluseCodeUpdateOneWithoutLocationNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LocationUpdateWithoutGeometryInput {
  Address: AddressUpdateOneWithoutLocationNestedInput
  Area: AreaUpdateOneWithoutLocationNestedInput
  Venue: VenueUpdateOneWithoutLocationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index15: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  plusCode: PluseCodeUpdateOneWithoutLocationNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LocationUpdateWithoutPlusCodeInput {
  Address: AddressUpdateOneWithoutLocationNestedInput
  Area: AreaUpdateOneWithoutLocationNestedInput
  Geometry: GeometryUpdateOneWithoutLocationNestedInput
  Venue: VenueUpdateOneWithoutLocationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index15: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LocationUpdateWithoutVenueInput {
  Address: AddressUpdateOneWithoutLocationNestedInput
  Area: AreaUpdateOneWithoutLocationNestedInput
  Geometry: GeometryUpdateOneWithoutLocationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index15: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  plusCode: PluseCodeUpdateOneWithoutLocationNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LocationUpsertWithWhereUniqueWithoutAddressInput {
  create: LocationCreateWithoutAddressInput!
  update: LocationUpdateWithoutAddressInput!
  where: LocationWhereUniqueInput!
}

input LocationUpsertWithoutAreaInput {
  create: LocationCreateWithoutAreaInput!
  update: LocationUpdateWithoutAreaInput!
  where: LocationWhereInput
}

input LocationUpsertWithoutGeometryInput {
  create: LocationCreateWithoutGeometryInput!
  update: LocationUpdateWithoutGeometryInput!
  where: LocationWhereInput
}

input LocationUpsertWithoutPlusCodeInput {
  create: LocationCreateWithoutPlusCodeInput!
  update: LocationUpdateWithoutPlusCodeInput!
  where: LocationWhereInput
}

input LocationUpsertWithoutVenueInput {
  create: LocationCreateWithoutVenueInput!
  update: LocationUpdateWithoutVenueInput!
  where: LocationWhereInput
}

input LocationWhereInput {
  AND: [LocationWhereInput!]
  Address: AddressWhereInput
  Area: AreaWhereInput
  Geometry: GeometryWhereInput
  NOT: [LocationWhereInput!]
  OR: [LocationWhereInput!]
  Venue: VenueWhereInput
  addressId: StringNullableFilter
  areaId: StringNullableFilter
  createdAt: DateTimeFilter
  geometryId: IntNullableFilter
  h3Index15: StringFilter
  id: StringFilter
  plusCode: PluseCodeWhereInput
  pluseCodeId: StringNullableFilter
  updatedAt: DateTimeFilter
  venueId: StringNullableFilter
}

input LocationWhereUniqueInput {
  AND: [LocationWhereInput!]
  Address: AddressWhereInput
  Area: AreaWhereInput
  Geometry: GeometryWhereInput
  NOT: [LocationWhereInput!]
  OR: [LocationWhereInput!]
  Venue: VenueWhereInput
  addressId: StringNullableFilter
  areaId: String
  createdAt: DateTimeFilter
  geometryId: Int
  h3Index15: StringFilter
  id: String
  plusCode: PluseCodeWhereInput
  pluseCodeId: String
  updatedAt: DateTimeFilter
  venueId: String
}

type MemberConversationNotificationSetting {
  id: ID
}

input MemberConversationNotificationSettingCountOrderByAggregateInput {
  conversationId: SortOrder
  id: SortOrder
  memberProfileId: SortOrder
}

input MemberConversationNotificationSettingCreateInput {
  Conversation: ConversationCreateNestedOneWithoutMembersConversationNotificationSettingInput
  NotificationTypeSetting: NotificationTypeSettingCreateNestedManyWithoutMemberConversationNotificationSettingInput
  id: String
  memberProfileId: String!
}

input MemberConversationNotificationSettingCreateManyConversationInput {
  id: String
  memberProfileId: String!
}

input MemberConversationNotificationSettingCreateManyConversationInputEnvelope {
  data: [MemberConversationNotificationSettingCreateManyConversationInput!]!
  skipDuplicates: Boolean
}

input MemberConversationNotificationSettingCreateManyInput {
  conversationId: String
  id: String
  memberProfileId: String!
}

input MemberConversationNotificationSettingCreateNestedManyWithoutConversationInput {
  connect: [MemberConversationNotificationSettingWhereUniqueInput!]
  connectOrCreate: [MemberConversationNotificationSettingCreateOrConnectWithoutConversationInput!]
  create: [MemberConversationNotificationSettingCreateWithoutConversationInput!]
  createMany: MemberConversationNotificationSettingCreateManyConversationInputEnvelope
}

input MemberConversationNotificationSettingCreateNestedOneWithoutNotificationTypeSettingInput {
  connect: MemberConversationNotificationSettingWhereUniqueInput
  connectOrCreate: MemberConversationNotificationSettingCreateOrConnectWithoutNotificationTypeSettingInput
  create: MemberConversationNotificationSettingCreateWithoutNotificationTypeSettingInput
}

input MemberConversationNotificationSettingCreateOrConnectWithoutConversationInput {
  create: MemberConversationNotificationSettingCreateWithoutConversationInput!
  where: MemberConversationNotificationSettingWhereUniqueInput!
}

input MemberConversationNotificationSettingCreateOrConnectWithoutNotificationTypeSettingInput {
  create: MemberConversationNotificationSettingCreateWithoutNotificationTypeSettingInput!
  where: MemberConversationNotificationSettingWhereUniqueInput!
}

input MemberConversationNotificationSettingCreateWithoutConversationInput {
  NotificationTypeSetting: NotificationTypeSettingCreateNestedManyWithoutMemberConversationNotificationSettingInput
  id: String
  memberProfileId: String!
}

input MemberConversationNotificationSettingCreateWithoutNotificationTypeSettingInput {
  Conversation: ConversationCreateNestedOneWithoutMembersConversationNotificationSettingInput
  id: String
  memberProfileId: String!
}

input MemberConversationNotificationSettingListRelationFilter {
  every: MemberConversationNotificationSettingWhereInput
  none: MemberConversationNotificationSettingWhereInput
  some: MemberConversationNotificationSettingWhereInput
}

input MemberConversationNotificationSettingMaxOrderByAggregateInput {
  conversationId: SortOrder
  id: SortOrder
  memberProfileId: SortOrder
}

input MemberConversationNotificationSettingMinOrderByAggregateInput {
  conversationId: SortOrder
  id: SortOrder
  memberProfileId: SortOrder
}

input MemberConversationNotificationSettingNullableRelationFilter {
  is: MemberConversationNotificationSettingWhereInput
  isNot: MemberConversationNotificationSettingWhereInput
}

input MemberConversationNotificationSettingOrderByRelationAggregateInput {
  _count: SortOrder
}

input MemberConversationNotificationSettingOrderByWithAggregationInput {
  _count: MemberConversationNotificationSettingCountOrderByAggregateInput
  _max: MemberConversationNotificationSettingMaxOrderByAggregateInput
  _min: MemberConversationNotificationSettingMinOrderByAggregateInput
  conversationId: SortOrder
  id: SortOrder
  memberProfileId: SortOrder
}

input MemberConversationNotificationSettingOrderByWithRelationInput {
  Conversation: ConversationOrderByWithRelationInput
  NotificationTypeSetting: NotificationTypeSettingOrderByRelationAggregateInput
  conversationId: SortOrder
  id: SortOrder
  memberProfileId: SortOrder
}

enum MemberConversationNotificationSettingScalarFieldEnum {
  conversationId
  id
  memberProfileId
}

input MemberConversationNotificationSettingScalarWhereInput {
  AND: [MemberConversationNotificationSettingScalarWhereInput!]
  NOT: [MemberConversationNotificationSettingScalarWhereInput!]
  OR: [MemberConversationNotificationSettingScalarWhereInput!]
  conversationId: StringNullableFilter
  id: StringFilter
  memberProfileId: StringFilter
}

input MemberConversationNotificationSettingScalarWhereWithAggregatesInput {
  AND: [MemberConversationNotificationSettingScalarWhereWithAggregatesInput!]
  NOT: [MemberConversationNotificationSettingScalarWhereWithAggregatesInput!]
  OR: [MemberConversationNotificationSettingScalarWhereWithAggregatesInput!]
  conversationId: StringNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  memberProfileId: StringWithAggregatesFilter
}

input MemberConversationNotificationSettingUpdateInput {
  Conversation: ConversationUpdateOneWithoutMembersConversationNotificationSettingNestedInput
  NotificationTypeSetting: NotificationTypeSettingUpdateManyWithoutMemberConversationNotificationSettingNestedInput
  id: StringFieldUpdateOperationsInput
  memberProfileId: StringFieldUpdateOperationsInput
}

input MemberConversationNotificationSettingUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  memberProfileId: StringFieldUpdateOperationsInput
}

input MemberConversationNotificationSettingUpdateManyWithWhereWithoutConversationInput {
  data: MemberConversationNotificationSettingUpdateManyMutationInput!
  where: MemberConversationNotificationSettingScalarWhereInput!
}

input MemberConversationNotificationSettingUpdateManyWithoutConversationNestedInput {
  connect: [MemberConversationNotificationSettingWhereUniqueInput!]
  connectOrCreate: [MemberConversationNotificationSettingCreateOrConnectWithoutConversationInput!]
  create: [MemberConversationNotificationSettingCreateWithoutConversationInput!]
  createMany: MemberConversationNotificationSettingCreateManyConversationInputEnvelope
  delete: [MemberConversationNotificationSettingWhereUniqueInput!]
  deleteMany: [MemberConversationNotificationSettingScalarWhereInput!]
  disconnect: [MemberConversationNotificationSettingWhereUniqueInput!]
  set: [MemberConversationNotificationSettingWhereUniqueInput!]
  update: [MemberConversationNotificationSettingUpdateWithWhereUniqueWithoutConversationInput!]
  updateMany: [MemberConversationNotificationSettingUpdateManyWithWhereWithoutConversationInput!]
  upsert: [MemberConversationNotificationSettingUpsertWithWhereUniqueWithoutConversationInput!]
}

input MemberConversationNotificationSettingUpdateOneWithoutNotificationTypeSettingNestedInput {
  connect: MemberConversationNotificationSettingWhereUniqueInput
  connectOrCreate: MemberConversationNotificationSettingCreateOrConnectWithoutNotificationTypeSettingInput
  create: MemberConversationNotificationSettingCreateWithoutNotificationTypeSettingInput
  delete: MemberConversationNotificationSettingWhereInput
  disconnect: MemberConversationNotificationSettingWhereInput
  update: MemberConversationNotificationSettingUpdateToOneWithWhereWithoutNotificationTypeSettingInput
  upsert: MemberConversationNotificationSettingUpsertWithoutNotificationTypeSettingInput
}

input MemberConversationNotificationSettingUpdateToOneWithWhereWithoutNotificationTypeSettingInput {
  data: MemberConversationNotificationSettingUpdateWithoutNotificationTypeSettingInput!
  where: MemberConversationNotificationSettingWhereInput
}

input MemberConversationNotificationSettingUpdateWithWhereUniqueWithoutConversationInput {
  data: MemberConversationNotificationSettingUpdateWithoutConversationInput!
  where: MemberConversationNotificationSettingWhereUniqueInput!
}

input MemberConversationNotificationSettingUpdateWithoutConversationInput {
  NotificationTypeSetting: NotificationTypeSettingUpdateManyWithoutMemberConversationNotificationSettingNestedInput
  id: StringFieldUpdateOperationsInput
  memberProfileId: StringFieldUpdateOperationsInput
}

input MemberConversationNotificationSettingUpdateWithoutNotificationTypeSettingInput {
  Conversation: ConversationUpdateOneWithoutMembersConversationNotificationSettingNestedInput
  id: StringFieldUpdateOperationsInput
  memberProfileId: StringFieldUpdateOperationsInput
}

input MemberConversationNotificationSettingUpsertWithWhereUniqueWithoutConversationInput {
  create: MemberConversationNotificationSettingCreateWithoutConversationInput!
  update: MemberConversationNotificationSettingUpdateWithoutConversationInput!
  where: MemberConversationNotificationSettingWhereUniqueInput!
}

input MemberConversationNotificationSettingUpsertWithoutNotificationTypeSettingInput {
  create: MemberConversationNotificationSettingCreateWithoutNotificationTypeSettingInput!
  update: MemberConversationNotificationSettingUpdateWithoutNotificationTypeSettingInput!
  where: MemberConversationNotificationSettingWhereInput
}

input MemberConversationNotificationSettingWhereInput {
  AND: [MemberConversationNotificationSettingWhereInput!]
  Conversation: ConversationWhereInput
  NOT: [MemberConversationNotificationSettingWhereInput!]
  NotificationTypeSetting: NotificationTypeSettingListRelationFilter
  OR: [MemberConversationNotificationSettingWhereInput!]
  conversationId: StringNullableFilter
  id: StringFilter
  memberProfileId: StringFilter
}

input MemberConversationNotificationSettingWhereUniqueInput {
  AND: [MemberConversationNotificationSettingWhereInput!]
  Conversation: ConversationWhereInput
  NOT: [MemberConversationNotificationSettingWhereInput!]
  NotificationTypeSetting: NotificationTypeSettingListRelationFilter
  OR: [MemberConversationNotificationSettingWhereInput!]
  conversationId: StringNullableFilter
  id: String
  memberProfileId: StringFilter
}

type Message {
  Conversation: Conversation
  Replies(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum!], orderBy: [MessageOrderByWithRelationInput!], skip: Int, take: Int, where: MessageWhereInput): [Message!]!
  Reply: Message
  Request: Request
  content: Json!
  conversationId: String
  createAt: DateTime!
  id: ID!
  messageId: String
  updatedAt: DateTime!
}

input MessageCountOrderByAggregateInput {
  content: SortOrder
  conversationId: SortOrder
  createAt: SortOrder
  id: SortOrder
  messageId: SortOrder
  updatedAt: SortOrder
}

input MessageCreateInput {
  Conversation: ConversationCreateNestedOneWithoutMessagesInput
  Replies: MessageCreateNestedManyWithoutReplyInput
  Reply: MessageCreateNestedOneWithoutRepliesInput
  Request: RequestCreateNestedOneWithoutMessageInput
  content: Json!
  createAt: DateTime
  id: String
  updatedAt: DateTime
}

input MessageCreateManyConversationInput {
  content: Json!
  createAt: DateTime
  id: String
  messageId: String
  updatedAt: DateTime
}

input MessageCreateManyConversationInputEnvelope {
  data: [MessageCreateManyConversationInput!]!
  skipDuplicates: Boolean
}

input MessageCreateManyInput {
  content: Json!
  conversationId: String
  createAt: DateTime
  id: String
  messageId: String
  updatedAt: DateTime
}

input MessageCreateManyReplyInput {
  content: Json!
  conversationId: String
  createAt: DateTime
  id: String
  updatedAt: DateTime
}

input MessageCreateManyReplyInputEnvelope {
  data: [MessageCreateManyReplyInput!]!
  skipDuplicates: Boolean
}

input MessageCreateNestedManyWithoutConversationInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutConversationInput!]
  create: [MessageCreateWithoutConversationInput!]
  createMany: MessageCreateManyConversationInputEnvelope
}

input MessageCreateNestedManyWithoutReplyInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutReplyInput!]
  create: [MessageCreateWithoutReplyInput!]
  createMany: MessageCreateManyReplyInputEnvelope
}

input MessageCreateNestedOneWithoutRepliesInput {
  connect: MessageWhereUniqueInput
  connectOrCreate: MessageCreateOrConnectWithoutRepliesInput
  create: MessageCreateWithoutRepliesInput
}

input MessageCreateNestedOneWithoutRequestInput {
  connect: MessageWhereUniqueInput
  connectOrCreate: MessageCreateOrConnectWithoutRequestInput
  create: MessageCreateWithoutRequestInput
}

input MessageCreateOrConnectWithoutConversationInput {
  create: MessageCreateWithoutConversationInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateOrConnectWithoutRepliesInput {
  create: MessageCreateWithoutRepliesInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateOrConnectWithoutReplyInput {
  create: MessageCreateWithoutReplyInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateOrConnectWithoutRequestInput {
  create: MessageCreateWithoutRequestInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateWithoutConversationInput {
  Replies: MessageCreateNestedManyWithoutReplyInput
  Reply: MessageCreateNestedOneWithoutRepliesInput
  Request: RequestCreateNestedOneWithoutMessageInput
  content: Json!
  createAt: DateTime
  id: String
  updatedAt: DateTime
}

input MessageCreateWithoutRepliesInput {
  Conversation: ConversationCreateNestedOneWithoutMessagesInput
  Reply: MessageCreateNestedOneWithoutRepliesInput
  Request: RequestCreateNestedOneWithoutMessageInput
  content: Json!
  createAt: DateTime
  id: String
  updatedAt: DateTime
}

input MessageCreateWithoutReplyInput {
  Conversation: ConversationCreateNestedOneWithoutMessagesInput
  Replies: MessageCreateNestedManyWithoutReplyInput
  Request: RequestCreateNestedOneWithoutMessageInput
  content: Json!
  createAt: DateTime
  id: String
  updatedAt: DateTime
}

input MessageCreateWithoutRequestInput {
  Conversation: ConversationCreateNestedOneWithoutMessagesInput
  Replies: MessageCreateNestedManyWithoutReplyInput
  Reply: MessageCreateNestedOneWithoutRepliesInput
  content: Json!
  createAt: DateTime
  id: String
  updatedAt: DateTime
}

enum MessageEventType {
  NewMessage
}

input MessageListRelationFilter {
  every: MessageWhereInput
  none: MessageWhereInput
  some: MessageWhereInput
}

input MessageMaxOrderByAggregateInput {
  conversationId: SortOrder
  createAt: SortOrder
  id: SortOrder
  messageId: SortOrder
  updatedAt: SortOrder
}

input MessageMinOrderByAggregateInput {
  conversationId: SortOrder
  createAt: SortOrder
  id: SortOrder
  messageId: SortOrder
  updatedAt: SortOrder
}

input MessageNullableRelationFilter {
  is: MessageWhereInput
  isNot: MessageWhereInput
}

input MessageOrderByRelationAggregateInput {
  _count: SortOrder
}

input MessageOrderByWithAggregationInput {
  _count: MessageCountOrderByAggregateInput
  _max: MessageMaxOrderByAggregateInput
  _min: MessageMinOrderByAggregateInput
  content: SortOrder
  conversationId: SortOrder
  createAt: SortOrder
  id: SortOrder
  messageId: SortOrder
  updatedAt: SortOrder
}

input MessageOrderByWithRelationInput {
  Conversation: ConversationOrderByWithRelationInput
  Replies: MessageOrderByRelationAggregateInput
  Reply: MessageOrderByWithRelationInput
  Request: RequestOrderByWithRelationInput
  content: SortOrder
  conversationId: SortOrder
  createAt: SortOrder
  id: SortOrder
  messageId: SortOrder
  updatedAt: SortOrder
}

enum MessageScalarFieldEnum {
  content
  conversationId
  createAt
  id
  messageId
  updatedAt
}

input MessageScalarWhereInput {
  AND: [MessageScalarWhereInput!]
  NOT: [MessageScalarWhereInput!]
  OR: [MessageScalarWhereInput!]
  content: JsonFilter
  conversationId: StringNullableFilter
  createAt: DateTimeFilter
  id: StringFilter
  messageId: StringNullableFilter
  updatedAt: DateTimeFilter
}

input MessageScalarWhereWithAggregatesInput {
  AND: [MessageScalarWhereWithAggregatesInput!]
  NOT: [MessageScalarWhereWithAggregatesInput!]
  OR: [MessageScalarWhereWithAggregatesInput!]
  content: JsonWithAggregatesFilter
  conversationId: StringNullableWithAggregatesFilter
  createAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  messageId: StringNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input MessageUpdateInput {
  Conversation: ConversationUpdateOneWithoutMessagesNestedInput
  Replies: MessageUpdateManyWithoutReplyNestedInput
  Reply: MessageUpdateOneWithoutRepliesNestedInput
  Request: RequestUpdateOneWithoutMessageNestedInput
  content: Json
  createAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateManyMutationInput {
  content: Json
  createAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateManyWithWhereWithoutConversationInput {
  data: MessageUpdateManyMutationInput!
  where: MessageScalarWhereInput!
}

input MessageUpdateManyWithWhereWithoutReplyInput {
  data: MessageUpdateManyMutationInput!
  where: MessageScalarWhereInput!
}

input MessageUpdateManyWithoutConversationNestedInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutConversationInput!]
  create: [MessageCreateWithoutConversationInput!]
  createMany: MessageCreateManyConversationInputEnvelope
  delete: [MessageWhereUniqueInput!]
  deleteMany: [MessageScalarWhereInput!]
  disconnect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutConversationInput!]
  updateMany: [MessageUpdateManyWithWhereWithoutConversationInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutConversationInput!]
}

input MessageUpdateManyWithoutReplyNestedInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutReplyInput!]
  create: [MessageCreateWithoutReplyInput!]
  createMany: MessageCreateManyReplyInputEnvelope
  delete: [MessageWhereUniqueInput!]
  deleteMany: [MessageScalarWhereInput!]
  disconnect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutReplyInput!]
  updateMany: [MessageUpdateManyWithWhereWithoutReplyInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutReplyInput!]
}

input MessageUpdateOneWithoutRepliesNestedInput {
  connect: MessageWhereUniqueInput
  connectOrCreate: MessageCreateOrConnectWithoutRepliesInput
  create: MessageCreateWithoutRepliesInput
  delete: MessageWhereInput
  disconnect: MessageWhereInput
  update: MessageUpdateToOneWithWhereWithoutRepliesInput
  upsert: MessageUpsertWithoutRepliesInput
}

input MessageUpdateOneWithoutRequestNestedInput {
  connect: MessageWhereUniqueInput
  connectOrCreate: MessageCreateOrConnectWithoutRequestInput
  create: MessageCreateWithoutRequestInput
  delete: MessageWhereInput
  disconnect: MessageWhereInput
  update: MessageUpdateToOneWithWhereWithoutRequestInput
  upsert: MessageUpsertWithoutRequestInput
}

input MessageUpdateToOneWithWhereWithoutRepliesInput {
  data: MessageUpdateWithoutRepliesInput!
  where: MessageWhereInput
}

input MessageUpdateToOneWithWhereWithoutRequestInput {
  data: MessageUpdateWithoutRequestInput!
  where: MessageWhereInput
}

input MessageUpdateWithWhereUniqueWithoutConversationInput {
  data: MessageUpdateWithoutConversationInput!
  where: MessageWhereUniqueInput!
}

input MessageUpdateWithWhereUniqueWithoutReplyInput {
  data: MessageUpdateWithoutReplyInput!
  where: MessageWhereUniqueInput!
}

input MessageUpdateWithoutConversationInput {
  Replies: MessageUpdateManyWithoutReplyNestedInput
  Reply: MessageUpdateOneWithoutRepliesNestedInput
  Request: RequestUpdateOneWithoutMessageNestedInput
  content: Json
  createAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateWithoutRepliesInput {
  Conversation: ConversationUpdateOneWithoutMessagesNestedInput
  Reply: MessageUpdateOneWithoutRepliesNestedInput
  Request: RequestUpdateOneWithoutMessageNestedInput
  content: Json
  createAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateWithoutReplyInput {
  Conversation: ConversationUpdateOneWithoutMessagesNestedInput
  Replies: MessageUpdateManyWithoutReplyNestedInput
  Request: RequestUpdateOneWithoutMessageNestedInput
  content: Json
  createAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateWithoutRequestInput {
  Conversation: ConversationUpdateOneWithoutMessagesNestedInput
  Replies: MessageUpdateManyWithoutReplyNestedInput
  Reply: MessageUpdateOneWithoutRepliesNestedInput
  content: Json
  createAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MessageUpsertWithWhereUniqueWithoutConversationInput {
  create: MessageCreateWithoutConversationInput!
  update: MessageUpdateWithoutConversationInput!
  where: MessageWhereUniqueInput!
}

input MessageUpsertWithWhereUniqueWithoutReplyInput {
  create: MessageCreateWithoutReplyInput!
  update: MessageUpdateWithoutReplyInput!
  where: MessageWhereUniqueInput!
}

input MessageUpsertWithoutRepliesInput {
  create: MessageCreateWithoutRepliesInput!
  update: MessageUpdateWithoutRepliesInput!
  where: MessageWhereInput
}

input MessageUpsertWithoutRequestInput {
  create: MessageCreateWithoutRequestInput!
  update: MessageUpdateWithoutRequestInput!
  where: MessageWhereInput
}

input MessageWhereInput {
  AND: [MessageWhereInput!]
  Conversation: ConversationWhereInput
  NOT: [MessageWhereInput!]
  OR: [MessageWhereInput!]
  Replies: MessageListRelationFilter
  Reply: MessageWhereInput
  Request: RequestWhereInput
  content: JsonFilter
  conversationId: StringNullableFilter
  createAt: DateTimeFilter
  id: StringFilter
  messageId: StringNullableFilter
  updatedAt: DateTimeFilter
}

input MessageWhereUniqueInput {
  AND: [MessageWhereInput!]
  Conversation: ConversationWhereInput
  NOT: [MessageWhereInput!]
  OR: [MessageWhereInput!]
  Replies: MessageListRelationFilter
  Reply: MessageWhereInput
  Request: RequestWhereInput
  content: JsonFilter
  conversationId: StringNullableFilter
  createAt: DateTimeFilter
  id: String
  messageId: StringNullableFilter
  updatedAt: DateTimeFilter
}

type Mutation {
  acceptFriendRequest(friendRequestId: String!, notificationStatusId: String!, venueIdMetAt: String): Relationship
  addPersonalJoinsVenue2(profileIdVenue: String): VenueTotalsResponseUnion
  addPersonalTotalsVenue2(profileIdVenue: String): VenueTotalsResponseUnion
  addStoryPhotos(photos: PhotoCreateManyProfileInputEnvelope): Story
  createFriendRequest(receiversProfileId: [String!]!): Request
  createGuestProfile: AuthenticationResponseUnion
  createMessage(
    content: Json!
    conversationId: String

    """This is a list of ProfileIds."""
    members: [String!]
  ): Message
  createPersonalProfile(data: CreatePersonalDataInput): AuthenticationResponseUnion
  createVenueProfile(data: CreateVenueDataInput): ProfileResponseUnion
  declineFriendRequest(friendRequestId: String!, notificationStatusId: String!): Boolean
  deleteFriendRequest(friendRequestId: String!): Boolean
  qrAddFriend(dataHash: String!, qrCodeProfileId: String!): Relationship
  removeAllFromVenueDeveloper(profileIdVenue: String): Boolean
  removeAllJoinedTotalFromVenue(profileIdVenue: String): VenueTotalsResponseUnion
  removeDeviceProfileFromDeviceManager(profileId: String!): Boolean
  removeFriend(relationshipId: String!): Boolean
  removePersonalJoinsVenue2(profileIdVenue: String): VenueTotalsResponseUnion
  removePersonalTotalsVenue2(profileIdVenue: String): VenueTotalsResponseUnion
  removeStoryPhotos(photoId: String!): Story
  sendAuthenticatorDeviceOwnerCode(data: CodeDataInput, where: CustomCodeWhereInput): CodeResponse
  sendAuthenticatorForgotPasswordCode(data: CodeDataInput, where: CustomCodeWhereInput): CodeResponse
  switchDeviceProfile(profileId: String!): AuthenticationResponseUnion
  testNotification: Boolean
  updateCityRequested(cityName: String!): Boolean

  """Update H6 coming area to be notified"""
  updateH6ComingAreaToBeNotified(comingAreaId: String!): ComingArea

  """Update H6 coming area vote"""
  updateH6ComingAreaVote(comingAreaId: String!): ComingArea

  """
  This function updates the upvote for a venue recommendation for a H3Index6. If the user has already upvoted, it will be set to false. If the user has not upvoted, it will be set to true.
  """
  updateH6VenueRemmendation(venueRecommendationId: String!): H3Index6VenueRecommendation
  updateManyMessageNotifications(conversationId: String): Boolean
  updateOneProfile(data: ProfileUpdateInput!, where: ProfileWhereUniqueInput!): Profile
  updatePassword(newpassword: String!, oldpassword: String!): Boolean
  updateProfileIdentifiableInformation(data: IdentifiableInformationUpdateInput!): ProfileResponseUnion
  updateProfilePrivacyTermsDocumentUpdate: Boolean
  updateStoryEmojimood(emojimoodId: Int, storyId: String): Story
  updateThemeManagerSwitchTheme(id: String!, themeId: String!): ProfileTheme
  uploadProfilePhoto(photos: PhotoCreateManyProfileInputEnvelope): Photo
  upsertDevicePushToken(expoToken: String, token: String, type: TokenType): Boolean
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedBoolNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedBoolNullableFilter
  _min: NestedBoolNullableFilter
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedEnumAppTypeFilter {
  equals: AppType
  in: [AppType!]
  not: AppType
  notIn: [AppType!]
}

input NestedEnumAppTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumAppTypeFilter
  _min: NestedEnumAppTypeFilter
  equals: AppType
  in: [AppType!]
  not: AppType
  notIn: [AppType!]
}

input NestedEnumNotificationTypeFilter {
  equals: NotificationType
  in: [NotificationType!]
  not: NotificationType
  notIn: [NotificationType!]
}

input NestedEnumNotificationTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumNotificationTypeFilter
  _min: NestedEnumNotificationTypeFilter
  equals: NotificationType
  in: [NotificationType!]
  not: NotificationType
  notIn: [NotificationType!]
}

input NestedEnumOutTypeFilter {
  equals: OutType
  in: [OutType!]
  not: OutType
  notIn: [OutType!]
}

input NestedEnumOutTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumOutTypeFilter
  _min: NestedEnumOutTypeFilter
  equals: OutType
  in: [OutType!]
  not: OutType
  notIn: [OutType!]
}

input NestedEnumPhotoTypeNullableFilter {
  equals: PhotoType
  in: [PhotoType!]
  not: PhotoType
  notIn: [PhotoType!]
}

input NestedEnumPhotoTypeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedEnumPhotoTypeNullableFilter
  _min: NestedEnumPhotoTypeNullableFilter
  equals: PhotoType
  in: [PhotoType!]
  not: PhotoType
  notIn: [PhotoType!]
}

input NestedEnumProfileTypeFilter {
  equals: ProfileType
  in: [ProfileType!]
  not: ProfileType
  notIn: [ProfileType!]
}

input NestedEnumProfileTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumProfileTypeFilter
  _min: NestedEnumProfileTypeFilter
  equals: ProfileType
  in: [ProfileType!]
  not: ProfileType
  notIn: [ProfileType!]
}

input NestedEnumSecureDataTypeFilter {
  equals: SecureDataType
  in: [SecureDataType!]
  not: SecureDataType
  notIn: [SecureDataType!]
}

input NestedEnumSecureDataTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumSecureDataTypeFilter
  _min: NestedEnumSecureDataTypeFilter
  equals: SecureDataType
  in: [SecureDataType!]
  not: SecureDataType
  notIn: [SecureDataType!]
}

input NestedEnumTokenTypeNullableFilter {
  equals: TokenType
  in: [TokenType!]
  not: TokenType
  notIn: [TokenType!]
}

input NestedEnumTokenTypeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedEnumTokenTypeNullableFilter
  _min: NestedEnumTokenTypeNullableFilter
  equals: TokenType
  in: [TokenType!]
  not: TokenType
  notIn: [TokenType!]
}

input NestedEnumTypeOfDocumentFilter {
  equals: TypeOfDocument
  in: [TypeOfDocument!]
  not: TypeOfDocument
  notIn: [TypeOfDocument!]
}

input NestedEnumTypeOfDocumentWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumTypeOfDocumentFilter
  _min: NestedEnumTypeOfDocumentFilter
  equals: TypeOfDocument
  in: [TypeOfDocument!]
  not: TypeOfDocument
  notIn: [TypeOfDocument!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input NestedFloatWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedFloatFilter
  _min: NestedFloatFilter
  _sum: NestedFloatFilter
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatWithAggregatesFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

input NestedJsonFilter {
  array_contains: Json
  array_ends_with: Json
  array_starts_with: Json
  equals: Json
  gt: Json
  gte: Json
  lt: Json
  lte: Json
  not: Json
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

"""When a new post is created"""
type NewMessageEvent implements IBaseMessageEvent {
  content: Json

  """Event type"""
  eventType: MessageEventType

  """Post id"""
  id: ID
}

"""When a new post is created"""
type NewPostEvent implements IBasePostEvent {
  """Event type"""
  eventType: PostEventType

  """Post id"""
  id: ID

  """Post title"""
  title: String
}

union NotificationFriendRequestStatusResponse = Error | Relationship | Request

type NotificationResponse {
  friendRequestNotifications: [Request!]
}

type NotificationStatus {
  RequestReceiver: RequestReceiver
  createdAt: DateTime!
  id: ID!
  isAccepted: Boolean!
  isAnswered: Boolean!
  isCanceled: Boolean!
  isChecked: Boolean!
  updatedAt: DateTime!
}

input NotificationStatusCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  isAccepted: SortOrder
  isAnswered: SortOrder
  isCanceled: SortOrder
  isChecked: SortOrder
  updatedAt: SortOrder
}

input NotificationStatusCreateInput {
  RequestReceiver: RequestReceiverCreateNestedOneWithoutNotificationStatusInput
  createdAt: DateTime
  id: String
  isAccepted: Boolean
  isAnswered: Boolean
  isCanceled: Boolean
  isChecked: Boolean
  updatedAt: DateTime
}

input NotificationStatusCreateManyInput {
  createdAt: DateTime
  id: String
  isAccepted: Boolean
  isAnswered: Boolean
  isCanceled: Boolean
  isChecked: Boolean
  updatedAt: DateTime
}

input NotificationStatusCreateNestedOneWithoutRequestReceiverInput {
  connect: NotificationStatusWhereUniqueInput
  connectOrCreate: NotificationStatusCreateOrConnectWithoutRequestReceiverInput
  create: NotificationStatusCreateWithoutRequestReceiverInput
}

input NotificationStatusCreateOrConnectWithoutRequestReceiverInput {
  create: NotificationStatusCreateWithoutRequestReceiverInput!
  where: NotificationStatusWhereUniqueInput!
}

input NotificationStatusCreateWithoutRequestReceiverInput {
  createdAt: DateTime
  id: String
  isAccepted: Boolean
  isAnswered: Boolean
  isCanceled: Boolean
  isChecked: Boolean
  updatedAt: DateTime
}

input NotificationStatusMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  isAccepted: SortOrder
  isAnswered: SortOrder
  isCanceled: SortOrder
  isChecked: SortOrder
  updatedAt: SortOrder
}

input NotificationStatusMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  isAccepted: SortOrder
  isAnswered: SortOrder
  isCanceled: SortOrder
  isChecked: SortOrder
  updatedAt: SortOrder
}

input NotificationStatusOrderByWithAggregationInput {
  _count: NotificationStatusCountOrderByAggregateInput
  _max: NotificationStatusMaxOrderByAggregateInput
  _min: NotificationStatusMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  isAccepted: SortOrder
  isAnswered: SortOrder
  isCanceled: SortOrder
  isChecked: SortOrder
  updatedAt: SortOrder
}

input NotificationStatusOrderByWithRelationInput {
  RequestReceiver: RequestReceiverOrderByWithRelationInput
  createdAt: SortOrder
  id: SortOrder
  isAccepted: SortOrder
  isAnswered: SortOrder
  isCanceled: SortOrder
  isChecked: SortOrder
  updatedAt: SortOrder
}

input NotificationStatusRelationFilter {
  is: NotificationStatusWhereInput
  isNot: NotificationStatusWhereInput
}

enum NotificationStatusScalarFieldEnum {
  createdAt
  id
  isAccepted
  isAnswered
  isCanceled
  isChecked
  updatedAt
}

input NotificationStatusScalarWhereWithAggregatesInput {
  AND: [NotificationStatusScalarWhereWithAggregatesInput!]
  NOT: [NotificationStatusScalarWhereWithAggregatesInput!]
  OR: [NotificationStatusScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  isAccepted: BoolWithAggregatesFilter
  isAnswered: BoolWithAggregatesFilter
  isCanceled: BoolWithAggregatesFilter
  isChecked: BoolWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input NotificationStatusUpdateInput {
  RequestReceiver: RequestReceiverUpdateOneWithoutNotificationStatusNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAccepted: BoolFieldUpdateOperationsInput
  isAnswered: BoolFieldUpdateOperationsInput
  isCanceled: BoolFieldUpdateOperationsInput
  isChecked: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input NotificationStatusUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAccepted: BoolFieldUpdateOperationsInput
  isAnswered: BoolFieldUpdateOperationsInput
  isCanceled: BoolFieldUpdateOperationsInput
  isChecked: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input NotificationStatusUpdateOneRequiredWithoutRequestReceiverNestedInput {
  connect: NotificationStatusWhereUniqueInput
  connectOrCreate: NotificationStatusCreateOrConnectWithoutRequestReceiverInput
  create: NotificationStatusCreateWithoutRequestReceiverInput
  update: NotificationStatusUpdateToOneWithWhereWithoutRequestReceiverInput
  upsert: NotificationStatusUpsertWithoutRequestReceiverInput
}

input NotificationStatusUpdateToOneWithWhereWithoutRequestReceiverInput {
  data: NotificationStatusUpdateWithoutRequestReceiverInput!
  where: NotificationStatusWhereInput
}

input NotificationStatusUpdateWithoutRequestReceiverInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAccepted: BoolFieldUpdateOperationsInput
  isAnswered: BoolFieldUpdateOperationsInput
  isCanceled: BoolFieldUpdateOperationsInput
  isChecked: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input NotificationStatusUpsertWithoutRequestReceiverInput {
  create: NotificationStatusCreateWithoutRequestReceiverInput!
  update: NotificationStatusUpdateWithoutRequestReceiverInput!
  where: NotificationStatusWhereInput
}

input NotificationStatusWhereInput {
  AND: [NotificationStatusWhereInput!]
  NOT: [NotificationStatusWhereInput!]
  OR: [NotificationStatusWhereInput!]
  RequestReceiver: RequestReceiverWhereInput
  createdAt: DateTimeFilter
  id: StringFilter
  isAccepted: BoolFilter
  isAnswered: BoolFilter
  isCanceled: BoolFilter
  isChecked: BoolFilter
  updatedAt: DateTimeFilter
}

input NotificationStatusWhereUniqueInput {
  AND: [NotificationStatusWhereInput!]
  NOT: [NotificationStatusWhereInput!]
  OR: [NotificationStatusWhereInput!]
  RequestReceiver: RequestReceiverWhereInput
  createdAt: DateTimeFilter
  id: String
  isAccepted: BoolFilter
  isAnswered: BoolFilter
  isCanceled: BoolFilter
  isChecked: BoolFilter
  updatedAt: DateTimeFilter
}

enum NotificationType {
  DANCE
  DRINK
  EVENT
  FRIEND_REQUEST
  INVITE
  MESSAGE
  PROMOTION
}

input NotificationTypeSettingCountOrderByAggregateInput {
  NotificationType: SortOrder
  allowed: SortOrder
  id: SortOrder
  memberConversationNotificationSettingId: SortOrder
}

input NotificationTypeSettingCreateInput {
  MemberConversationNotificationSetting: MemberConversationNotificationSettingCreateNestedOneWithoutNotificationTypeSettingInput
  NotificationType: NotificationType!
  allowed: Boolean
  id: String
}

input NotificationTypeSettingCreateManyInput {
  NotificationType: NotificationType!
  allowed: Boolean
  id: String
  memberConversationNotificationSettingId: String
}

input NotificationTypeSettingCreateManyMemberConversationNotificationSettingInput {
  NotificationType: NotificationType!
  allowed: Boolean
  id: String
}

input NotificationTypeSettingCreateManyMemberConversationNotificationSettingInputEnvelope {
  data: [NotificationTypeSettingCreateManyMemberConversationNotificationSettingInput!]!
  skipDuplicates: Boolean
}

input NotificationTypeSettingCreateNestedManyWithoutMemberConversationNotificationSettingInput {
  connect: [NotificationTypeSettingWhereUniqueInput!]
  connectOrCreate: [NotificationTypeSettingCreateOrConnectWithoutMemberConversationNotificationSettingInput!]
  create: [NotificationTypeSettingCreateWithoutMemberConversationNotificationSettingInput!]
  createMany: NotificationTypeSettingCreateManyMemberConversationNotificationSettingInputEnvelope
}

input NotificationTypeSettingCreateOrConnectWithoutMemberConversationNotificationSettingInput {
  create: NotificationTypeSettingCreateWithoutMemberConversationNotificationSettingInput!
  where: NotificationTypeSettingWhereUniqueInput!
}

input NotificationTypeSettingCreateWithoutMemberConversationNotificationSettingInput {
  NotificationType: NotificationType!
  allowed: Boolean
  id: String
}

input NotificationTypeSettingListRelationFilter {
  every: NotificationTypeSettingWhereInput
  none: NotificationTypeSettingWhereInput
  some: NotificationTypeSettingWhereInput
}

input NotificationTypeSettingMaxOrderByAggregateInput {
  NotificationType: SortOrder
  allowed: SortOrder
  id: SortOrder
  memberConversationNotificationSettingId: SortOrder
}

input NotificationTypeSettingMinOrderByAggregateInput {
  NotificationType: SortOrder
  allowed: SortOrder
  id: SortOrder
  memberConversationNotificationSettingId: SortOrder
}

input NotificationTypeSettingOrderByRelationAggregateInput {
  _count: SortOrder
}

input NotificationTypeSettingOrderByWithAggregationInput {
  NotificationType: SortOrder
  _count: NotificationTypeSettingCountOrderByAggregateInput
  _max: NotificationTypeSettingMaxOrderByAggregateInput
  _min: NotificationTypeSettingMinOrderByAggregateInput
  allowed: SortOrder
  id: SortOrder
  memberConversationNotificationSettingId: SortOrder
}

input NotificationTypeSettingOrderByWithRelationInput {
  MemberConversationNotificationSetting: MemberConversationNotificationSettingOrderByWithRelationInput
  NotificationType: SortOrder
  allowed: SortOrder
  id: SortOrder
  memberConversationNotificationSettingId: SortOrder
}

enum NotificationTypeSettingScalarFieldEnum {
  NotificationType
  allowed
  id
  memberConversationNotificationSettingId
}

input NotificationTypeSettingScalarWhereInput {
  AND: [NotificationTypeSettingScalarWhereInput!]
  NOT: [NotificationTypeSettingScalarWhereInput!]
  NotificationType: EnumNotificationTypeFilter
  OR: [NotificationTypeSettingScalarWhereInput!]
  allowed: BoolFilter
  id: StringFilter
  memberConversationNotificationSettingId: StringNullableFilter
}

input NotificationTypeSettingScalarWhereWithAggregatesInput {
  AND: [NotificationTypeSettingScalarWhereWithAggregatesInput!]
  NOT: [NotificationTypeSettingScalarWhereWithAggregatesInput!]
  NotificationType: EnumNotificationTypeWithAggregatesFilter
  OR: [NotificationTypeSettingScalarWhereWithAggregatesInput!]
  allowed: BoolWithAggregatesFilter
  id: StringWithAggregatesFilter
  memberConversationNotificationSettingId: StringNullableWithAggregatesFilter
}

input NotificationTypeSettingUpdateInput {
  MemberConversationNotificationSetting: MemberConversationNotificationSettingUpdateOneWithoutNotificationTypeSettingNestedInput
  NotificationType: EnumNotificationTypeFieldUpdateOperationsInput
  allowed: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input NotificationTypeSettingUpdateManyMutationInput {
  NotificationType: EnumNotificationTypeFieldUpdateOperationsInput
  allowed: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input NotificationTypeSettingUpdateManyWithWhereWithoutMemberConversationNotificationSettingInput {
  data: NotificationTypeSettingUpdateManyMutationInput!
  where: NotificationTypeSettingScalarWhereInput!
}

input NotificationTypeSettingUpdateManyWithoutMemberConversationNotificationSettingNestedInput {
  connect: [NotificationTypeSettingWhereUniqueInput!]
  connectOrCreate: [NotificationTypeSettingCreateOrConnectWithoutMemberConversationNotificationSettingInput!]
  create: [NotificationTypeSettingCreateWithoutMemberConversationNotificationSettingInput!]
  createMany: NotificationTypeSettingCreateManyMemberConversationNotificationSettingInputEnvelope
  delete: [NotificationTypeSettingWhereUniqueInput!]
  deleteMany: [NotificationTypeSettingScalarWhereInput!]
  disconnect: [NotificationTypeSettingWhereUniqueInput!]
  set: [NotificationTypeSettingWhereUniqueInput!]
  update: [NotificationTypeSettingUpdateWithWhereUniqueWithoutMemberConversationNotificationSettingInput!]
  updateMany: [NotificationTypeSettingUpdateManyWithWhereWithoutMemberConversationNotificationSettingInput!]
  upsert: [NotificationTypeSettingUpsertWithWhereUniqueWithoutMemberConversationNotificationSettingInput!]
}

input NotificationTypeSettingUpdateWithWhereUniqueWithoutMemberConversationNotificationSettingInput {
  data: NotificationTypeSettingUpdateWithoutMemberConversationNotificationSettingInput!
  where: NotificationTypeSettingWhereUniqueInput!
}

input NotificationTypeSettingUpdateWithoutMemberConversationNotificationSettingInput {
  NotificationType: EnumNotificationTypeFieldUpdateOperationsInput
  allowed: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input NotificationTypeSettingUpsertWithWhereUniqueWithoutMemberConversationNotificationSettingInput {
  create: NotificationTypeSettingCreateWithoutMemberConversationNotificationSettingInput!
  update: NotificationTypeSettingUpdateWithoutMemberConversationNotificationSettingInput!
  where: NotificationTypeSettingWhereUniqueInput!
}

input NotificationTypeSettingWhereInput {
  AND: [NotificationTypeSettingWhereInput!]
  MemberConversationNotificationSetting: MemberConversationNotificationSettingWhereInput
  NOT: [NotificationTypeSettingWhereInput!]
  NotificationType: EnumNotificationTypeFilter
  OR: [NotificationTypeSettingWhereInput!]
  allowed: BoolFilter
  id: StringFilter
  memberConversationNotificationSettingId: StringNullableFilter
}

input NotificationTypeSettingWhereUniqueInput {
  AND: [NotificationTypeSettingWhereInput!]
  MemberConversationNotificationSetting: MemberConversationNotificationSettingWhereInput
  NOT: [NotificationTypeSettingWhereInput!]
  NotificationType: EnumNotificationTypeFilter
  OR: [NotificationTypeSettingWhereInput!]
  allowed: BoolFilter
  id: String
  memberConversationNotificationSettingId: StringNullableFilter
}

type Notifications {
  FriendRequests(cursor: RequestWhereUniqueInput, distinct: [RequestScalarFieldEnum!], orderBy: [RequestOrderByWithRelationInput!], skip: Int, take: Int, where: RequestWhereInput): [Request!]!
  MessageRequests(cursor: RequestWhereUniqueInput, distinct: [RequestScalarFieldEnum!], orderBy: [RequestOrderByWithRelationInput!], skip: Int, take: Int, where: RequestWhereInput): [Request!]!
  Profile: Profile!
  id: ID!
  profileId: String!
}

input NotificationsCountOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
}

input NotificationsCreateInput {
  FriendRequests: RequestCreateNestedManyWithoutNotificationFriendRequestInput
  MessageRequests: RequestCreateNestedManyWithoutNotificationMessageInput
  Profile: ProfileCreateNestedOneWithoutNotificationsInput!
  id: String
}

input NotificationsCreateManyInput {
  id: String
  profileId: String!
}

input NotificationsCreateNestedManyWithoutFriendRequestsInput {
  connect: [NotificationsWhereUniqueInput!]
  connectOrCreate: [NotificationsCreateOrConnectWithoutFriendRequestsInput!]
  create: [NotificationsCreateWithoutFriendRequestsInput!]
}

input NotificationsCreateNestedManyWithoutMessageRequestsInput {
  connect: [NotificationsWhereUniqueInput!]
  connectOrCreate: [NotificationsCreateOrConnectWithoutMessageRequestsInput!]
  create: [NotificationsCreateWithoutMessageRequestsInput!]
}

input NotificationsCreateNestedOneWithoutProfileInput {
  connect: NotificationsWhereUniqueInput
  connectOrCreate: NotificationsCreateOrConnectWithoutProfileInput
  create: NotificationsCreateWithoutProfileInput
}

input NotificationsCreateOrConnectWithoutFriendRequestsInput {
  create: NotificationsCreateWithoutFriendRequestsInput!
  where: NotificationsWhereUniqueInput!
}

input NotificationsCreateOrConnectWithoutMessageRequestsInput {
  create: NotificationsCreateWithoutMessageRequestsInput!
  where: NotificationsWhereUniqueInput!
}

input NotificationsCreateOrConnectWithoutProfileInput {
  create: NotificationsCreateWithoutProfileInput!
  where: NotificationsWhereUniqueInput!
}

input NotificationsCreateWithoutFriendRequestsInput {
  MessageRequests: RequestCreateNestedManyWithoutNotificationMessageInput
  Profile: ProfileCreateNestedOneWithoutNotificationsInput!
  id: String
}

input NotificationsCreateWithoutMessageRequestsInput {
  FriendRequests: RequestCreateNestedManyWithoutNotificationFriendRequestInput
  Profile: ProfileCreateNestedOneWithoutNotificationsInput!
  id: String
}

input NotificationsCreateWithoutProfileInput {
  FriendRequests: RequestCreateNestedManyWithoutNotificationFriendRequestInput
  MessageRequests: RequestCreateNestedManyWithoutNotificationMessageInput
  id: String
}

input NotificationsListRelationFilter {
  every: NotificationsWhereInput
  none: NotificationsWhereInput
  some: NotificationsWhereInput
}

input NotificationsMaxOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
}

input NotificationsMinOrderByAggregateInput {
  id: SortOrder
  profileId: SortOrder
}

input NotificationsNullableRelationFilter {
  is: NotificationsWhereInput
  isNot: NotificationsWhereInput
}

input NotificationsOrderByRelationAggregateInput {
  _count: SortOrder
}

input NotificationsOrderByWithAggregationInput {
  _count: NotificationsCountOrderByAggregateInput
  _max: NotificationsMaxOrderByAggregateInput
  _min: NotificationsMinOrderByAggregateInput
  id: SortOrder
  profileId: SortOrder
}

input NotificationsOrderByWithRelationInput {
  FriendRequests: RequestOrderByRelationAggregateInput
  MessageRequests: RequestOrderByRelationAggregateInput
  Profile: ProfileOrderByWithRelationInput
  id: SortOrder
  profileId: SortOrder
}

enum NotificationsScalarFieldEnum {
  id
  profileId
}

input NotificationsScalarWhereInput {
  AND: [NotificationsScalarWhereInput!]
  NOT: [NotificationsScalarWhereInput!]
  OR: [NotificationsScalarWhereInput!]
  id: StringFilter
  profileId: StringFilter
}

input NotificationsScalarWhereWithAggregatesInput {
  AND: [NotificationsScalarWhereWithAggregatesInput!]
  NOT: [NotificationsScalarWhereWithAggregatesInput!]
  OR: [NotificationsScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
}

input NotificationsUpdateInput {
  FriendRequests: RequestUpdateManyWithoutNotificationFriendRequestNestedInput
  MessageRequests: RequestUpdateManyWithoutNotificationMessageNestedInput
  Profile: ProfileUpdateOneRequiredWithoutNotificationsNestedInput
  id: StringFieldUpdateOperationsInput
}

input NotificationsUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
}

input NotificationsUpdateManyWithWhereWithoutFriendRequestsInput {
  data: NotificationsUpdateManyMutationInput!
  where: NotificationsScalarWhereInput!
}

input NotificationsUpdateManyWithWhereWithoutMessageRequestsInput {
  data: NotificationsUpdateManyMutationInput!
  where: NotificationsScalarWhereInput!
}

input NotificationsUpdateManyWithoutFriendRequestsNestedInput {
  connect: [NotificationsWhereUniqueInput!]
  connectOrCreate: [NotificationsCreateOrConnectWithoutFriendRequestsInput!]
  create: [NotificationsCreateWithoutFriendRequestsInput!]
  delete: [NotificationsWhereUniqueInput!]
  deleteMany: [NotificationsScalarWhereInput!]
  disconnect: [NotificationsWhereUniqueInput!]
  set: [NotificationsWhereUniqueInput!]
  update: [NotificationsUpdateWithWhereUniqueWithoutFriendRequestsInput!]
  updateMany: [NotificationsUpdateManyWithWhereWithoutFriendRequestsInput!]
  upsert: [NotificationsUpsertWithWhereUniqueWithoutFriendRequestsInput!]
}

input NotificationsUpdateManyWithoutMessageRequestsNestedInput {
  connect: [NotificationsWhereUniqueInput!]
  connectOrCreate: [NotificationsCreateOrConnectWithoutMessageRequestsInput!]
  create: [NotificationsCreateWithoutMessageRequestsInput!]
  delete: [NotificationsWhereUniqueInput!]
  deleteMany: [NotificationsScalarWhereInput!]
  disconnect: [NotificationsWhereUniqueInput!]
  set: [NotificationsWhereUniqueInput!]
  update: [NotificationsUpdateWithWhereUniqueWithoutMessageRequestsInput!]
  updateMany: [NotificationsUpdateManyWithWhereWithoutMessageRequestsInput!]
  upsert: [NotificationsUpsertWithWhereUniqueWithoutMessageRequestsInput!]
}

input NotificationsUpdateOneWithoutProfileNestedInput {
  connect: NotificationsWhereUniqueInput
  connectOrCreate: NotificationsCreateOrConnectWithoutProfileInput
  create: NotificationsCreateWithoutProfileInput
  delete: NotificationsWhereInput
  disconnect: NotificationsWhereInput
  update: NotificationsUpdateToOneWithWhereWithoutProfileInput
  upsert: NotificationsUpsertWithoutProfileInput
}

input NotificationsUpdateToOneWithWhereWithoutProfileInput {
  data: NotificationsUpdateWithoutProfileInput!
  where: NotificationsWhereInput
}

input NotificationsUpdateWithWhereUniqueWithoutFriendRequestsInput {
  data: NotificationsUpdateWithoutFriendRequestsInput!
  where: NotificationsWhereUniqueInput!
}

input NotificationsUpdateWithWhereUniqueWithoutMessageRequestsInput {
  data: NotificationsUpdateWithoutMessageRequestsInput!
  where: NotificationsWhereUniqueInput!
}

input NotificationsUpdateWithoutFriendRequestsInput {
  MessageRequests: RequestUpdateManyWithoutNotificationMessageNestedInput
  Profile: ProfileUpdateOneRequiredWithoutNotificationsNestedInput
  id: StringFieldUpdateOperationsInput
}

input NotificationsUpdateWithoutMessageRequestsInput {
  FriendRequests: RequestUpdateManyWithoutNotificationFriendRequestNestedInput
  Profile: ProfileUpdateOneRequiredWithoutNotificationsNestedInput
  id: StringFieldUpdateOperationsInput
}

input NotificationsUpdateWithoutProfileInput {
  FriendRequests: RequestUpdateManyWithoutNotificationFriendRequestNestedInput
  MessageRequests: RequestUpdateManyWithoutNotificationMessageNestedInput
  id: StringFieldUpdateOperationsInput
}

input NotificationsUpsertWithWhereUniqueWithoutFriendRequestsInput {
  create: NotificationsCreateWithoutFriendRequestsInput!
  update: NotificationsUpdateWithoutFriendRequestsInput!
  where: NotificationsWhereUniqueInput!
}

input NotificationsUpsertWithWhereUniqueWithoutMessageRequestsInput {
  create: NotificationsCreateWithoutMessageRequestsInput!
  update: NotificationsUpdateWithoutMessageRequestsInput!
  where: NotificationsWhereUniqueInput!
}

input NotificationsUpsertWithoutProfileInput {
  create: NotificationsCreateWithoutProfileInput!
  update: NotificationsUpdateWithoutProfileInput!
  where: NotificationsWhereInput
}

input NotificationsWhereInput {
  AND: [NotificationsWhereInput!]
  FriendRequests: RequestListRelationFilter
  MessageRequests: RequestListRelationFilter
  NOT: [NotificationsWhereInput!]
  OR: [NotificationsWhereInput!]
  Profile: ProfileWhereInput
  id: StringFilter
  profileId: StringFilter
}

input NotificationsWhereUniqueInput {
  AND: [NotificationsWhereInput!]
  FriendRequests: RequestListRelationFilter
  MessageRequests: RequestListRelationFilter
  NOT: [NotificationsWhereInput!]
  OR: [NotificationsWhereInput!]
  Profile: ProfileWhereInput
  id: String
  profileId: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableEnumPhotoTypeFieldUpdateOperationsInput {
  set: PhotoType
}

input NullableEnumTokenTypeFieldUpdateOperationsInput {
  set: TokenType
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

enum NullsOrder {
  first
  last
}

type OrganizedCityResponseObject {
  allCities: [CityResponseObject!]
  popularCities: [CityResponseObject!]
}

type Out {
  LiveOutPersonal: LiveOutPersonal
  LiveOutVenue: LiveOutVenue
  PersonalStats: PersonalStats
  VenueStats: VenueStats
  createdAt: DateTime!
  id: ID!
  leftAt: DateTime
  liveOutPersonalId: String
  liveOutVenueId: String
  personalProfileId: String!
  personalStatsId: String
  type: OutType!
  updatedAt: DateTime!
  venueProfileId: String!
  venueStatsId: String
}

input OutCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  leftAt: SortOrder
  liveOutPersonalId: SortOrder
  liveOutVenueId: SortOrder
  personalProfileId: SortOrder
  personalStatsId: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  venueProfileId: SortOrder
  venueStatsId: SortOrder
}

input OutCreateInput {
  LiveOutPersonal: LiveOutPersonalCreateNestedOneWithoutOutInput
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutOutInput
  PersonalStats: PersonalStatsCreateNestedOneWithoutOutInput
  VenueStats: VenueStatsCreateNestedOneWithoutOutInput
  createdAt: DateTime
  id: String
  leftAt: DateTime
  personalProfileId: String!
  type: OutType!
  updatedAt: DateTime
  venueProfileId: String!
}

input OutCreateManyInput {
  createdAt: DateTime
  id: String
  leftAt: DateTime
  liveOutPersonalId: String
  liveOutVenueId: String
  personalProfileId: String!
  personalStatsId: String
  type: OutType!
  updatedAt: DateTime
  venueProfileId: String!
  venueStatsId: String
}

input OutCreateManyLiveOutPersonalInput {
  createdAt: DateTime
  id: String
  leftAt: DateTime
  liveOutVenueId: String
  personalProfileId: String!
  personalStatsId: String
  type: OutType!
  updatedAt: DateTime
  venueProfileId: String!
  venueStatsId: String
}

input OutCreateManyLiveOutPersonalInputEnvelope {
  data: [OutCreateManyLiveOutPersonalInput!]!
  skipDuplicates: Boolean
}

input OutCreateManyLiveOutVenueInput {
  createdAt: DateTime
  id: String
  leftAt: DateTime
  liveOutPersonalId: String
  personalProfileId: String!
  personalStatsId: String
  type: OutType!
  updatedAt: DateTime
  venueProfileId: String!
  venueStatsId: String
}

input OutCreateManyLiveOutVenueInputEnvelope {
  data: [OutCreateManyLiveOutVenueInput!]!
  skipDuplicates: Boolean
}

input OutCreateManyPersonalStatsInput {
  createdAt: DateTime
  id: String
  leftAt: DateTime
  liveOutPersonalId: String
  liveOutVenueId: String
  personalProfileId: String!
  type: OutType!
  updatedAt: DateTime
  venueProfileId: String!
  venueStatsId: String
}

input OutCreateManyPersonalStatsInputEnvelope {
  data: [OutCreateManyPersonalStatsInput!]!
  skipDuplicates: Boolean
}

input OutCreateManyVenueStatsInput {
  createdAt: DateTime
  id: String
  leftAt: DateTime
  liveOutPersonalId: String
  liveOutVenueId: String
  personalProfileId: String!
  personalStatsId: String
  type: OutType!
  updatedAt: DateTime
  venueProfileId: String!
}

input OutCreateManyVenueStatsInputEnvelope {
  data: [OutCreateManyVenueStatsInput!]!
  skipDuplicates: Boolean
}

input OutCreateNestedManyWithoutLiveOutPersonalInput {
  connect: [OutWhereUniqueInput!]
  connectOrCreate: [OutCreateOrConnectWithoutLiveOutPersonalInput!]
  create: [OutCreateWithoutLiveOutPersonalInput!]
  createMany: OutCreateManyLiveOutPersonalInputEnvelope
}

input OutCreateNestedManyWithoutLiveOutVenueInput {
  connect: [OutWhereUniqueInput!]
  connectOrCreate: [OutCreateOrConnectWithoutLiveOutVenueInput!]
  create: [OutCreateWithoutLiveOutVenueInput!]
  createMany: OutCreateManyLiveOutVenueInputEnvelope
}

input OutCreateNestedManyWithoutPersonalStatsInput {
  connect: [OutWhereUniqueInput!]
  connectOrCreate: [OutCreateOrConnectWithoutPersonalStatsInput!]
  create: [OutCreateWithoutPersonalStatsInput!]
  createMany: OutCreateManyPersonalStatsInputEnvelope
}

input OutCreateNestedManyWithoutVenueStatsInput {
  connect: [OutWhereUniqueInput!]
  connectOrCreate: [OutCreateOrConnectWithoutVenueStatsInput!]
  create: [OutCreateWithoutVenueStatsInput!]
  createMany: OutCreateManyVenueStatsInputEnvelope
}

input OutCreateOrConnectWithoutLiveOutPersonalInput {
  create: OutCreateWithoutLiveOutPersonalInput!
  where: OutWhereUniqueInput!
}

input OutCreateOrConnectWithoutLiveOutVenueInput {
  create: OutCreateWithoutLiveOutVenueInput!
  where: OutWhereUniqueInput!
}

input OutCreateOrConnectWithoutPersonalStatsInput {
  create: OutCreateWithoutPersonalStatsInput!
  where: OutWhereUniqueInput!
}

input OutCreateOrConnectWithoutVenueStatsInput {
  create: OutCreateWithoutVenueStatsInput!
  where: OutWhereUniqueInput!
}

input OutCreateWithoutLiveOutPersonalInput {
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutOutInput
  PersonalStats: PersonalStatsCreateNestedOneWithoutOutInput
  VenueStats: VenueStatsCreateNestedOneWithoutOutInput
  createdAt: DateTime
  id: String
  leftAt: DateTime
  personalProfileId: String!
  type: OutType!
  updatedAt: DateTime
  venueProfileId: String!
}

input OutCreateWithoutLiveOutVenueInput {
  LiveOutPersonal: LiveOutPersonalCreateNestedOneWithoutOutInput
  PersonalStats: PersonalStatsCreateNestedOneWithoutOutInput
  VenueStats: VenueStatsCreateNestedOneWithoutOutInput
  createdAt: DateTime
  id: String
  leftAt: DateTime
  personalProfileId: String!
  type: OutType!
  updatedAt: DateTime
  venueProfileId: String!
}

input OutCreateWithoutPersonalStatsInput {
  LiveOutPersonal: LiveOutPersonalCreateNestedOneWithoutOutInput
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutOutInput
  VenueStats: VenueStatsCreateNestedOneWithoutOutInput
  createdAt: DateTime
  id: String
  leftAt: DateTime
  personalProfileId: String!
  type: OutType!
  updatedAt: DateTime
  venueProfileId: String!
}

input OutCreateWithoutVenueStatsInput {
  LiveOutPersonal: LiveOutPersonalCreateNestedOneWithoutOutInput
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutOutInput
  PersonalStats: PersonalStatsCreateNestedOneWithoutOutInput
  createdAt: DateTime
  id: String
  leftAt: DateTime
  personalProfileId: String!
  type: OutType!
  updatedAt: DateTime
  venueProfileId: String!
}

input OutListRelationFilter {
  every: OutWhereInput
  none: OutWhereInput
  some: OutWhereInput
}

input OutMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  leftAt: SortOrder
  liveOutPersonalId: SortOrder
  liveOutVenueId: SortOrder
  personalProfileId: SortOrder
  personalStatsId: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  venueProfileId: SortOrder
  venueStatsId: SortOrder
}

input OutMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  leftAt: SortOrder
  liveOutPersonalId: SortOrder
  liveOutVenueId: SortOrder
  personalProfileId: SortOrder
  personalStatsId: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  venueProfileId: SortOrder
  venueStatsId: SortOrder
}

input OutOrderByRelationAggregateInput {
  _count: SortOrder
}

input OutOrderByWithAggregationInput {
  _count: OutCountOrderByAggregateInput
  _max: OutMaxOrderByAggregateInput
  _min: OutMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  leftAt: SortOrder
  liveOutPersonalId: SortOrder
  liveOutVenueId: SortOrder
  personalProfileId: SortOrder
  personalStatsId: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  venueProfileId: SortOrder
  venueStatsId: SortOrder
}

input OutOrderByWithRelationInput {
  LiveOutPersonal: LiveOutPersonalOrderByWithRelationInput
  LiveOutVenue: LiveOutVenueOrderByWithRelationInput
  PersonalStats: PersonalStatsOrderByWithRelationInput
  VenueStats: VenueStatsOrderByWithRelationInput
  createdAt: SortOrder
  id: SortOrder
  leftAt: SortOrder
  liveOutPersonalId: SortOrder
  liveOutVenueId: SortOrder
  personalProfileId: SortOrder
  personalStatsId: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  venueProfileId: SortOrder
  venueStatsId: SortOrder
}

enum OutScalarFieldEnum {
  createdAt
  id
  leftAt
  liveOutPersonalId
  liveOutVenueId
  personalProfileId
  personalStatsId
  type
  updatedAt
  venueProfileId
  venueStatsId
}

input OutScalarWhereInput {
  AND: [OutScalarWhereInput!]
  NOT: [OutScalarWhereInput!]
  OR: [OutScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  leftAt: DateTimeNullableFilter
  liveOutPersonalId: StringNullableFilter
  liveOutVenueId: StringNullableFilter
  personalProfileId: StringFilter
  personalStatsId: StringNullableFilter
  type: EnumOutTypeFilter
  updatedAt: DateTimeFilter
  venueProfileId: StringFilter
  venueStatsId: StringNullableFilter
}

input OutScalarWhereWithAggregatesInput {
  AND: [OutScalarWhereWithAggregatesInput!]
  NOT: [OutScalarWhereWithAggregatesInput!]
  OR: [OutScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  leftAt: DateTimeNullableWithAggregatesFilter
  liveOutPersonalId: StringNullableWithAggregatesFilter
  liveOutVenueId: StringNullableWithAggregatesFilter
  personalProfileId: StringWithAggregatesFilter
  personalStatsId: StringNullableWithAggregatesFilter
  type: EnumOutTypeWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  venueProfileId: StringWithAggregatesFilter
  venueStatsId: StringNullableWithAggregatesFilter
}

enum OutType {
  JOIN
  TOTAL
}

input OutUpdateInput {
  LiveOutPersonal: LiveOutPersonalUpdateOneWithoutOutNestedInput
  LiveOutVenue: LiveOutVenueUpdateOneWithoutOutNestedInput
  PersonalStats: PersonalStatsUpdateOneWithoutOutNestedInput
  VenueStats: VenueStatsUpdateOneWithoutOutNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  leftAt: NullableDateTimeFieldUpdateOperationsInput
  personalProfileId: StringFieldUpdateOperationsInput
  type: EnumOutTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venueProfileId: StringFieldUpdateOperationsInput
}

input OutUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  leftAt: NullableDateTimeFieldUpdateOperationsInput
  personalProfileId: StringFieldUpdateOperationsInput
  type: EnumOutTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venueProfileId: StringFieldUpdateOperationsInput
}

input OutUpdateManyWithWhereWithoutLiveOutPersonalInput {
  data: OutUpdateManyMutationInput!
  where: OutScalarWhereInput!
}

input OutUpdateManyWithWhereWithoutLiveOutVenueInput {
  data: OutUpdateManyMutationInput!
  where: OutScalarWhereInput!
}

input OutUpdateManyWithWhereWithoutPersonalStatsInput {
  data: OutUpdateManyMutationInput!
  where: OutScalarWhereInput!
}

input OutUpdateManyWithWhereWithoutVenueStatsInput {
  data: OutUpdateManyMutationInput!
  where: OutScalarWhereInput!
}

input OutUpdateManyWithoutLiveOutPersonalNestedInput {
  connect: [OutWhereUniqueInput!]
  connectOrCreate: [OutCreateOrConnectWithoutLiveOutPersonalInput!]
  create: [OutCreateWithoutLiveOutPersonalInput!]
  createMany: OutCreateManyLiveOutPersonalInputEnvelope
  delete: [OutWhereUniqueInput!]
  deleteMany: [OutScalarWhereInput!]
  disconnect: [OutWhereUniqueInput!]
  set: [OutWhereUniqueInput!]
  update: [OutUpdateWithWhereUniqueWithoutLiveOutPersonalInput!]
  updateMany: [OutUpdateManyWithWhereWithoutLiveOutPersonalInput!]
  upsert: [OutUpsertWithWhereUniqueWithoutLiveOutPersonalInput!]
}

input OutUpdateManyWithoutLiveOutVenueNestedInput {
  connect: [OutWhereUniqueInput!]
  connectOrCreate: [OutCreateOrConnectWithoutLiveOutVenueInput!]
  create: [OutCreateWithoutLiveOutVenueInput!]
  createMany: OutCreateManyLiveOutVenueInputEnvelope
  delete: [OutWhereUniqueInput!]
  deleteMany: [OutScalarWhereInput!]
  disconnect: [OutWhereUniqueInput!]
  set: [OutWhereUniqueInput!]
  update: [OutUpdateWithWhereUniqueWithoutLiveOutVenueInput!]
  updateMany: [OutUpdateManyWithWhereWithoutLiveOutVenueInput!]
  upsert: [OutUpsertWithWhereUniqueWithoutLiveOutVenueInput!]
}

input OutUpdateManyWithoutPersonalStatsNestedInput {
  connect: [OutWhereUniqueInput!]
  connectOrCreate: [OutCreateOrConnectWithoutPersonalStatsInput!]
  create: [OutCreateWithoutPersonalStatsInput!]
  createMany: OutCreateManyPersonalStatsInputEnvelope
  delete: [OutWhereUniqueInput!]
  deleteMany: [OutScalarWhereInput!]
  disconnect: [OutWhereUniqueInput!]
  set: [OutWhereUniqueInput!]
  update: [OutUpdateWithWhereUniqueWithoutPersonalStatsInput!]
  updateMany: [OutUpdateManyWithWhereWithoutPersonalStatsInput!]
  upsert: [OutUpsertWithWhereUniqueWithoutPersonalStatsInput!]
}

input OutUpdateManyWithoutVenueStatsNestedInput {
  connect: [OutWhereUniqueInput!]
  connectOrCreate: [OutCreateOrConnectWithoutVenueStatsInput!]
  create: [OutCreateWithoutVenueStatsInput!]
  createMany: OutCreateManyVenueStatsInputEnvelope
  delete: [OutWhereUniqueInput!]
  deleteMany: [OutScalarWhereInput!]
  disconnect: [OutWhereUniqueInput!]
  set: [OutWhereUniqueInput!]
  update: [OutUpdateWithWhereUniqueWithoutVenueStatsInput!]
  updateMany: [OutUpdateManyWithWhereWithoutVenueStatsInput!]
  upsert: [OutUpsertWithWhereUniqueWithoutVenueStatsInput!]
}

input OutUpdateWithWhereUniqueWithoutLiveOutPersonalInput {
  data: OutUpdateWithoutLiveOutPersonalInput!
  where: OutWhereUniqueInput!
}

input OutUpdateWithWhereUniqueWithoutLiveOutVenueInput {
  data: OutUpdateWithoutLiveOutVenueInput!
  where: OutWhereUniqueInput!
}

input OutUpdateWithWhereUniqueWithoutPersonalStatsInput {
  data: OutUpdateWithoutPersonalStatsInput!
  where: OutWhereUniqueInput!
}

input OutUpdateWithWhereUniqueWithoutVenueStatsInput {
  data: OutUpdateWithoutVenueStatsInput!
  where: OutWhereUniqueInput!
}

input OutUpdateWithoutLiveOutPersonalInput {
  LiveOutVenue: LiveOutVenueUpdateOneWithoutOutNestedInput
  PersonalStats: PersonalStatsUpdateOneWithoutOutNestedInput
  VenueStats: VenueStatsUpdateOneWithoutOutNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  leftAt: NullableDateTimeFieldUpdateOperationsInput
  personalProfileId: StringFieldUpdateOperationsInput
  type: EnumOutTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venueProfileId: StringFieldUpdateOperationsInput
}

input OutUpdateWithoutLiveOutVenueInput {
  LiveOutPersonal: LiveOutPersonalUpdateOneWithoutOutNestedInput
  PersonalStats: PersonalStatsUpdateOneWithoutOutNestedInput
  VenueStats: VenueStatsUpdateOneWithoutOutNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  leftAt: NullableDateTimeFieldUpdateOperationsInput
  personalProfileId: StringFieldUpdateOperationsInput
  type: EnumOutTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venueProfileId: StringFieldUpdateOperationsInput
}

input OutUpdateWithoutPersonalStatsInput {
  LiveOutPersonal: LiveOutPersonalUpdateOneWithoutOutNestedInput
  LiveOutVenue: LiveOutVenueUpdateOneWithoutOutNestedInput
  VenueStats: VenueStatsUpdateOneWithoutOutNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  leftAt: NullableDateTimeFieldUpdateOperationsInput
  personalProfileId: StringFieldUpdateOperationsInput
  type: EnumOutTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venueProfileId: StringFieldUpdateOperationsInput
}

input OutUpdateWithoutVenueStatsInput {
  LiveOutPersonal: LiveOutPersonalUpdateOneWithoutOutNestedInput
  LiveOutVenue: LiveOutVenueUpdateOneWithoutOutNestedInput
  PersonalStats: PersonalStatsUpdateOneWithoutOutNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  leftAt: NullableDateTimeFieldUpdateOperationsInput
  personalProfileId: StringFieldUpdateOperationsInput
  type: EnumOutTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venueProfileId: StringFieldUpdateOperationsInput
}

input OutUpsertWithWhereUniqueWithoutLiveOutPersonalInput {
  create: OutCreateWithoutLiveOutPersonalInput!
  update: OutUpdateWithoutLiveOutPersonalInput!
  where: OutWhereUniqueInput!
}

input OutUpsertWithWhereUniqueWithoutLiveOutVenueInput {
  create: OutCreateWithoutLiveOutVenueInput!
  update: OutUpdateWithoutLiveOutVenueInput!
  where: OutWhereUniqueInput!
}

input OutUpsertWithWhereUniqueWithoutPersonalStatsInput {
  create: OutCreateWithoutPersonalStatsInput!
  update: OutUpdateWithoutPersonalStatsInput!
  where: OutWhereUniqueInput!
}

input OutUpsertWithWhereUniqueWithoutVenueStatsInput {
  create: OutCreateWithoutVenueStatsInput!
  update: OutUpdateWithoutVenueStatsInput!
  where: OutWhereUniqueInput!
}

input OutWhereInput {
  AND: [OutWhereInput!]
  LiveOutPersonal: LiveOutPersonalWhereInput
  LiveOutVenue: LiveOutVenueWhereInput
  NOT: [OutWhereInput!]
  OR: [OutWhereInput!]
  PersonalStats: PersonalStatsWhereInput
  VenueStats: VenueStatsWhereInput
  createdAt: DateTimeFilter
  id: StringFilter
  leftAt: DateTimeNullableFilter
  liveOutPersonalId: StringNullableFilter
  liveOutVenueId: StringNullableFilter
  personalProfileId: StringFilter
  personalStatsId: StringNullableFilter
  type: EnumOutTypeFilter
  updatedAt: DateTimeFilter
  venueProfileId: StringFilter
  venueStatsId: StringNullableFilter
}

input OutWhereUniqueInput {
  AND: [OutWhereInput!]
  LiveOutPersonal: LiveOutPersonalWhereInput
  LiveOutVenue: LiveOutVenueWhereInput
  NOT: [OutWhereInput!]
  OR: [OutWhereInput!]
  PersonalStats: PersonalStatsWhereInput
  VenueStats: VenueStatsWhereInput
  createdAt: DateTimeFilter
  id: String
  leftAt: DateTimeNullableFilter
  liveOutPersonalId: StringNullableFilter
  liveOutVenueId: StringNullableFilter
  personalProfileId: StringFilter
  personalStatsId: StringNullableFilter
  type: EnumOutTypeFilter
  updatedAt: DateTimeFilter
  venueProfileId: StringFilter
  venueStatsId: StringNullableFilter
}

type Password {
  AuthenticationProvider: AuthenticationProvider!
  authenitcationProviderId: String!
  createdAt: DateTime!
  id: ID!
  password: String!
  updatedAt: DateTime!
}

input PasswordCountOrderByAggregateInput {
  authenitcationProviderId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  password: SortOrder
  updatedAt: SortOrder
}

input PasswordCreateInput {
  AuthenticationProvider: AuthenticationProviderCreateNestedOneWithoutPasswordInput!
  createdAt: DateTime
  id: String
  password: String!
  updatedAt: DateTime
}

input PasswordCreateManyInput {
  authenitcationProviderId: String!
  createdAt: DateTime
  id: String
  password: String!
  updatedAt: DateTime
}

input PasswordCreateNestedOneWithoutAuthenticationProviderInput {
  connect: PasswordWhereUniqueInput
  connectOrCreate: PasswordCreateOrConnectWithoutAuthenticationProviderInput
  create: PasswordCreateWithoutAuthenticationProviderInput
}

input PasswordCreateOrConnectWithoutAuthenticationProviderInput {
  create: PasswordCreateWithoutAuthenticationProviderInput!
  where: PasswordWhereUniqueInput!
}

input PasswordCreateWithoutAuthenticationProviderInput {
  createdAt: DateTime
  id: String
  password: String!
  updatedAt: DateTime
}

input PasswordMaxOrderByAggregateInput {
  authenitcationProviderId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  password: SortOrder
  updatedAt: SortOrder
}

input PasswordMinOrderByAggregateInput {
  authenitcationProviderId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  password: SortOrder
  updatedAt: SortOrder
}

input PasswordNullableRelationFilter {
  is: PasswordWhereInput
  isNot: PasswordWhereInput
}

input PasswordOrderByWithAggregationInput {
  _count: PasswordCountOrderByAggregateInput
  _max: PasswordMaxOrderByAggregateInput
  _min: PasswordMinOrderByAggregateInput
  authenitcationProviderId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  password: SortOrder
  updatedAt: SortOrder
}

input PasswordOrderByWithRelationInput {
  AuthenticationProvider: AuthenticationProviderOrderByWithRelationInput
  authenitcationProviderId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  password: SortOrder
  updatedAt: SortOrder
}

enum PasswordScalarFieldEnum {
  authenitcationProviderId
  createdAt
  id
  password
  updatedAt
}

input PasswordScalarWhereWithAggregatesInput {
  AND: [PasswordScalarWhereWithAggregatesInput!]
  NOT: [PasswordScalarWhereWithAggregatesInput!]
  OR: [PasswordScalarWhereWithAggregatesInput!]
  authenitcationProviderId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  password: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input PasswordUpdateInput {
  AuthenticationProvider: AuthenticationProviderUpdateOneRequiredWithoutPasswordNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PasswordUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PasswordUpdateOneWithoutAuthenticationProviderNestedInput {
  connect: PasswordWhereUniqueInput
  connectOrCreate: PasswordCreateOrConnectWithoutAuthenticationProviderInput
  create: PasswordCreateWithoutAuthenticationProviderInput
  delete: PasswordWhereInput
  disconnect: PasswordWhereInput
  update: PasswordUpdateToOneWithWhereWithoutAuthenticationProviderInput
  upsert: PasswordUpsertWithoutAuthenticationProviderInput
}

input PasswordUpdateToOneWithWhereWithoutAuthenticationProviderInput {
  data: PasswordUpdateWithoutAuthenticationProviderInput!
  where: PasswordWhereInput
}

input PasswordUpdateWithoutAuthenticationProviderInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PasswordUpsertWithoutAuthenticationProviderInput {
  create: PasswordCreateWithoutAuthenticationProviderInput!
  update: PasswordUpdateWithoutAuthenticationProviderInput!
  where: PasswordWhereInput
}

input PasswordWhereInput {
  AND: [PasswordWhereInput!]
  AuthenticationProvider: AuthenticationProviderWhereInput
  NOT: [PasswordWhereInput!]
  OR: [PasswordWhereInput!]
  authenitcationProviderId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  password: StringFilter
  updatedAt: DateTimeFilter
}

input PasswordWhereUniqueInput {
  AND: [PasswordWhereInput!]
  AuthenticationProvider: AuthenticationProviderWhereInput
  NOT: [PasswordWhereInput!]
  OR: [PasswordWhereInput!]
  authenitcationProviderId: String
  createdAt: DateTimeFilter
  id: String
  password: StringFilter
  updatedAt: DateTimeFilter
}

input PathAvgOrderByAggregateInput {
  latitude: SortOrder
  longitude: SortOrder
}

input PathCountOrderByAggregateInput {
  TonightPathId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input PathCreateInput {
  TonightPath: TonightPathCreateNestedOneWithoutPathInput
  createdAt: DateTime
  id: String
  latitude: Float!
  longitude: Float!
}

input PathCreateManyInput {
  TonightPathId: String
  createdAt: DateTime
  id: String
  latitude: Float!
  longitude: Float!
}

input PathCreateManyTonightPathInput {
  createdAt: DateTime
  id: String
  latitude: Float!
  longitude: Float!
}

input PathCreateManyTonightPathInputEnvelope {
  data: [PathCreateManyTonightPathInput!]!
  skipDuplicates: Boolean
}

input PathCreateNestedManyWithoutTonightPathInput {
  connect: [PathWhereUniqueInput!]
  connectOrCreate: [PathCreateOrConnectWithoutTonightPathInput!]
  create: [PathCreateWithoutTonightPathInput!]
  createMany: PathCreateManyTonightPathInputEnvelope
}

input PathCreateOrConnectWithoutTonightPathInput {
  create: PathCreateWithoutTonightPathInput!
  where: PathWhereUniqueInput!
}

input PathCreateWithoutTonightPathInput {
  createdAt: DateTime
  id: String
  latitude: Float!
  longitude: Float!
}

input PathListRelationFilter {
  every: PathWhereInput
  none: PathWhereInput
  some: PathWhereInput
}

input PathMaxOrderByAggregateInput {
  TonightPathId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input PathMinOrderByAggregateInput {
  TonightPathId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input PathOrderByRelationAggregateInput {
  _count: SortOrder
}

input PathOrderByWithAggregationInput {
  TonightPathId: SortOrder
  _avg: PathAvgOrderByAggregateInput
  _count: PathCountOrderByAggregateInput
  _max: PathMaxOrderByAggregateInput
  _min: PathMinOrderByAggregateInput
  _sum: PathSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

input PathOrderByWithRelationInput {
  TonightPath: TonightPathOrderByWithRelationInput
  TonightPathId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  latitude: SortOrder
  longitude: SortOrder
}

enum PathScalarFieldEnum {
  TonightPathId
  createdAt
  id
  latitude
  longitude
}

input PathScalarWhereInput {
  AND: [PathScalarWhereInput!]
  NOT: [PathScalarWhereInput!]
  OR: [PathScalarWhereInput!]
  TonightPathId: StringNullableFilter
  createdAt: DateTimeFilter
  id: StringFilter
  latitude: FloatFilter
  longitude: FloatFilter
}

input PathScalarWhereWithAggregatesInput {
  AND: [PathScalarWhereWithAggregatesInput!]
  NOT: [PathScalarWhereWithAggregatesInput!]
  OR: [PathScalarWhereWithAggregatesInput!]
  TonightPathId: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  latitude: FloatWithAggregatesFilter
  longitude: FloatWithAggregatesFilter
}

input PathSumOrderByAggregateInput {
  latitude: SortOrder
  longitude: SortOrder
}

input PathUpdateInput {
  TonightPath: TonightPathUpdateOneWithoutPathNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
}

input PathUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
}

input PathUpdateManyWithWhereWithoutTonightPathInput {
  data: PathUpdateManyMutationInput!
  where: PathScalarWhereInput!
}

input PathUpdateManyWithoutTonightPathNestedInput {
  connect: [PathWhereUniqueInput!]
  connectOrCreate: [PathCreateOrConnectWithoutTonightPathInput!]
  create: [PathCreateWithoutTonightPathInput!]
  createMany: PathCreateManyTonightPathInputEnvelope
  delete: [PathWhereUniqueInput!]
  deleteMany: [PathScalarWhereInput!]
  disconnect: [PathWhereUniqueInput!]
  set: [PathWhereUniqueInput!]
  update: [PathUpdateWithWhereUniqueWithoutTonightPathInput!]
  updateMany: [PathUpdateManyWithWhereWithoutTonightPathInput!]
  upsert: [PathUpsertWithWhereUniqueWithoutTonightPathInput!]
}

input PathUpdateWithWhereUniqueWithoutTonightPathInput {
  data: PathUpdateWithoutTonightPathInput!
  where: PathWhereUniqueInput!
}

input PathUpdateWithoutTonightPathInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  latitude: FloatFieldUpdateOperationsInput
  longitude: FloatFieldUpdateOperationsInput
}

input PathUpsertWithWhereUniqueWithoutTonightPathInput {
  create: PathCreateWithoutTonightPathInput!
  update: PathUpdateWithoutTonightPathInput!
  where: PathWhereUniqueInput!
}

input PathWhereInput {
  AND: [PathWhereInput!]
  NOT: [PathWhereInput!]
  OR: [PathWhereInput!]
  TonightPath: TonightPathWhereInput
  TonightPathId: StringNullableFilter
  createdAt: DateTimeFilter
  id: StringFilter
  latitude: FloatFilter
  longitude: FloatFilter
}

input PathWhereUniqueInput {
  AND: [PathWhereInput!]
  NOT: [PathWhereInput!]
  OR: [PathWhereInput!]
  TonightPath: TonightPathWhereInput
  TonightPathId: StringNullableFilter
  createdAt: DateTimeFilter
  id: String
  latitude: FloatFilter
  longitude: FloatFilter
}

enum Permission {
  ADMINISTATOR
  GENERAL
  OWNER
}

type Personal {
  LiveOutPersonal: LiveOutPersonal
  PersonalStats: PersonalStats
  Profile: Profile!
  createdAt: DateTime!
  id: ID!
  personalStatsId: String
  profileId: String!
  updatedAt: DateTime!
}

input PersonalCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  personalStatsId: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input PersonalCreateInput {
  LiveOutPersonal: LiveOutPersonalCreateNestedOneWithoutPersonalInput
  PersonalStats: PersonalStatsCreateNestedOneWithoutPersonalInput
  Profile: ProfileCreateNestedOneWithoutPersonalInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input PersonalCreateManyInput {
  createdAt: DateTime
  id: String
  personalStatsId: String
  profileId: String!
  updatedAt: DateTime
}

input PersonalCreateNestedOneWithoutLiveOutPersonalInput {
  connect: PersonalWhereUniqueInput
  connectOrCreate: PersonalCreateOrConnectWithoutLiveOutPersonalInput
  create: PersonalCreateWithoutLiveOutPersonalInput
}

input PersonalCreateNestedOneWithoutPersonalStatsInput {
  connect: PersonalWhereUniqueInput
  connectOrCreate: PersonalCreateOrConnectWithoutPersonalStatsInput
  create: PersonalCreateWithoutPersonalStatsInput
}

input PersonalCreateNestedOneWithoutProfileInput {
  connect: PersonalWhereUniqueInput
  connectOrCreate: PersonalCreateOrConnectWithoutProfileInput
  create: PersonalCreateWithoutProfileInput
}

input PersonalCreateOrConnectWithoutLiveOutPersonalInput {
  create: PersonalCreateWithoutLiveOutPersonalInput!
  where: PersonalWhereUniqueInput!
}

input PersonalCreateOrConnectWithoutPersonalStatsInput {
  create: PersonalCreateWithoutPersonalStatsInput!
  where: PersonalWhereUniqueInput!
}

input PersonalCreateOrConnectWithoutProfileInput {
  create: PersonalCreateWithoutProfileInput!
  where: PersonalWhereUniqueInput!
}

input PersonalCreateWithoutLiveOutPersonalInput {
  PersonalStats: PersonalStatsCreateNestedOneWithoutPersonalInput
  Profile: ProfileCreateNestedOneWithoutPersonalInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input PersonalCreateWithoutPersonalStatsInput {
  LiveOutPersonal: LiveOutPersonalCreateNestedOneWithoutPersonalInput
  Profile: ProfileCreateNestedOneWithoutPersonalInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input PersonalCreateWithoutProfileInput {
  LiveOutPersonal: LiveOutPersonalCreateNestedOneWithoutPersonalInput
  PersonalStats: PersonalStatsCreateNestedOneWithoutPersonalInput
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input PersonalMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  personalStatsId: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input PersonalMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  personalStatsId: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input PersonalNullableRelationFilter {
  is: PersonalWhereInput
  isNot: PersonalWhereInput
}

input PersonalOrderByWithAggregationInput {
  _count: PersonalCountOrderByAggregateInput
  _max: PersonalMaxOrderByAggregateInput
  _min: PersonalMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  personalStatsId: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input PersonalOrderByWithRelationInput {
  LiveOutPersonal: LiveOutPersonalOrderByWithRelationInput
  PersonalStats: PersonalStatsOrderByWithRelationInput
  Profile: ProfileOrderByWithRelationInput
  createdAt: SortOrder
  id: SortOrder
  personalStatsId: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input PersonalRelationFilter {
  is: PersonalWhereInput
  isNot: PersonalWhereInput
}

enum PersonalScalarFieldEnum {
  createdAt
  id
  personalStatsId
  profileId
  updatedAt
}

input PersonalScalarWhereWithAggregatesInput {
  AND: [PersonalScalarWhereWithAggregatesInput!]
  NOT: [PersonalScalarWhereWithAggregatesInput!]
  OR: [PersonalScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  personalStatsId: StringNullableWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type PersonalStats {
  Out(cursor: OutWhereUniqueInput, distinct: [OutScalarFieldEnum!], orderBy: [OutOrderByWithRelationInput!], skip: Int, take: Int, where: OutWhereInput): [Out!]!
  Personal: Personal
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
}

input PersonalStatsCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input PersonalStatsCreateInput {
  Out: OutCreateNestedManyWithoutPersonalStatsInput
  Personal: PersonalCreateNestedOneWithoutPersonalStatsInput
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input PersonalStatsCreateManyInput {
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input PersonalStatsCreateNestedOneWithoutOutInput {
  connect: PersonalStatsWhereUniqueInput
  connectOrCreate: PersonalStatsCreateOrConnectWithoutOutInput
  create: PersonalStatsCreateWithoutOutInput
}

input PersonalStatsCreateNestedOneWithoutPersonalInput {
  connect: PersonalStatsWhereUniqueInput
  connectOrCreate: PersonalStatsCreateOrConnectWithoutPersonalInput
  create: PersonalStatsCreateWithoutPersonalInput
}

input PersonalStatsCreateOrConnectWithoutOutInput {
  create: PersonalStatsCreateWithoutOutInput!
  where: PersonalStatsWhereUniqueInput!
}

input PersonalStatsCreateOrConnectWithoutPersonalInput {
  create: PersonalStatsCreateWithoutPersonalInput!
  where: PersonalStatsWhereUniqueInput!
}

input PersonalStatsCreateWithoutOutInput {
  Personal: PersonalCreateNestedOneWithoutPersonalStatsInput
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input PersonalStatsCreateWithoutPersonalInput {
  Out: OutCreateNestedManyWithoutPersonalStatsInput
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input PersonalStatsMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input PersonalStatsMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input PersonalStatsNullableRelationFilter {
  is: PersonalStatsWhereInput
  isNot: PersonalStatsWhereInput
}

input PersonalStatsOrderByWithAggregationInput {
  _count: PersonalStatsCountOrderByAggregateInput
  _max: PersonalStatsMaxOrderByAggregateInput
  _min: PersonalStatsMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input PersonalStatsOrderByWithRelationInput {
  Out: OutOrderByRelationAggregateInput
  Personal: PersonalOrderByWithRelationInput
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

enum PersonalStatsScalarFieldEnum {
  createdAt
  id
  updatedAt
}

input PersonalStatsScalarWhereWithAggregatesInput {
  AND: [PersonalStatsScalarWhereWithAggregatesInput!]
  NOT: [PersonalStatsScalarWhereWithAggregatesInput!]
  OR: [PersonalStatsScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input PersonalStatsUpdateInput {
  Out: OutUpdateManyWithoutPersonalStatsNestedInput
  Personal: PersonalUpdateOneWithoutPersonalStatsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonalStatsUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonalStatsUpdateOneWithoutOutNestedInput {
  connect: PersonalStatsWhereUniqueInput
  connectOrCreate: PersonalStatsCreateOrConnectWithoutOutInput
  create: PersonalStatsCreateWithoutOutInput
  delete: PersonalStatsWhereInput
  disconnect: PersonalStatsWhereInput
  update: PersonalStatsUpdateToOneWithWhereWithoutOutInput
  upsert: PersonalStatsUpsertWithoutOutInput
}

input PersonalStatsUpdateOneWithoutPersonalNestedInput {
  connect: PersonalStatsWhereUniqueInput
  connectOrCreate: PersonalStatsCreateOrConnectWithoutPersonalInput
  create: PersonalStatsCreateWithoutPersonalInput
  delete: PersonalStatsWhereInput
  disconnect: PersonalStatsWhereInput
  update: PersonalStatsUpdateToOneWithWhereWithoutPersonalInput
  upsert: PersonalStatsUpsertWithoutPersonalInput
}

input PersonalStatsUpdateToOneWithWhereWithoutOutInput {
  data: PersonalStatsUpdateWithoutOutInput!
  where: PersonalStatsWhereInput
}

input PersonalStatsUpdateToOneWithWhereWithoutPersonalInput {
  data: PersonalStatsUpdateWithoutPersonalInput!
  where: PersonalStatsWhereInput
}

input PersonalStatsUpdateWithoutOutInput {
  Personal: PersonalUpdateOneWithoutPersonalStatsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonalStatsUpdateWithoutPersonalInput {
  Out: OutUpdateManyWithoutPersonalStatsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonalStatsUpsertWithoutOutInput {
  create: PersonalStatsCreateWithoutOutInput!
  update: PersonalStatsUpdateWithoutOutInput!
  where: PersonalStatsWhereInput
}

input PersonalStatsUpsertWithoutPersonalInput {
  create: PersonalStatsCreateWithoutPersonalInput!
  update: PersonalStatsUpdateWithoutPersonalInput!
  where: PersonalStatsWhereInput
}

input PersonalStatsWhereInput {
  AND: [PersonalStatsWhereInput!]
  NOT: [PersonalStatsWhereInput!]
  OR: [PersonalStatsWhereInput!]
  Out: OutListRelationFilter
  Personal: PersonalWhereInput
  createdAt: DateTimeFilter
  id: StringFilter
  updatedAt: DateTimeFilter
}

input PersonalStatsWhereUniqueInput {
  AND: [PersonalStatsWhereInput!]
  NOT: [PersonalStatsWhereInput!]
  OR: [PersonalStatsWhereInput!]
  Out: OutListRelationFilter
  Personal: PersonalWhereInput
  createdAt: DateTimeFilter
  id: String
  updatedAt: DateTimeFilter
}

input PersonalUpdateInput {
  LiveOutPersonal: LiveOutPersonalUpdateOneWithoutPersonalNestedInput
  PersonalStats: PersonalStatsUpdateOneWithoutPersonalNestedInput
  Profile: ProfileUpdateOneRequiredWithoutPersonalNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonalUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonalUpdateOneRequiredWithoutLiveOutPersonalNestedInput {
  connect: PersonalWhereUniqueInput
  connectOrCreate: PersonalCreateOrConnectWithoutLiveOutPersonalInput
  create: PersonalCreateWithoutLiveOutPersonalInput
  update: PersonalUpdateToOneWithWhereWithoutLiveOutPersonalInput
  upsert: PersonalUpsertWithoutLiveOutPersonalInput
}

input PersonalUpdateOneWithoutPersonalStatsNestedInput {
  connect: PersonalWhereUniqueInput
  connectOrCreate: PersonalCreateOrConnectWithoutPersonalStatsInput
  create: PersonalCreateWithoutPersonalStatsInput
  delete: PersonalWhereInput
  disconnect: PersonalWhereInput
  update: PersonalUpdateToOneWithWhereWithoutPersonalStatsInput
  upsert: PersonalUpsertWithoutPersonalStatsInput
}

input PersonalUpdateOneWithoutProfileNestedInput {
  connect: PersonalWhereUniqueInput
  connectOrCreate: PersonalCreateOrConnectWithoutProfileInput
  create: PersonalCreateWithoutProfileInput
  delete: PersonalWhereInput
  disconnect: PersonalWhereInput
  update: PersonalUpdateToOneWithWhereWithoutProfileInput
  upsert: PersonalUpsertWithoutProfileInput
}

input PersonalUpdateToOneWithWhereWithoutLiveOutPersonalInput {
  data: PersonalUpdateWithoutLiveOutPersonalInput!
  where: PersonalWhereInput
}

input PersonalUpdateToOneWithWhereWithoutPersonalStatsInput {
  data: PersonalUpdateWithoutPersonalStatsInput!
  where: PersonalWhereInput
}

input PersonalUpdateToOneWithWhereWithoutProfileInput {
  data: PersonalUpdateWithoutProfileInput!
  where: PersonalWhereInput
}

input PersonalUpdateWithoutLiveOutPersonalInput {
  PersonalStats: PersonalStatsUpdateOneWithoutPersonalNestedInput
  Profile: ProfileUpdateOneRequiredWithoutPersonalNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonalUpdateWithoutPersonalStatsInput {
  LiveOutPersonal: LiveOutPersonalUpdateOneWithoutPersonalNestedInput
  Profile: ProfileUpdateOneRequiredWithoutPersonalNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonalUpdateWithoutProfileInput {
  LiveOutPersonal: LiveOutPersonalUpdateOneWithoutPersonalNestedInput
  PersonalStats: PersonalStatsUpdateOneWithoutPersonalNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PersonalUpsertWithoutLiveOutPersonalInput {
  create: PersonalCreateWithoutLiveOutPersonalInput!
  update: PersonalUpdateWithoutLiveOutPersonalInput!
  where: PersonalWhereInput
}

input PersonalUpsertWithoutPersonalStatsInput {
  create: PersonalCreateWithoutPersonalStatsInput!
  update: PersonalUpdateWithoutPersonalStatsInput!
  where: PersonalWhereInput
}

input PersonalUpsertWithoutProfileInput {
  create: PersonalCreateWithoutProfileInput!
  update: PersonalUpdateWithoutProfileInput!
  where: PersonalWhereInput
}

input PersonalWhereInput {
  AND: [PersonalWhereInput!]
  LiveOutPersonal: LiveOutPersonalWhereInput
  NOT: [PersonalWhereInput!]
  OR: [PersonalWhereInput!]
  PersonalStats: PersonalStatsWhereInput
  Profile: ProfileWhereInput
  createdAt: DateTimeFilter
  id: StringFilter
  personalStatsId: StringNullableFilter
  profileId: StringFilter
  updatedAt: DateTimeFilter
}

input PersonalWhereUniqueInput {
  AND: [PersonalWhereInput!]
  LiveOutPersonal: LiveOutPersonalWhereInput
  NOT: [PersonalWhereInput!]
  OR: [PersonalWhereInput!]
  PersonalStats: PersonalStatsWhereInput
  Profile: ProfileWhereInput
  createdAt: DateTimeFilter
  id: String
  personalStatsId: String
  profileId: String
  updatedAt: DateTimeFilter
}

type Phone {
  AuthenticationProvider(cursor: AuthenticationProviderWhereUniqueInput, distinct: [AuthenticationProviderScalarFieldEnum!], orderBy: [AuthenticationProviderOrderByWithRelationInput!], skip: Int, take: Int, where: AuthenticationProviderWhereInput): [AuthenticationProvider!]!
  canUseAsRecovery: Boolean
  completeNumber: String
  countryCallingCode: String
  countryCode: String
  createdAt: DateTime!
  id: ID!
  number: String!
  updatedAt: DateTime!
}

input PhoneAvgOrderByAggregateInput {
  id: SortOrder
}

input PhoneCountOrderByAggregateInput {
  canUseAsRecovery: SortOrder
  completeNumber: SortOrder
  countryCallingCode: SortOrder
  countryCode: SortOrder
  createdAt: SortOrder
  id: SortOrder
  number: SortOrder
  updatedAt: SortOrder
}

input PhoneCreateInput {
  AuthenticationProvider: AuthenticationProviderCreateNestedManyWithoutPhonesInput
  canUseAsRecovery: Boolean
  completeNumber: String
  countryCallingCode: String
  countryCode: String
  createdAt: DateTime
  number: String!
  updatedAt: DateTime
}

input PhoneCreateManyInput {
  canUseAsRecovery: Boolean
  completeNumber: String
  countryCallingCode: String
  countryCode: String
  createdAt: DateTime
  id: Int
  number: String!
  updatedAt: DateTime
}

input PhoneCreateNestedManyWithoutAuthenticationProviderInput {
  connect: [PhoneWhereUniqueInput!]
  connectOrCreate: [PhoneCreateOrConnectWithoutAuthenticationProviderInput!]
  create: [PhoneCreateWithoutAuthenticationProviderInput!]
}

input PhoneCreateOrConnectWithoutAuthenticationProviderInput {
  create: PhoneCreateWithoutAuthenticationProviderInput!
  where: PhoneWhereUniqueInput!
}

input PhoneCreateWithoutAuthenticationProviderInput {
  canUseAsRecovery: Boolean
  completeNumber: String
  countryCallingCode: String
  countryCode: String
  createdAt: DateTime
  number: String!
  updatedAt: DateTime
}

input PhoneInput {
  completeNumber: String
  countryCallingCode: String
  countryCode: String

  """Accepted phone formats: 5193334444 or +15193334444"""
  number: String
}

input PhoneListRelationFilter {
  every: PhoneWhereInput
  none: PhoneWhereInput
  some: PhoneWhereInput
}

input PhoneMaxOrderByAggregateInput {
  canUseAsRecovery: SortOrder
  completeNumber: SortOrder
  countryCallingCode: SortOrder
  countryCode: SortOrder
  createdAt: SortOrder
  id: SortOrder
  number: SortOrder
  updatedAt: SortOrder
}

input PhoneMinOrderByAggregateInput {
  canUseAsRecovery: SortOrder
  completeNumber: SortOrder
  countryCallingCode: SortOrder
  countryCode: SortOrder
  createdAt: SortOrder
  id: SortOrder
  number: SortOrder
  updatedAt: SortOrder
}

input PhoneOrderByRelationAggregateInput {
  _count: SortOrder
}

input PhoneOrderByWithAggregationInput {
  _avg: PhoneAvgOrderByAggregateInput
  _count: PhoneCountOrderByAggregateInput
  _max: PhoneMaxOrderByAggregateInput
  _min: PhoneMinOrderByAggregateInput
  _sum: PhoneSumOrderByAggregateInput
  canUseAsRecovery: SortOrder
  completeNumber: SortOrder
  countryCallingCode: SortOrder
  countryCode: SortOrder
  createdAt: SortOrder
  id: SortOrder
  number: SortOrder
  updatedAt: SortOrder
}

input PhoneOrderByWithRelationInput {
  AuthenticationProvider: AuthenticationProviderOrderByRelationAggregateInput
  canUseAsRecovery: SortOrder
  completeNumber: SortOrder
  countryCallingCode: SortOrder
  countryCode: SortOrder
  createdAt: SortOrder
  id: SortOrder
  number: SortOrder
  updatedAt: SortOrder
}

enum PhoneScalarFieldEnum {
  canUseAsRecovery
  completeNumber
  countryCallingCode
  countryCode
  createdAt
  id
  number
  updatedAt
}

input PhoneScalarWhereInput {
  AND: [PhoneScalarWhereInput!]
  NOT: [PhoneScalarWhereInput!]
  OR: [PhoneScalarWhereInput!]
  canUseAsRecovery: BoolNullableFilter
  completeNumber: StringNullableFilter
  countryCallingCode: StringNullableFilter
  countryCode: StringNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  number: StringFilter
  updatedAt: DateTimeFilter
}

input PhoneScalarWhereWithAggregatesInput {
  AND: [PhoneScalarWhereWithAggregatesInput!]
  NOT: [PhoneScalarWhereWithAggregatesInput!]
  OR: [PhoneScalarWhereWithAggregatesInput!]
  canUseAsRecovery: BoolNullableWithAggregatesFilter
  completeNumber: StringNullableWithAggregatesFilter
  countryCallingCode: StringNullableWithAggregatesFilter
  countryCode: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  number: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input PhoneSumOrderByAggregateInput {
  id: SortOrder
}

input PhoneUpdateInput {
  AuthenticationProvider: AuthenticationProviderUpdateManyWithoutPhonesNestedInput
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  completeNumber: NullableStringFieldUpdateOperationsInput
  countryCallingCode: NullableStringFieldUpdateOperationsInput
  countryCode: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  number: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PhoneUpdateManyMutationInput {
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  completeNumber: NullableStringFieldUpdateOperationsInput
  countryCallingCode: NullableStringFieldUpdateOperationsInput
  countryCode: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  number: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PhoneUpdateManyWithWhereWithoutAuthenticationProviderInput {
  data: PhoneUpdateManyMutationInput!
  where: PhoneScalarWhereInput!
}

input PhoneUpdateManyWithoutAuthenticationProviderNestedInput {
  connect: [PhoneWhereUniqueInput!]
  connectOrCreate: [PhoneCreateOrConnectWithoutAuthenticationProviderInput!]
  create: [PhoneCreateWithoutAuthenticationProviderInput!]
  delete: [PhoneWhereUniqueInput!]
  deleteMany: [PhoneScalarWhereInput!]
  disconnect: [PhoneWhereUniqueInput!]
  set: [PhoneWhereUniqueInput!]
  update: [PhoneUpdateWithWhereUniqueWithoutAuthenticationProviderInput!]
  updateMany: [PhoneUpdateManyWithWhereWithoutAuthenticationProviderInput!]
  upsert: [PhoneUpsertWithWhereUniqueWithoutAuthenticationProviderInput!]
}

input PhoneUpdateWithWhereUniqueWithoutAuthenticationProviderInput {
  data: PhoneUpdateWithoutAuthenticationProviderInput!
  where: PhoneWhereUniqueInput!
}

input PhoneUpdateWithoutAuthenticationProviderInput {
  canUseAsRecovery: NullableBoolFieldUpdateOperationsInput
  completeNumber: NullableStringFieldUpdateOperationsInput
  countryCallingCode: NullableStringFieldUpdateOperationsInput
  countryCode: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  number: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PhoneUpsertWithWhereUniqueWithoutAuthenticationProviderInput {
  create: PhoneCreateWithoutAuthenticationProviderInput!
  update: PhoneUpdateWithoutAuthenticationProviderInput!
  where: PhoneWhereUniqueInput!
}

input PhoneWhereInput {
  AND: [PhoneWhereInput!]
  AuthenticationProvider: AuthenticationProviderListRelationFilter
  NOT: [PhoneWhereInput!]
  OR: [PhoneWhereInput!]
  canUseAsRecovery: BoolNullableFilter
  completeNumber: StringNullableFilter
  countryCallingCode: StringNullableFilter
  countryCode: StringNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  number: StringFilter
  updatedAt: DateTimeFilter
}

input PhoneWhereUniqueInput {
  AND: [PhoneWhereInput!]
  AuthenticationProvider: AuthenticationProviderListRelationFilter
  NOT: [PhoneWhereInput!]
  OR: [PhoneWhereInput!]
  canUseAsRecovery: BoolNullableFilter
  completeNumber: StringNullableFilter
  countryCallingCode: StringNullableFilter
  countryCode: StringNullableFilter
  createdAt: DateTimeFilter
  id: Int
  number: StringFilter
  updatedAt: DateTimeFilter
}

type Photo {
  Group: Group
  Profile: Profile
  Story: Story
  active: Boolean!
  blurhash: String
  createdAt: DateTime!
  groupId: String
  height: Int
  id: ID!
  position: Int
  profileId: String
  ratio: String
  storyId: String
  type: PhotoType
  updatedAt: DateTime!
  url: String!
  width: Int
}

input PhotoAvgOrderByAggregateInput {
  height: SortOrder
  position: SortOrder
  width: SortOrder
}

input PhotoCountOrderByAggregateInput {
  active: SortOrder
  blurhash: SortOrder
  createdAt: SortOrder
  groupId: SortOrder
  height: SortOrder
  id: SortOrder
  position: SortOrder
  profileId: SortOrder
  ratio: SortOrder
  storyId: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  url: SortOrder
  width: SortOrder
}

input PhotoCreateInput {
  Group: GroupCreateNestedOneWithoutPhotosInput
  Profile: ProfileCreateNestedOneWithoutPhotosInput
  Story: StoryCreateNestedOneWithoutPhotosInput
  active: Boolean
  blurhash: String
  createdAt: DateTime
  height: Int
  id: String
  position: Int
  ratio: String
  type: PhotoType
  updatedAt: DateTime
  url: String!
  width: Int
}

input PhotoCreateManyGroupInput {
  active: Boolean
  blurhash: String
  createdAt: DateTime
  height: Int
  id: String
  position: Int
  profileId: String
  ratio: String
  storyId: String
  type: PhotoType
  updatedAt: DateTime
  url: String!
  width: Int
}

input PhotoCreateManyGroupInputEnvelope {
  data: [PhotoCreateManyGroupInput!]!
  skipDuplicates: Boolean
}

input PhotoCreateManyInput {
  active: Boolean
  blurhash: String
  createdAt: DateTime
  groupId: String
  height: Int
  id: String
  position: Int
  profileId: String
  ratio: String
  storyId: String
  type: PhotoType
  updatedAt: DateTime
  url: String!
  width: Int
}

input PhotoCreateManyProfileInput {
  active: Boolean
  blurhash: String
  createdAt: DateTime
  groupId: String
  height: Int
  id: String
  position: Int
  ratio: String
  storyId: String
  type: PhotoType
  updatedAt: DateTime
  url: String!
  width: Int
}

input PhotoCreateManyProfileInputEnvelope {
  data: [PhotoCreateManyProfileInput!]!
  skipDuplicates: Boolean
}

input PhotoCreateManyStoryInput {
  active: Boolean
  blurhash: String
  createdAt: DateTime
  groupId: String
  height: Int
  id: String
  position: Int
  profileId: String
  ratio: String
  type: PhotoType
  updatedAt: DateTime
  url: String!
  width: Int
}

input PhotoCreateManyStoryInputEnvelope {
  data: [PhotoCreateManyStoryInput!]!
  skipDuplicates: Boolean
}

input PhotoCreateNestedManyWithoutGroupInput {
  connect: [PhotoWhereUniqueInput!]
  connectOrCreate: [PhotoCreateOrConnectWithoutGroupInput!]
  create: [PhotoCreateWithoutGroupInput!]
  createMany: PhotoCreateManyGroupInputEnvelope
}

input PhotoCreateNestedManyWithoutProfileInput {
  connect: [PhotoWhereUniqueInput!]
  connectOrCreate: [PhotoCreateOrConnectWithoutProfileInput!]
  create: [PhotoCreateWithoutProfileInput!]
  createMany: PhotoCreateManyProfileInputEnvelope
}

input PhotoCreateNestedManyWithoutStoryInput {
  connect: [PhotoWhereUniqueInput!]
  connectOrCreate: [PhotoCreateOrConnectWithoutStoryInput!]
  create: [PhotoCreateWithoutStoryInput!]
  createMany: PhotoCreateManyStoryInputEnvelope
}

input PhotoCreateOrConnectWithoutGroupInput {
  create: PhotoCreateWithoutGroupInput!
  where: PhotoWhereUniqueInput!
}

input PhotoCreateOrConnectWithoutProfileInput {
  create: PhotoCreateWithoutProfileInput!
  where: PhotoWhereUniqueInput!
}

input PhotoCreateOrConnectWithoutStoryInput {
  create: PhotoCreateWithoutStoryInput!
  where: PhotoWhereUniqueInput!
}

input PhotoCreateWithoutGroupInput {
  Profile: ProfileCreateNestedOneWithoutPhotosInput
  Story: StoryCreateNestedOneWithoutPhotosInput
  active: Boolean
  blurhash: String
  createdAt: DateTime
  height: Int
  id: String
  position: Int
  ratio: String
  type: PhotoType
  updatedAt: DateTime
  url: String!
  width: Int
}

input PhotoCreateWithoutProfileInput {
  Group: GroupCreateNestedOneWithoutPhotosInput
  Story: StoryCreateNestedOneWithoutPhotosInput
  active: Boolean
  blurhash: String
  createdAt: DateTime
  height: Int
  id: String
  position: Int
  ratio: String
  type: PhotoType
  updatedAt: DateTime
  url: String!
  width: Int
}

input PhotoCreateWithoutStoryInput {
  Group: GroupCreateNestedOneWithoutPhotosInput
  Profile: ProfileCreateNestedOneWithoutPhotosInput
  active: Boolean
  blurhash: String
  createdAt: DateTime
  height: Int
  id: String
  position: Int
  ratio: String
  type: PhotoType
  updatedAt: DateTime
  url: String!
  width: Int
}

input PhotoListRelationFilter {
  every: PhotoWhereInput
  none: PhotoWhereInput
  some: PhotoWhereInput
}

input PhotoMaxOrderByAggregateInput {
  active: SortOrder
  blurhash: SortOrder
  createdAt: SortOrder
  groupId: SortOrder
  height: SortOrder
  id: SortOrder
  position: SortOrder
  profileId: SortOrder
  ratio: SortOrder
  storyId: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  url: SortOrder
  width: SortOrder
}

input PhotoMinOrderByAggregateInput {
  active: SortOrder
  blurhash: SortOrder
  createdAt: SortOrder
  groupId: SortOrder
  height: SortOrder
  id: SortOrder
  position: SortOrder
  profileId: SortOrder
  ratio: SortOrder
  storyId: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  url: SortOrder
  width: SortOrder
}

input PhotoOrderByRelationAggregateInput {
  _count: SortOrder
}

input PhotoOrderByWithAggregationInput {
  _avg: PhotoAvgOrderByAggregateInput
  _count: PhotoCountOrderByAggregateInput
  _max: PhotoMaxOrderByAggregateInput
  _min: PhotoMinOrderByAggregateInput
  _sum: PhotoSumOrderByAggregateInput
  active: SortOrder
  blurhash: SortOrder
  createdAt: SortOrder
  groupId: SortOrder
  height: SortOrder
  id: SortOrder
  position: SortOrder
  profileId: SortOrder
  ratio: SortOrder
  storyId: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  url: SortOrder
  width: SortOrder
}

input PhotoOrderByWithRelationInput {
  Group: GroupOrderByWithRelationInput
  Profile: ProfileOrderByWithRelationInput
  Story: StoryOrderByWithRelationInput
  active: SortOrder
  blurhash: SortOrder
  createdAt: SortOrder
  groupId: SortOrder
  height: SortOrder
  id: SortOrder
  position: SortOrder
  profileId: SortOrder
  ratio: SortOrder
  storyId: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  url: SortOrder
  width: SortOrder
}

enum PhotoScalarFieldEnum {
  active
  blurhash
  createdAt
  groupId
  height
  id
  position
  profileId
  ratio
  storyId
  type
  updatedAt
  url
  width
}

input PhotoScalarWhereInput {
  AND: [PhotoScalarWhereInput!]
  NOT: [PhotoScalarWhereInput!]
  OR: [PhotoScalarWhereInput!]
  active: BoolFilter
  blurhash: StringNullableFilter
  createdAt: DateTimeFilter
  groupId: StringNullableFilter
  height: IntNullableFilter
  id: StringFilter
  position: IntNullableFilter
  profileId: StringNullableFilter
  ratio: StringNullableFilter
  storyId: StringNullableFilter
  type: EnumPhotoTypeNullableFilter
  updatedAt: DateTimeFilter
  url: StringFilter
  width: IntNullableFilter
}

input PhotoScalarWhereWithAggregatesInput {
  AND: [PhotoScalarWhereWithAggregatesInput!]
  NOT: [PhotoScalarWhereWithAggregatesInput!]
  OR: [PhotoScalarWhereWithAggregatesInput!]
  active: BoolWithAggregatesFilter
  blurhash: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  groupId: StringNullableWithAggregatesFilter
  height: IntNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  position: IntNullableWithAggregatesFilter
  profileId: StringNullableWithAggregatesFilter
  ratio: StringNullableWithAggregatesFilter
  storyId: StringNullableWithAggregatesFilter
  type: EnumPhotoTypeNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  url: StringWithAggregatesFilter
  width: IntNullableWithAggregatesFilter
}

input PhotoSumOrderByAggregateInput {
  height: SortOrder
  position: SortOrder
  width: SortOrder
}

enum PhotoType {
  BANNER
  LOGO
}

input PhotoUpdateInput {
  Group: GroupUpdateOneWithoutPhotosNestedInput
  Profile: ProfileUpdateOneWithoutPhotosNestedInput
  Story: StoryUpdateOneWithoutPhotosNestedInput
  active: BoolFieldUpdateOperationsInput
  blurhash: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  position: NullableIntFieldUpdateOperationsInput
  ratio: NullableStringFieldUpdateOperationsInput
  type: NullableEnumPhotoTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input PhotoUpdateManyMutationInput {
  active: BoolFieldUpdateOperationsInput
  blurhash: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  position: NullableIntFieldUpdateOperationsInput
  ratio: NullableStringFieldUpdateOperationsInput
  type: NullableEnumPhotoTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input PhotoUpdateManyWithWhereWithoutGroupInput {
  data: PhotoUpdateManyMutationInput!
  where: PhotoScalarWhereInput!
}

input PhotoUpdateManyWithWhereWithoutProfileInput {
  data: PhotoUpdateManyMutationInput!
  where: PhotoScalarWhereInput!
}

input PhotoUpdateManyWithWhereWithoutStoryInput {
  data: PhotoUpdateManyMutationInput!
  where: PhotoScalarWhereInput!
}

input PhotoUpdateManyWithoutGroupNestedInput {
  connect: [PhotoWhereUniqueInput!]
  connectOrCreate: [PhotoCreateOrConnectWithoutGroupInput!]
  create: [PhotoCreateWithoutGroupInput!]
  createMany: PhotoCreateManyGroupInputEnvelope
  delete: [PhotoWhereUniqueInput!]
  deleteMany: [PhotoScalarWhereInput!]
  disconnect: [PhotoWhereUniqueInput!]
  set: [PhotoWhereUniqueInput!]
  update: [PhotoUpdateWithWhereUniqueWithoutGroupInput!]
  updateMany: [PhotoUpdateManyWithWhereWithoutGroupInput!]
  upsert: [PhotoUpsertWithWhereUniqueWithoutGroupInput!]
}

input PhotoUpdateManyWithoutProfileNestedInput {
  connect: [PhotoWhereUniqueInput!]
  connectOrCreate: [PhotoCreateOrConnectWithoutProfileInput!]
  create: [PhotoCreateWithoutProfileInput!]
  createMany: PhotoCreateManyProfileInputEnvelope
  delete: [PhotoWhereUniqueInput!]
  deleteMany: [PhotoScalarWhereInput!]
  disconnect: [PhotoWhereUniqueInput!]
  set: [PhotoWhereUniqueInput!]
  update: [PhotoUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [PhotoUpdateManyWithWhereWithoutProfileInput!]
  upsert: [PhotoUpsertWithWhereUniqueWithoutProfileInput!]
}

input PhotoUpdateManyWithoutStoryNestedInput {
  connect: [PhotoWhereUniqueInput!]
  connectOrCreate: [PhotoCreateOrConnectWithoutStoryInput!]
  create: [PhotoCreateWithoutStoryInput!]
  createMany: PhotoCreateManyStoryInputEnvelope
  delete: [PhotoWhereUniqueInput!]
  deleteMany: [PhotoScalarWhereInput!]
  disconnect: [PhotoWhereUniqueInput!]
  set: [PhotoWhereUniqueInput!]
  update: [PhotoUpdateWithWhereUniqueWithoutStoryInput!]
  updateMany: [PhotoUpdateManyWithWhereWithoutStoryInput!]
  upsert: [PhotoUpsertWithWhereUniqueWithoutStoryInput!]
}

input PhotoUpdateWithWhereUniqueWithoutGroupInput {
  data: PhotoUpdateWithoutGroupInput!
  where: PhotoWhereUniqueInput!
}

input PhotoUpdateWithWhereUniqueWithoutProfileInput {
  data: PhotoUpdateWithoutProfileInput!
  where: PhotoWhereUniqueInput!
}

input PhotoUpdateWithWhereUniqueWithoutStoryInput {
  data: PhotoUpdateWithoutStoryInput!
  where: PhotoWhereUniqueInput!
}

input PhotoUpdateWithoutGroupInput {
  Profile: ProfileUpdateOneWithoutPhotosNestedInput
  Story: StoryUpdateOneWithoutPhotosNestedInput
  active: BoolFieldUpdateOperationsInput
  blurhash: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  position: NullableIntFieldUpdateOperationsInput
  ratio: NullableStringFieldUpdateOperationsInput
  type: NullableEnumPhotoTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input PhotoUpdateWithoutProfileInput {
  Group: GroupUpdateOneWithoutPhotosNestedInput
  Story: StoryUpdateOneWithoutPhotosNestedInput
  active: BoolFieldUpdateOperationsInput
  blurhash: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  position: NullableIntFieldUpdateOperationsInput
  ratio: NullableStringFieldUpdateOperationsInput
  type: NullableEnumPhotoTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input PhotoUpdateWithoutStoryInput {
  Group: GroupUpdateOneWithoutPhotosNestedInput
  Profile: ProfileUpdateOneWithoutPhotosNestedInput
  active: BoolFieldUpdateOperationsInput
  blurhash: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  position: NullableIntFieldUpdateOperationsInput
  ratio: NullableStringFieldUpdateOperationsInput
  type: NullableEnumPhotoTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input PhotoUpsertWithWhereUniqueWithoutGroupInput {
  create: PhotoCreateWithoutGroupInput!
  update: PhotoUpdateWithoutGroupInput!
  where: PhotoWhereUniqueInput!
}

input PhotoUpsertWithWhereUniqueWithoutProfileInput {
  create: PhotoCreateWithoutProfileInput!
  update: PhotoUpdateWithoutProfileInput!
  where: PhotoWhereUniqueInput!
}

input PhotoUpsertWithWhereUniqueWithoutStoryInput {
  create: PhotoCreateWithoutStoryInput!
  update: PhotoUpdateWithoutStoryInput!
  where: PhotoWhereUniqueInput!
}

input PhotoWhereInput {
  AND: [PhotoWhereInput!]
  Group: GroupWhereInput
  NOT: [PhotoWhereInput!]
  OR: [PhotoWhereInput!]
  Profile: ProfileWhereInput
  Story: StoryWhereInput
  active: BoolFilter
  blurhash: StringNullableFilter
  createdAt: DateTimeFilter
  groupId: StringNullableFilter
  height: IntNullableFilter
  id: StringFilter
  position: IntNullableFilter
  profileId: StringNullableFilter
  ratio: StringNullableFilter
  storyId: StringNullableFilter
  type: EnumPhotoTypeNullableFilter
  updatedAt: DateTimeFilter
  url: StringFilter
  width: IntNullableFilter
}

input PhotoWhereUniqueInput {
  AND: [PhotoWhereInput!]
  Group: GroupWhereInput
  NOT: [PhotoWhereInput!]
  OR: [PhotoWhereInput!]
  Profile: ProfileWhereInput
  Story: StoryWhereInput
  active: BoolFilter
  blurhash: StringNullableFilter
  createdAt: DateTimeFilter
  groupId: StringNullableFilter
  height: IntNullableFilter
  id: String
  position: IntNullableFilter
  profileId: StringNullableFilter
  ratio: StringNullableFilter
  storyId: StringNullableFilter
  type: EnumPhotoTypeNullableFilter
  updatedAt: DateTimeFilter
  url: StringFilter
  width: IntNullableFilter
}

type PlaceType {
  coords: Coords
  isoCode: String
  name: String
}

type PluseCode {
  Location: Location
  compoundCode: String
  globalCode: String!
  id: ID!
}

input PluseCodeCountOrderByAggregateInput {
  compoundCode: SortOrder
  globalCode: SortOrder
  id: SortOrder
}

input PluseCodeCreateInput {
  Location: LocationCreateNestedOneWithoutPlusCodeInput
  compoundCode: String
  globalCode: String!
  id: String
}

input PluseCodeCreateManyInput {
  compoundCode: String
  globalCode: String!
  id: String
}

input PluseCodeCreateNestedOneWithoutLocationInput {
  connect: PluseCodeWhereUniqueInput
  connectOrCreate: PluseCodeCreateOrConnectWithoutLocationInput
  create: PluseCodeCreateWithoutLocationInput
}

input PluseCodeCreateOrConnectWithoutLocationInput {
  create: PluseCodeCreateWithoutLocationInput!
  where: PluseCodeWhereUniqueInput!
}

input PluseCodeCreateWithoutLocationInput {
  compoundCode: String
  globalCode: String!
  id: String
}

input PluseCodeMaxOrderByAggregateInput {
  compoundCode: SortOrder
  globalCode: SortOrder
  id: SortOrder
}

input PluseCodeMinOrderByAggregateInput {
  compoundCode: SortOrder
  globalCode: SortOrder
  id: SortOrder
}

input PluseCodeNullableRelationFilter {
  is: PluseCodeWhereInput
  isNot: PluseCodeWhereInput
}

input PluseCodeOrderByWithAggregationInput {
  _count: PluseCodeCountOrderByAggregateInput
  _max: PluseCodeMaxOrderByAggregateInput
  _min: PluseCodeMinOrderByAggregateInput
  compoundCode: SortOrder
  globalCode: SortOrder
  id: SortOrder
}

input PluseCodeOrderByWithRelationInput {
  Location: LocationOrderByWithRelationInput
  compoundCode: SortOrder
  globalCode: SortOrder
  id: SortOrder
}

enum PluseCodeScalarFieldEnum {
  compoundCode
  globalCode
  id
}

input PluseCodeScalarWhereWithAggregatesInput {
  AND: [PluseCodeScalarWhereWithAggregatesInput!]
  NOT: [PluseCodeScalarWhereWithAggregatesInput!]
  OR: [PluseCodeScalarWhereWithAggregatesInput!]
  compoundCode: StringNullableWithAggregatesFilter
  globalCode: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
}

input PluseCodeUpdateInput {
  Location: LocationUpdateOneWithoutPlusCodeNestedInput
  compoundCode: NullableStringFieldUpdateOperationsInput
  globalCode: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input PluseCodeUpdateManyMutationInput {
  compoundCode: NullableStringFieldUpdateOperationsInput
  globalCode: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input PluseCodeUpdateOneWithoutLocationNestedInput {
  connect: PluseCodeWhereUniqueInput
  connectOrCreate: PluseCodeCreateOrConnectWithoutLocationInput
  create: PluseCodeCreateWithoutLocationInput
  delete: PluseCodeWhereInput
  disconnect: PluseCodeWhereInput
  update: PluseCodeUpdateToOneWithWhereWithoutLocationInput
  upsert: PluseCodeUpsertWithoutLocationInput
}

input PluseCodeUpdateToOneWithWhereWithoutLocationInput {
  data: PluseCodeUpdateWithoutLocationInput!
  where: PluseCodeWhereInput
}

input PluseCodeUpdateWithoutLocationInput {
  compoundCode: NullableStringFieldUpdateOperationsInput
  globalCode: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input PluseCodeUpsertWithoutLocationInput {
  create: PluseCodeCreateWithoutLocationInput!
  update: PluseCodeUpdateWithoutLocationInput!
  where: PluseCodeWhereInput
}

input PluseCodeWhereInput {
  AND: [PluseCodeWhereInput!]
  Location: LocationWhereInput
  NOT: [PluseCodeWhereInput!]
  OR: [PluseCodeWhereInput!]
  compoundCode: StringNullableFilter
  globalCode: StringFilter
  id: StringFilter
}

input PluseCodeWhereUniqueInput {
  AND: [PluseCodeWhereInput!]
  Location: LocationWhereInput
  NOT: [PluseCodeWhereInput!]
  OR: [PluseCodeWhereInput!]
  compoundCode: StringNullableFilter
  globalCode: StringFilter
  id: String
}

input PopularSearchServiceCountOrderByAggregateInput {
  id: SortOrder
  popularPersonals: SortOrder
  popularVenues: SortOrder
}

input PopularSearchServiceCreateInput {
  id: String
  popularPersonals: [Json!]
  popularVenues: [Json!]
}

input PopularSearchServiceCreateManyInput {
  id: String
  popularPersonals: [Json!]
  popularVenues: [Json!]
}

input PopularSearchServiceCreatepopularPersonalsInput {
  set: [Json!]!
}

input PopularSearchServiceCreatepopularVenuesInput {
  set: [Json!]!
}

input PopularSearchServiceMaxOrderByAggregateInput {
  id: SortOrder
}

input PopularSearchServiceMinOrderByAggregateInput {
  id: SortOrder
}

input PopularSearchServiceOrderByWithAggregationInput {
  _count: PopularSearchServiceCountOrderByAggregateInput
  _max: PopularSearchServiceMaxOrderByAggregateInput
  _min: PopularSearchServiceMinOrderByAggregateInput
  id: SortOrder
  popularPersonals: SortOrder
  popularVenues: SortOrder
}

input PopularSearchServiceOrderByWithRelationInput {
  id: SortOrder
  popularPersonals: SortOrder
  popularVenues: SortOrder
}

enum PopularSearchServiceScalarFieldEnum {
  id
  popularPersonals
  popularVenues
}

input PopularSearchServiceScalarWhereWithAggregatesInput {
  AND: [PopularSearchServiceScalarWhereWithAggregatesInput!]
  NOT: [PopularSearchServiceScalarWhereWithAggregatesInput!]
  OR: [PopularSearchServiceScalarWhereWithAggregatesInput!]
  id: StringWithAggregatesFilter
  popularPersonals: JsonNullableListFilter
  popularVenues: JsonNullableListFilter
}

input PopularSearchServiceUpdateInput {
  id: StringFieldUpdateOperationsInput
  popularPersonals: [Json!]
  popularVenues: [Json!]
}

input PopularSearchServiceUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  popularPersonals: [Json!]
  popularVenues: [Json!]
}

input PopularSearchServiceUpdatepopularPersonalsInput {
  push: Json
  set: [Json!]
}

input PopularSearchServiceUpdatepopularVenuesInput {
  push: Json
  set: [Json!]
}

input PopularSearchServiceWhereInput {
  AND: [PopularSearchServiceWhereInput!]
  NOT: [PopularSearchServiceWhereInput!]
  OR: [PopularSearchServiceWhereInput!]
  id: StringFilter
  popularPersonals: JsonNullableListFilter
  popularVenues: JsonNullableListFilter
}

input PopularSearchServiceWhereUniqueInput {
  AND: [PopularSearchServiceWhereInput!]
  NOT: [PopularSearchServiceWhereInput!]
  OR: [PopularSearchServiceWhereInput!]
  id: String
  popularPersonals: JsonNullableListFilter
  popularVenues: JsonNullableListFilter
}

enum PostEventType {
  NewPost
}

union PrivacyTermsUpdateResponseUnion = Error | LatestPrivacyAndTermsDocumentResponse

type Profile {
  Credentials: Credentials
  DetailInformation: DetailInformation
  IdentifiableInformation: IdentifiableInformation
  Personal: Personal
  ProfileType: ProfileType
  Relationships: [Relationship!]
  ThemeManager: ThemeManager
  Venue: Venue
  bfsprofileid: String
  createdAt: DateTime
  id: String
  photos: [Photo!]
  profilePhoto: Photo
  resentSearches: SearchesService
  tonightStory: Story
  updatedAt: DateTime
}

input ProfileCountOrderByAggregateInput {
  DeviceManager: SortOrder
  ProfileType: SortOrder
  bfsprofileid: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input ProfileCreateDeviceManagerInput {
  set: [String!]!
}

input ProfileCreateInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateManyInput {
  DeviceManager: [String!]
  ProfileType: ProfileType
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateNestedManyWithoutConversationsInput {
  connect: [ProfileWhereUniqueInput!]
  connectOrCreate: [ProfileCreateOrConnectWithoutConversationsInput!]
  create: [ProfileCreateWithoutConversationsInput!]
}

input ProfileCreateNestedManyWithoutGroupsInput {
  connect: [ProfileWhereUniqueInput!]
  connectOrCreate: [ProfileCreateOrConnectWithoutGroupsInput!]
  create: [ProfileCreateWithoutGroupsInput!]
}

input ProfileCreateNestedOneWithoutCredentialsInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutCredentialsInput
  create: ProfileCreateWithoutCredentialsInput
}

input ProfileCreateNestedOneWithoutDetailInformationInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutDetailInformationInput
  create: ProfileCreateWithoutDetailInformationInput
}

input ProfileCreateNestedOneWithoutIdentifiableInformationInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutIdentifiableInformationInput
  create: ProfileCreateWithoutIdentifiableInformationInput
}

input ProfileCreateNestedOneWithoutNotificationsInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutNotificationsInput
  create: ProfileCreateWithoutNotificationsInput
}

input ProfileCreateNestedOneWithoutPersonalInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutPersonalInput
  create: ProfileCreateWithoutPersonalInput
}

input ProfileCreateNestedOneWithoutPhotosInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutPhotosInput
  create: ProfileCreateWithoutPhotosInput
}

input ProfileCreateNestedOneWithoutRelationshipsInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutRelationshipsInput
  create: ProfileCreateWithoutRelationshipsInput
}

input ProfileCreateNestedOneWithoutSearchesServiceInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutSearchesServiceInput
  create: ProfileCreateWithoutSearchesServiceInput
}

input ProfileCreateNestedOneWithoutSecuredDataKeysInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutSecuredDataKeysInput
  create: ProfileCreateWithoutSecuredDataKeysInput
}

input ProfileCreateNestedOneWithoutSettingsInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutSettingsInput
  create: ProfileCreateWithoutSettingsInput
}

input ProfileCreateNestedOneWithoutStorysInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutStorysInput
  create: ProfileCreateWithoutStorysInput
}

input ProfileCreateNestedOneWithoutThemeManagerInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutThemeManagerInput
  create: ProfileCreateWithoutThemeManagerInput
}

input ProfileCreateNestedOneWithoutVenueInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutVenueInput
  create: ProfileCreateWithoutVenueInput
}

input ProfileCreateNestedOneWithoutVoteInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutVoteInput
  create: ProfileCreateWithoutVoteInput
}

input ProfileCreateOrConnectWithoutConversationsInput {
  create: ProfileCreateWithoutConversationsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutCredentialsInput {
  create: ProfileCreateWithoutCredentialsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutDetailInformationInput {
  create: ProfileCreateWithoutDetailInformationInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutGroupsInput {
  create: ProfileCreateWithoutGroupsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutIdentifiableInformationInput {
  create: ProfileCreateWithoutIdentifiableInformationInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutNotificationsInput {
  create: ProfileCreateWithoutNotificationsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutPersonalInput {
  create: ProfileCreateWithoutPersonalInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutPhotosInput {
  create: ProfileCreateWithoutPhotosInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutRelationshipsInput {
  create: ProfileCreateWithoutRelationshipsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutSearchesServiceInput {
  create: ProfileCreateWithoutSearchesServiceInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutSecuredDataKeysInput {
  create: ProfileCreateWithoutSecuredDataKeysInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutSettingsInput {
  create: ProfileCreateWithoutSettingsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutStorysInput {
  create: ProfileCreateWithoutStorysInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutThemeManagerInput {
  create: ProfileCreateWithoutThemeManagerInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutVenueInput {
  create: ProfileCreateWithoutVenueInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateOrConnectWithoutVoteInput {
  create: ProfileCreateWithoutVoteInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateWithoutConversationsInput {
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutCredentialsInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutDetailInformationInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutGroupsInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutIdentifiableInformationInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutNotificationsInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutPersonalInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutPhotosInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutRelationshipsInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutSearchesServiceInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutSecuredDataKeysInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutSettingsInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutStorysInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutThemeManagerInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutVenueInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Vote: VoteCreateNestedManyWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileCreateWithoutVoteInput {
  Conversations: ConversationCreateNestedManyWithoutMembersInput
  Credentials: CredentialsCreateNestedOneWithoutProfileInput
  DetailInformation: DetailInformationCreateNestedOneWithoutProfileInput
  DeviceManager: [String!]
  Groups: GroupCreateNestedManyWithoutProfileInput
  IdentifiableInformation: IdentifiableInformationCreateNestedOneWithoutProfileInput
  Notifications: NotificationsCreateNestedOneWithoutProfileInput
  Personal: PersonalCreateNestedOneWithoutProfileInput
  Photos: PhotoCreateNestedManyWithoutProfileInput
  ProfileType: ProfileType
  Relationships: RelationshipCreateNestedManyWithoutProfileInput
  SearchesService: SearchesServiceCreateNestedOneWithoutProfileInput
  SecuredDataKeys: SecuredDataKeysCreateNestedManyWithoutProfileInput
  Settings: SettingsCreateNestedOneWithoutProfileInput
  Storys: StoryCreateNestedManyWithoutProfileInput
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileInput
  Venue: VenueCreateNestedOneWithoutProfileInput
  bfsprofileid: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ProfileListRelationFilter {
  every: ProfileWhereInput
  none: ProfileWhereInput
  some: ProfileWhereInput
}

input ProfileMaxOrderByAggregateInput {
  ProfileType: SortOrder
  bfsprofileid: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input ProfileMinOrderByAggregateInput {
  ProfileType: SortOrder
  bfsprofileid: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input ProfileNullableRelationFilter {
  is: ProfileWhereInput
  isNot: ProfileWhereInput
}

input ProfileOrderByRelationAggregateInput {
  _count: SortOrder
}

input ProfileOrderByWithAggregationInput {
  DeviceManager: SortOrder
  ProfileType: SortOrder
  _count: ProfileCountOrderByAggregateInput
  _max: ProfileMaxOrderByAggregateInput
  _min: ProfileMinOrderByAggregateInput
  bfsprofileid: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input ProfileOrderByWithRelationInput {
  Conversations: ConversationOrderByRelationAggregateInput
  Credentials: CredentialsOrderByWithRelationInput
  DetailInformation: DetailInformationOrderByWithRelationInput
  DeviceManager: SortOrder
  Groups: GroupOrderByRelationAggregateInput
  IdentifiableInformation: IdentifiableInformationOrderByWithRelationInput
  Notifications: NotificationsOrderByWithRelationInput
  Personal: PersonalOrderByWithRelationInput
  Photos: PhotoOrderByRelationAggregateInput
  ProfileType: SortOrder
  Relationships: RelationshipOrderByRelationAggregateInput
  SearchesService: SearchesServiceOrderByWithRelationInput
  SecuredDataKeys: SecuredDataKeysOrderByRelationAggregateInput
  Settings: SettingsOrderByWithRelationInput
  Storys: StoryOrderByRelationAggregateInput
  ThemeManager: ThemeManagerOrderByWithRelationInput
  Venue: VenueOrderByWithRelationInput
  Vote: VoteOrderByRelationAggregateInput
  bfsprofileid: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

type ProfilePersonal {
  Credentials: Credentials
  DetailInformation: DetailInformation
  IdentifiableInformation: IdentifiableInformation
  Personal: Personal
  ProfileType: ProfileType
  Relationships: [Relationship!]
  ThemeManager: ThemeManager
  bfsprofileid: String
  createdAt: DateTime
  id: String
  photos: [Photo!]
  profilePhoto: Photo
  resentSearches: SearchesService
  tonightStory: Story
  updatedAt: DateTime
}

input ProfileRelationFilter {
  is: ProfileWhereInput
  isNot: ProfileWhereInput
}

union ProfileResponseUnion = Error | Profile

enum ProfileScalarFieldEnum {
  DeviceManager
  ProfileType
  bfsprofileid
  createdAt
  id
  updatedAt
}

input ProfileScalarWhereInput {
  AND: [ProfileScalarWhereInput!]
  DeviceManager: StringNullableListFilter
  NOT: [ProfileScalarWhereInput!]
  OR: [ProfileScalarWhereInput!]
  ProfileType: EnumProfileTypeFilter
  bfsprofileid: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  updatedAt: DateTimeFilter
}

input ProfileScalarWhereWithAggregatesInput {
  AND: [ProfileScalarWhereWithAggregatesInput!]
  DeviceManager: StringNullableListFilter
  NOT: [ProfileScalarWhereWithAggregatesInput!]
  OR: [ProfileScalarWhereWithAggregatesInput!]
  ProfileType: EnumProfileTypeWithAggregatesFilter
  bfsprofileid: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type ProfileTheme {
  Theme: Theme
  ThemeManager: ThemeManager
  createdAt: DateTime
  id: ID
  isActive: Boolean
  themeId: String
  themeManagerId: String
  updatedAt: DateTime
}

input ProfileThemeCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  isActive: SortOrder
  themeId: SortOrder
  themeManagerId: SortOrder
  updatedAt: SortOrder
}

input ProfileThemeCreateInput {
  Theme: ThemeCreateNestedOneWithoutProfileThemeInput!
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileThemeInput
  createdAt: DateTime
  id: String
  isActive: Boolean!
  updatedAt: DateTime
}

input ProfileThemeCreateManyInput {
  createdAt: DateTime
  id: String
  isActive: Boolean!
  themeId: String!
  themeManagerId: String
  updatedAt: DateTime
}

input ProfileThemeCreateManyThemeInput {
  createdAt: DateTime
  id: String
  isActive: Boolean!
  themeManagerId: String
  updatedAt: DateTime
}

input ProfileThemeCreateManyThemeInputEnvelope {
  data: [ProfileThemeCreateManyThemeInput!]!
  skipDuplicates: Boolean
}

input ProfileThemeCreateManyThemeManagerInput {
  createdAt: DateTime
  id: String
  isActive: Boolean!
  themeId: String!
  updatedAt: DateTime
}

input ProfileThemeCreateManyThemeManagerInputEnvelope {
  data: [ProfileThemeCreateManyThemeManagerInput!]!
  skipDuplicates: Boolean
}

input ProfileThemeCreateNestedManyWithoutThemeInput {
  connect: [ProfileThemeWhereUniqueInput!]
  connectOrCreate: [ProfileThemeCreateOrConnectWithoutThemeInput!]
  create: [ProfileThemeCreateWithoutThemeInput!]
  createMany: ProfileThemeCreateManyThemeInputEnvelope
}

input ProfileThemeCreateNestedManyWithoutThemeManagerInput {
  connect: [ProfileThemeWhereUniqueInput!]
  connectOrCreate: [ProfileThemeCreateOrConnectWithoutThemeManagerInput!]
  create: [ProfileThemeCreateWithoutThemeManagerInput!]
  createMany: ProfileThemeCreateManyThemeManagerInputEnvelope
}

input ProfileThemeCreateOrConnectWithoutThemeInput {
  create: ProfileThemeCreateWithoutThemeInput!
  where: ProfileThemeWhereUniqueInput!
}

input ProfileThemeCreateOrConnectWithoutThemeManagerInput {
  create: ProfileThemeCreateWithoutThemeManagerInput!
  where: ProfileThemeWhereUniqueInput!
}

input ProfileThemeCreateWithoutThemeInput {
  ThemeManager: ThemeManagerCreateNestedOneWithoutProfileThemeInput
  createdAt: DateTime
  id: String
  isActive: Boolean!
  updatedAt: DateTime
}

input ProfileThemeCreateWithoutThemeManagerInput {
  Theme: ThemeCreateNestedOneWithoutProfileThemeInput!
  createdAt: DateTime
  id: String
  isActive: Boolean!
  updatedAt: DateTime
}

input ProfileThemeListRelationFilter {
  every: ProfileThemeWhereInput
  none: ProfileThemeWhereInput
  some: ProfileThemeWhereInput
}

input ProfileThemeMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  isActive: SortOrder
  themeId: SortOrder
  themeManagerId: SortOrder
  updatedAt: SortOrder
}

input ProfileThemeMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  isActive: SortOrder
  themeId: SortOrder
  themeManagerId: SortOrder
  updatedAt: SortOrder
}

input ProfileThemeOrderByRelationAggregateInput {
  _count: SortOrder
}

input ProfileThemeOrderByWithAggregationInput {
  _count: ProfileThemeCountOrderByAggregateInput
  _max: ProfileThemeMaxOrderByAggregateInput
  _min: ProfileThemeMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  isActive: SortOrder
  themeId: SortOrder
  themeManagerId: SortOrder
  updatedAt: SortOrder
}

input ProfileThemeOrderByWithRelationInput {
  Theme: ThemeOrderByWithRelationInput
  ThemeManager: ThemeManagerOrderByWithRelationInput
  createdAt: SortOrder
  id: SortOrder
  isActive: SortOrder
  themeId: SortOrder
  themeManagerId: SortOrder
  updatedAt: SortOrder
}

enum ProfileThemeScalarFieldEnum {
  createdAt
  id
  isActive
  themeId
  themeManagerId
  updatedAt
}

input ProfileThemeScalarWhereInput {
  AND: [ProfileThemeScalarWhereInput!]
  NOT: [ProfileThemeScalarWhereInput!]
  OR: [ProfileThemeScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  isActive: BoolFilter
  themeId: StringFilter
  themeManagerId: StringNullableFilter
  updatedAt: DateTimeFilter
}

input ProfileThemeScalarWhereWithAggregatesInput {
  AND: [ProfileThemeScalarWhereWithAggregatesInput!]
  NOT: [ProfileThemeScalarWhereWithAggregatesInput!]
  OR: [ProfileThemeScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  isActive: BoolWithAggregatesFilter
  themeId: StringWithAggregatesFilter
  themeManagerId: StringNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input ProfileThemeUpdateInput {
  Theme: ThemeUpdateOneRequiredWithoutProfileThemeNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileThemeNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileThemeUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileThemeUpdateManyWithWhereWithoutThemeInput {
  data: ProfileThemeUpdateManyMutationInput!
  where: ProfileThemeScalarWhereInput!
}

input ProfileThemeUpdateManyWithWhereWithoutThemeManagerInput {
  data: ProfileThemeUpdateManyMutationInput!
  where: ProfileThemeScalarWhereInput!
}

input ProfileThemeUpdateManyWithoutThemeManagerNestedInput {
  connect: [ProfileThemeWhereUniqueInput!]
  connectOrCreate: [ProfileThemeCreateOrConnectWithoutThemeManagerInput!]
  create: [ProfileThemeCreateWithoutThemeManagerInput!]
  createMany: ProfileThemeCreateManyThemeManagerInputEnvelope
  delete: [ProfileThemeWhereUniqueInput!]
  deleteMany: [ProfileThemeScalarWhereInput!]
  disconnect: [ProfileThemeWhereUniqueInput!]
  set: [ProfileThemeWhereUniqueInput!]
  update: [ProfileThemeUpdateWithWhereUniqueWithoutThemeManagerInput!]
  updateMany: [ProfileThemeUpdateManyWithWhereWithoutThemeManagerInput!]
  upsert: [ProfileThemeUpsertWithWhereUniqueWithoutThemeManagerInput!]
}

input ProfileThemeUpdateManyWithoutThemeNestedInput {
  connect: [ProfileThemeWhereUniqueInput!]
  connectOrCreate: [ProfileThemeCreateOrConnectWithoutThemeInput!]
  create: [ProfileThemeCreateWithoutThemeInput!]
  createMany: ProfileThemeCreateManyThemeInputEnvelope
  delete: [ProfileThemeWhereUniqueInput!]
  deleteMany: [ProfileThemeScalarWhereInput!]
  disconnect: [ProfileThemeWhereUniqueInput!]
  set: [ProfileThemeWhereUniqueInput!]
  update: [ProfileThemeUpdateWithWhereUniqueWithoutThemeInput!]
  updateMany: [ProfileThemeUpdateManyWithWhereWithoutThemeInput!]
  upsert: [ProfileThemeUpsertWithWhereUniqueWithoutThemeInput!]
}

input ProfileThemeUpdateWithWhereUniqueWithoutThemeInput {
  data: ProfileThemeUpdateWithoutThemeInput!
  where: ProfileThemeWhereUniqueInput!
}

input ProfileThemeUpdateWithWhereUniqueWithoutThemeManagerInput {
  data: ProfileThemeUpdateWithoutThemeManagerInput!
  where: ProfileThemeWhereUniqueInput!
}

input ProfileThemeUpdateWithoutThemeInput {
  ThemeManager: ThemeManagerUpdateOneWithoutProfileThemeNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileThemeUpdateWithoutThemeManagerInput {
  Theme: ThemeUpdateOneRequiredWithoutProfileThemeNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileThemeUpsertWithWhereUniqueWithoutThemeInput {
  create: ProfileThemeCreateWithoutThemeInput!
  update: ProfileThemeUpdateWithoutThemeInput!
  where: ProfileThemeWhereUniqueInput!
}

input ProfileThemeUpsertWithWhereUniqueWithoutThemeManagerInput {
  create: ProfileThemeCreateWithoutThemeManagerInput!
  update: ProfileThemeUpdateWithoutThemeManagerInput!
  where: ProfileThemeWhereUniqueInput!
}

input ProfileThemeWhereInput {
  AND: [ProfileThemeWhereInput!]
  NOT: [ProfileThemeWhereInput!]
  OR: [ProfileThemeWhereInput!]
  Theme: ThemeWhereInput
  ThemeManager: ThemeManagerWhereInput
  createdAt: DateTimeFilter
  id: StringFilter
  isActive: BoolFilter
  themeId: StringFilter
  themeManagerId: StringNullableFilter
  updatedAt: DateTimeFilter
}

input ProfileThemeWhereUniqueInput {
  AND: [ProfileThemeWhereInput!]
  NOT: [ProfileThemeWhereInput!]
  OR: [ProfileThemeWhereInput!]
  Theme: ThemeWhereInput
  ThemeManager: ThemeManagerWhereInput
  createdAt: DateTimeFilter
  id: String
  isActive: BoolFilter
  themeId: StringFilter
  themeManagerId: StringNullableFilter
  updatedAt: DateTimeFilter
}

enum ProfileType {
  GUEST
  PERSONAL
  VENUE
}

input ProfileUpdateDeviceManagerInput {
  push: [String!]
  set: [String!]
}

input ProfileUpdateInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateManyMutationInput {
  DeviceManager: [String!]
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateManyWithWhereWithoutConversationsInput {
  data: ProfileUpdateManyMutationInput!
  where: ProfileScalarWhereInput!
}

input ProfileUpdateManyWithWhereWithoutGroupsInput {
  data: ProfileUpdateManyMutationInput!
  where: ProfileScalarWhereInput!
}

input ProfileUpdateManyWithoutConversationsNestedInput {
  connect: [ProfileWhereUniqueInput!]
  connectOrCreate: [ProfileCreateOrConnectWithoutConversationsInput!]
  create: [ProfileCreateWithoutConversationsInput!]
  delete: [ProfileWhereUniqueInput!]
  deleteMany: [ProfileScalarWhereInput!]
  disconnect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutConversationsInput!]
  updateMany: [ProfileUpdateManyWithWhereWithoutConversationsInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutConversationsInput!]
}

input ProfileUpdateManyWithoutGroupsNestedInput {
  connect: [ProfileWhereUniqueInput!]
  connectOrCreate: [ProfileCreateOrConnectWithoutGroupsInput!]
  create: [ProfileCreateWithoutGroupsInput!]
  delete: [ProfileWhereUniqueInput!]
  deleteMany: [ProfileScalarWhereInput!]
  disconnect: [ProfileWhereUniqueInput!]
  set: [ProfileWhereUniqueInput!]
  update: [ProfileUpdateWithWhereUniqueWithoutGroupsInput!]
  updateMany: [ProfileUpdateManyWithWhereWithoutGroupsInput!]
  upsert: [ProfileUpsertWithWhereUniqueWithoutGroupsInput!]
}

input ProfileUpdateOneRequiredWithoutCredentialsNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutCredentialsInput
  create: ProfileCreateWithoutCredentialsInput
  update: ProfileUpdateToOneWithWhereWithoutCredentialsInput
  upsert: ProfileUpsertWithoutCredentialsInput
}

input ProfileUpdateOneRequiredWithoutDetailInformationNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutDetailInformationInput
  create: ProfileCreateWithoutDetailInformationInput
  update: ProfileUpdateToOneWithWhereWithoutDetailInformationInput
  upsert: ProfileUpsertWithoutDetailInformationInput
}

input ProfileUpdateOneRequiredWithoutIdentifiableInformationNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutIdentifiableInformationInput
  create: ProfileCreateWithoutIdentifiableInformationInput
  update: ProfileUpdateToOneWithWhereWithoutIdentifiableInformationInput
  upsert: ProfileUpsertWithoutIdentifiableInformationInput
}

input ProfileUpdateOneRequiredWithoutNotificationsNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutNotificationsInput
  create: ProfileCreateWithoutNotificationsInput
  update: ProfileUpdateToOneWithWhereWithoutNotificationsInput
  upsert: ProfileUpsertWithoutNotificationsInput
}

input ProfileUpdateOneRequiredWithoutPersonalNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutPersonalInput
  create: ProfileCreateWithoutPersonalInput
  update: ProfileUpdateToOneWithWhereWithoutPersonalInput
  upsert: ProfileUpsertWithoutPersonalInput
}

input ProfileUpdateOneRequiredWithoutSearchesServiceNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutSearchesServiceInput
  create: ProfileCreateWithoutSearchesServiceInput
  update: ProfileUpdateToOneWithWhereWithoutSearchesServiceInput
  upsert: ProfileUpsertWithoutSearchesServiceInput
}

input ProfileUpdateOneRequiredWithoutSecuredDataKeysNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutSecuredDataKeysInput
  create: ProfileCreateWithoutSecuredDataKeysInput
  update: ProfileUpdateToOneWithWhereWithoutSecuredDataKeysInput
  upsert: ProfileUpsertWithoutSecuredDataKeysInput
}

input ProfileUpdateOneRequiredWithoutSettingsNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutSettingsInput
  create: ProfileCreateWithoutSettingsInput
  update: ProfileUpdateToOneWithWhereWithoutSettingsInput
  upsert: ProfileUpsertWithoutSettingsInput
}

input ProfileUpdateOneRequiredWithoutThemeManagerNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutThemeManagerInput
  create: ProfileCreateWithoutThemeManagerInput
  update: ProfileUpdateToOneWithWhereWithoutThemeManagerInput
  upsert: ProfileUpsertWithoutThemeManagerInput
}

input ProfileUpdateOneRequiredWithoutVenueNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutVenueInput
  create: ProfileCreateWithoutVenueInput
  update: ProfileUpdateToOneWithWhereWithoutVenueInput
  upsert: ProfileUpsertWithoutVenueInput
}

input ProfileUpdateOneRequiredWithoutVoteNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutVoteInput
  create: ProfileCreateWithoutVoteInput
  update: ProfileUpdateToOneWithWhereWithoutVoteInput
  upsert: ProfileUpsertWithoutVoteInput
}

input ProfileUpdateOneWithoutPhotosNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutPhotosInput
  create: ProfileCreateWithoutPhotosInput
  delete: ProfileWhereInput
  disconnect: ProfileWhereInput
  update: ProfileUpdateToOneWithWhereWithoutPhotosInput
  upsert: ProfileUpsertWithoutPhotosInput
}

input ProfileUpdateOneWithoutRelationshipsNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutRelationshipsInput
  create: ProfileCreateWithoutRelationshipsInput
  delete: ProfileWhereInput
  disconnect: ProfileWhereInput
  update: ProfileUpdateToOneWithWhereWithoutRelationshipsInput
  upsert: ProfileUpsertWithoutRelationshipsInput
}

input ProfileUpdateOneWithoutStorysNestedInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutStorysInput
  create: ProfileCreateWithoutStorysInput
  delete: ProfileWhereInput
  disconnect: ProfileWhereInput
  update: ProfileUpdateToOneWithWhereWithoutStorysInput
  upsert: ProfileUpsertWithoutStorysInput
}

input ProfileUpdateToOneWithWhereWithoutCredentialsInput {
  data: ProfileUpdateWithoutCredentialsInput!
  where: ProfileWhereInput
}

input ProfileUpdateToOneWithWhereWithoutDetailInformationInput {
  data: ProfileUpdateWithoutDetailInformationInput!
  where: ProfileWhereInput
}

input ProfileUpdateToOneWithWhereWithoutIdentifiableInformationInput {
  data: ProfileUpdateWithoutIdentifiableInformationInput!
  where: ProfileWhereInput
}

input ProfileUpdateToOneWithWhereWithoutNotificationsInput {
  data: ProfileUpdateWithoutNotificationsInput!
  where: ProfileWhereInput
}

input ProfileUpdateToOneWithWhereWithoutPersonalInput {
  data: ProfileUpdateWithoutPersonalInput!
  where: ProfileWhereInput
}

input ProfileUpdateToOneWithWhereWithoutPhotosInput {
  data: ProfileUpdateWithoutPhotosInput!
  where: ProfileWhereInput
}

input ProfileUpdateToOneWithWhereWithoutRelationshipsInput {
  data: ProfileUpdateWithoutRelationshipsInput!
  where: ProfileWhereInput
}

input ProfileUpdateToOneWithWhereWithoutSearchesServiceInput {
  data: ProfileUpdateWithoutSearchesServiceInput!
  where: ProfileWhereInput
}

input ProfileUpdateToOneWithWhereWithoutSecuredDataKeysInput {
  data: ProfileUpdateWithoutSecuredDataKeysInput!
  where: ProfileWhereInput
}

input ProfileUpdateToOneWithWhereWithoutSettingsInput {
  data: ProfileUpdateWithoutSettingsInput!
  where: ProfileWhereInput
}

input ProfileUpdateToOneWithWhereWithoutStorysInput {
  data: ProfileUpdateWithoutStorysInput!
  where: ProfileWhereInput
}

input ProfileUpdateToOneWithWhereWithoutThemeManagerInput {
  data: ProfileUpdateWithoutThemeManagerInput!
  where: ProfileWhereInput
}

input ProfileUpdateToOneWithWhereWithoutVenueInput {
  data: ProfileUpdateWithoutVenueInput!
  where: ProfileWhereInput
}

input ProfileUpdateToOneWithWhereWithoutVoteInput {
  data: ProfileUpdateWithoutVoteInput!
  where: ProfileWhereInput
}

input ProfileUpdateWithWhereUniqueWithoutConversationsInput {
  data: ProfileUpdateWithoutConversationsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileUpdateWithWhereUniqueWithoutGroupsInput {
  data: ProfileUpdateWithoutGroupsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileUpdateWithoutConversationsInput {
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutCredentialsInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutDetailInformationInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutGroupsInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutIdentifiableInformationInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutNotificationsInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutPersonalInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutPhotosInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutRelationshipsInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutSearchesServiceInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutSecuredDataKeysInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutSettingsInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutStorysInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutThemeManagerInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutVenueInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Vote: VoteUpdateManyWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpdateWithoutVoteInput {
  Conversations: ConversationUpdateManyWithoutMembersNestedInput
  Credentials: CredentialsUpdateOneWithoutProfileNestedInput
  DetailInformation: DetailInformationUpdateOneWithoutProfileNestedInput
  DeviceManager: [String!]
  Groups: GroupUpdateManyWithoutProfileNestedInput
  IdentifiableInformation: IdentifiableInformationUpdateOneWithoutProfileNestedInput
  Notifications: NotificationsUpdateOneWithoutProfileNestedInput
  Personal: PersonalUpdateOneWithoutProfileNestedInput
  Photos: PhotoUpdateManyWithoutProfileNestedInput
  ProfileType: EnumProfileTypeFieldUpdateOperationsInput
  Relationships: RelationshipUpdateManyWithoutProfileNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutProfileNestedInput
  SecuredDataKeys: SecuredDataKeysUpdateManyWithoutProfileNestedInput
  Settings: SettingsUpdateOneWithoutProfileNestedInput
  Storys: StoryUpdateManyWithoutProfileNestedInput
  ThemeManager: ThemeManagerUpdateOneWithoutProfileNestedInput
  Venue: VenueUpdateOneWithoutProfileNestedInput
  bfsprofileid: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProfileUpsertWithWhereUniqueWithoutConversationsInput {
  create: ProfileCreateWithoutConversationsInput!
  update: ProfileUpdateWithoutConversationsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileUpsertWithWhereUniqueWithoutGroupsInput {
  create: ProfileCreateWithoutGroupsInput!
  update: ProfileUpdateWithoutGroupsInput!
  where: ProfileWhereUniqueInput!
}

input ProfileUpsertWithoutCredentialsInput {
  create: ProfileCreateWithoutCredentialsInput!
  update: ProfileUpdateWithoutCredentialsInput!
  where: ProfileWhereInput
}

input ProfileUpsertWithoutDetailInformationInput {
  create: ProfileCreateWithoutDetailInformationInput!
  update: ProfileUpdateWithoutDetailInformationInput!
  where: ProfileWhereInput
}

input ProfileUpsertWithoutIdentifiableInformationInput {
  create: ProfileCreateWithoutIdentifiableInformationInput!
  update: ProfileUpdateWithoutIdentifiableInformationInput!
  where: ProfileWhereInput
}

input ProfileUpsertWithoutNotificationsInput {
  create: ProfileCreateWithoutNotificationsInput!
  update: ProfileUpdateWithoutNotificationsInput!
  where: ProfileWhereInput
}

input ProfileUpsertWithoutPersonalInput {
  create: ProfileCreateWithoutPersonalInput!
  update: ProfileUpdateWithoutPersonalInput!
  where: ProfileWhereInput
}

input ProfileUpsertWithoutPhotosInput {
  create: ProfileCreateWithoutPhotosInput!
  update: ProfileUpdateWithoutPhotosInput!
  where: ProfileWhereInput
}

input ProfileUpsertWithoutRelationshipsInput {
  create: ProfileCreateWithoutRelationshipsInput!
  update: ProfileUpdateWithoutRelationshipsInput!
  where: ProfileWhereInput
}

input ProfileUpsertWithoutSearchesServiceInput {
  create: ProfileCreateWithoutSearchesServiceInput!
  update: ProfileUpdateWithoutSearchesServiceInput!
  where: ProfileWhereInput
}

input ProfileUpsertWithoutSecuredDataKeysInput {
  create: ProfileCreateWithoutSecuredDataKeysInput!
  update: ProfileUpdateWithoutSecuredDataKeysInput!
  where: ProfileWhereInput
}

input ProfileUpsertWithoutSettingsInput {
  create: ProfileCreateWithoutSettingsInput!
  update: ProfileUpdateWithoutSettingsInput!
  where: ProfileWhereInput
}

input ProfileUpsertWithoutStorysInput {
  create: ProfileCreateWithoutStorysInput!
  update: ProfileUpdateWithoutStorysInput!
  where: ProfileWhereInput
}

input ProfileUpsertWithoutThemeManagerInput {
  create: ProfileCreateWithoutThemeManagerInput!
  update: ProfileUpdateWithoutThemeManagerInput!
  where: ProfileWhereInput
}

input ProfileUpsertWithoutVenueInput {
  create: ProfileCreateWithoutVenueInput!
  update: ProfileUpdateWithoutVenueInput!
  where: ProfileWhereInput
}

input ProfileUpsertWithoutVoteInput {
  create: ProfileCreateWithoutVoteInput!
  update: ProfileUpdateWithoutVoteInput!
  where: ProfileWhereInput
}

type ProfileVenue {
  Credentials: Credentials
  DetailInformation: DetailInformation
  IdentifiableInformation: IdentifiableInformation
  ProfileType: ProfileType
  Relationships: [Relationship!]
  ThemeManager: ThemeManager
  Venue: Venue
  bfsprofileid: String
  createdAt: DateTime
  distanceInM: Int
  id: String
  photos: [Photo!]
  profilePhoto: Photo
  tonightStory: Story
  updatedAt: DateTime
}

input ProfileWhereInput {
  AND: [ProfileWhereInput!]
  Conversations: ConversationListRelationFilter
  Credentials: CredentialsWhereInput
  DetailInformation: DetailInformationWhereInput
  DeviceManager: StringNullableListFilter
  Groups: GroupListRelationFilter
  IdentifiableInformation: IdentifiableInformationWhereInput
  NOT: [ProfileWhereInput!]
  Notifications: NotificationsWhereInput
  OR: [ProfileWhereInput!]
  Personal: PersonalWhereInput
  Photos: PhotoListRelationFilter
  ProfileType: EnumProfileTypeFilter
  Relationships: RelationshipListRelationFilter
  SearchesService: SearchesServiceWhereInput
  SecuredDataKeys: SecuredDataKeysListRelationFilter
  Settings: SettingsWhereInput
  Storys: StoryListRelationFilter
  ThemeManager: ThemeManagerWhereInput
  Venue: VenueWhereInput
  Vote: VoteListRelationFilter
  bfsprofileid: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  updatedAt: DateTimeFilter
}

input ProfileWhereUniqueInput {
  AND: [ProfileWhereInput!]
  Conversations: ConversationListRelationFilter
  Credentials: CredentialsWhereInput
  DetailInformation: DetailInformationWhereInput
  DeviceManager: StringNullableListFilter
  Groups: GroupListRelationFilter
  IdentifiableInformation: IdentifiableInformationWhereInput
  NOT: [ProfileWhereInput!]
  Notifications: NotificationsWhereInput
  OR: [ProfileWhereInput!]
  Personal: PersonalWhereInput
  Photos: PhotoListRelationFilter
  ProfileType: EnumProfileTypeFilter
  Relationships: RelationshipListRelationFilter
  SearchesService: SearchesServiceWhereInput
  SecuredDataKeys: SecuredDataKeysListRelationFilter
  Settings: SettingsWhereInput
  Storys: StoryListRelationFilter
  ThemeManager: ThemeManagerWhereInput
  Venue: VenueWhereInput
  Vote: VoteListRelationFilter
  bfsprofileid: String
  createdAt: DateTimeFilter
  id: String
  updatedAt: DateTimeFilter
}

type ProfilesResponse {
  email: [Profile!]
  phone: [Profile!]
  username: [Profile!]
}

type PublicProfilePersonal {
  DetailInformation: DetailInformation
  IdentifiableInformation: IdentifiableInformation
  Personal: Personal
  ProfileType: ProfileType
  createdAt: DateTime
  friendStatus: RelationshipStatusResponse
  id: String
  profilePhoto: Photo
  relationship: NotificationFriendRequestStatusResponse
  tonightStory: Story
  updatedAt: DateTime
}

type PushToken {
  Device: Device
  createdAt: DateTime
  expoToken: String
  id: ID!
  isExpired: Boolean!
  receipts: [Json!]!
  token: String
  type: TokenType
  updatedAt: DateTime
}

input PushTokenCountOrderByAggregateInput {
  createdAt: SortOrder
  expoToken: SortOrder
  id: SortOrder
  isExpired: SortOrder
  receipts: SortOrder
  token: SortOrder
  type: SortOrder
  updatedAt: SortOrder
}

input PushTokenCreateInput {
  Device: DeviceCreateNestedOneWithoutPushTokenInput
  createdAt: DateTime
  expoToken: String
  id: String
  isExpired: Boolean
  receipts: [Json!]
  token: String
  type: TokenType
  updatedAt: DateTime
}

input PushTokenCreateManyInput {
  createdAt: DateTime
  expoToken: String
  id: String
  isExpired: Boolean
  receipts: [Json!]
  token: String
  type: TokenType
  updatedAt: DateTime
}

input PushTokenCreateNestedOneWithoutDeviceInput {
  connect: PushTokenWhereUniqueInput
  connectOrCreate: PushTokenCreateOrConnectWithoutDeviceInput
  create: PushTokenCreateWithoutDeviceInput
}

input PushTokenCreateOrConnectWithoutDeviceInput {
  create: PushTokenCreateWithoutDeviceInput!
  where: PushTokenWhereUniqueInput!
}

input PushTokenCreateWithoutDeviceInput {
  createdAt: DateTime
  expoToken: String
  id: String
  isExpired: Boolean
  receipts: [Json!]
  token: String
  type: TokenType
  updatedAt: DateTime
}

input PushTokenCreatereceiptsInput {
  set: [Json!]!
}

input PushTokenMaxOrderByAggregateInput {
  createdAt: SortOrder
  expoToken: SortOrder
  id: SortOrder
  isExpired: SortOrder
  token: SortOrder
  type: SortOrder
  updatedAt: SortOrder
}

input PushTokenMinOrderByAggregateInput {
  createdAt: SortOrder
  expoToken: SortOrder
  id: SortOrder
  isExpired: SortOrder
  token: SortOrder
  type: SortOrder
  updatedAt: SortOrder
}

input PushTokenNullableRelationFilter {
  is: PushTokenWhereInput
  isNot: PushTokenWhereInput
}

input PushTokenOrderByWithAggregationInput {
  _count: PushTokenCountOrderByAggregateInput
  _max: PushTokenMaxOrderByAggregateInput
  _min: PushTokenMinOrderByAggregateInput
  createdAt: SortOrder
  expoToken: SortOrder
  id: SortOrder
  isExpired: SortOrder
  receipts: SortOrder
  token: SortOrder
  type: SortOrder
  updatedAt: SortOrder
}

input PushTokenOrderByWithRelationInput {
  Device: DeviceOrderByWithRelationInput
  createdAt: SortOrder
  expoToken: SortOrder
  id: SortOrder
  isExpired: SortOrder
  receipts: SortOrder
  token: SortOrder
  type: SortOrder
  updatedAt: SortOrder
}

enum PushTokenScalarFieldEnum {
  createdAt
  expoToken
  id
  isExpired
  receipts
  token
  type
  updatedAt
}

input PushTokenScalarWhereWithAggregatesInput {
  AND: [PushTokenScalarWhereWithAggregatesInput!]
  NOT: [PushTokenScalarWhereWithAggregatesInput!]
  OR: [PushTokenScalarWhereWithAggregatesInput!]
  createdAt: DateTimeNullableWithAggregatesFilter
  expoToken: StringNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  isExpired: BoolWithAggregatesFilter
  receipts: JsonNullableListFilter
  token: StringNullableWithAggregatesFilter
  type: EnumTokenTypeNullableWithAggregatesFilter
  updatedAt: DateTimeNullableWithAggregatesFilter
}

input PushTokenUpdateInput {
  Device: DeviceUpdateOneWithoutPushTokenNestedInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  expoToken: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isExpired: BoolFieldUpdateOperationsInput
  receipts: [Json!]
  token: NullableStringFieldUpdateOperationsInput
  type: NullableEnumTokenTypeFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input PushTokenUpdateManyMutationInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  expoToken: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isExpired: BoolFieldUpdateOperationsInput
  receipts: [Json!]
  token: NullableStringFieldUpdateOperationsInput
  type: NullableEnumTokenTypeFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input PushTokenUpdateOneWithoutDeviceNestedInput {
  connect: PushTokenWhereUniqueInput
  connectOrCreate: PushTokenCreateOrConnectWithoutDeviceInput
  create: PushTokenCreateWithoutDeviceInput
  delete: PushTokenWhereInput
  disconnect: PushTokenWhereInput
  update: PushTokenUpdateToOneWithWhereWithoutDeviceInput
  upsert: PushTokenUpsertWithoutDeviceInput
}

input PushTokenUpdateToOneWithWhereWithoutDeviceInput {
  data: PushTokenUpdateWithoutDeviceInput!
  where: PushTokenWhereInput
}

input PushTokenUpdateWithoutDeviceInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  expoToken: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isExpired: BoolFieldUpdateOperationsInput
  receipts: [Json!]
  token: NullableStringFieldUpdateOperationsInput
  type: NullableEnumTokenTypeFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
}

input PushTokenUpdatereceiptsInput {
  push: Json
  set: [Json!]
}

input PushTokenUpsertWithoutDeviceInput {
  create: PushTokenCreateWithoutDeviceInput!
  update: PushTokenUpdateWithoutDeviceInput!
  where: PushTokenWhereInput
}

input PushTokenWhereInput {
  AND: [PushTokenWhereInput!]
  Device: DeviceWhereInput
  NOT: [PushTokenWhereInput!]
  OR: [PushTokenWhereInput!]
  createdAt: DateTimeNullableFilter
  expoToken: StringNullableFilter
  id: StringFilter
  isExpired: BoolFilter
  receipts: JsonNullableListFilter
  token: StringNullableFilter
  type: EnumTokenTypeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input PushTokenWhereUniqueInput {
  AND: [PushTokenWhereInput!]
  Device: DeviceWhereInput
  NOT: [PushTokenWhereInput!]
  OR: [PushTokenWhereInput!]
  createdAt: DateTimeNullableFilter
  expoToken: StringNullableFilter
  id: String
  isExpired: BoolFilter
  receipts: JsonNullableListFilter
  token: StringNullableFilter
  type: EnumTokenTypeNullableFilter
  updatedAt: DateTimeNullableFilter
}

type Query {
  H3IndexGrid(cell: String!, ringSize: Int! = 1): [String!]
  H3IndexLatLng(cell: String!): [Float!]
  authorizedProfiles(where: AuthorizedProfilesWhereInput!): AuthorizedProfilesResponseUnion
  checkPrivacyTermsDocumentUpdate: PrivacyTermsUpdateResponseUnion
  checkUsername(username: String!): Boolean
  emojimood(where: EmojimoodWhereUniqueInput!): Emojimood
  emojimoods: [Emojimood!]
  exploreSearch(search: String!): ExploreResponse
  findConversationByIdOrMembers(
    conversationId: String

    """This is a list of ProfileIds."""
    members: [String!]
  ): Conversation
  friendSearch(search: String!): [Personal!]
  friendsFromContacts(contact: [ContactInput!]!): String
  getADeviceManager: DeviceManagerDeviceProfilesResponseUnion
  getAllCitiesByState(countryIsoCode: String!, stateIsoCode: String!): OrganizedCityResponseObject
  getAllCountries: [CountryResponseObject!]
  getAllFriends: [Profile!]
  getAllStatesByCountry(countryIsoCode: String!): [StateResponseObject!]
  getAllThemes: [Theme!]
  getConversations: [Conversation!]
  getCurrentPushNotificationToken: PushToken
  getFriends: [PublicProfilePersonal!]
  getH3Index6VenueRecommendationById(id: String!, venuesProfileIds: [String!]): H3Index6VenueRecommendation
  getInterests: [Category!]
  getLiveVenueTotals(profileIdVenue: String): LiveVenueTotals
  getLiveVenueTotalsV2(profileIdVenue: String): VenueTotalsResponseUnion
  getNotifications: NotificationResponse
  getProfileThemeManager: ThemeManager
  getSecureFriendQRCodeData: String
  loginPassword(password: String!, username: String!): Boolean
  privacyTermsDocuments: LatestPrivacyAndTermsDocumentResponse
  profile(cursor: ProfileWhereUniqueInput, distinct: [ProfileScalarFieldEnum!], orderBy: [ProfileOrderByWithRelationInput!], skip: Int, take: Int, where: ProfileWhereInput): Profile
  profiles(cursor: ProfileWhereUniqueInput, distinct: [ProfileScalarFieldEnum!], orderBy: [ProfileOrderByWithRelationInput!], skip: Int, take: Int, where: ProfileWhereInput): [Profile!]
  publicProfile(cursor: ProfileWhereUniqueInput, distinct: [ProfileScalarFieldEnum!], orderBy: [ProfileOrderByWithRelationInput!], skip: Int, take: Int, where: ProfileWhereInput): PublicProfilePersonal
  publicVenue(currentLocationCoords: CoordsInput, cursor: ProfileWhereUniqueInput, distinct: [ProfileScalarFieldEnum!], orderBy: [ProfileOrderByWithRelationInput!], skip: Int, take: Int, where: ProfileWhereInput): ProfileVenue
  refreshDeviceManager: AuthenticationResponseUnion
  sendAuthenticatorDeviceOwnerCode: Boolean
  venue(cursor: VenueWhereUniqueInput, distinct: [VenueScalarFieldEnum!], orderBy: [VenueOrderByWithRelationInput!], skip: Int, take: Int, where: VenueWhereInput): Venue
  venues(cursor: VenueWhereUniqueInput, distinct: [VenueScalarFieldEnum!], orderBy: [VenueOrderByWithRelationInput!], skip: Int, take: Int, where: VenueWhereInput): [Venue!]!
  venuesNearby(cityName: String, countryIsoCode: String!, kRing: Int = 1, searchAreaCoords: CoordsInput!, stateIsoCode: String!): RecommendationResponseUnion
}

enum QueryMode {
  default
  insensitive
}

union RecommendationResponseUnion = ComingAreaResponse | Error | VenuesNearbyResponse

type RefreshToken {
  DeviceProfile: AuthorizationDeviceProfile
  DeviceProfileId: String
  createdAt: DateTime!
  id: ID!
  token: String!
  updatedAt: DateTime!
}

input RefreshTokenAvgOrderByAggregateInput {
  id: SortOrder
}

input RefreshTokenCountOrderByAggregateInput {
  DeviceProfileId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  token: SortOrder
  updatedAt: SortOrder
}

input RefreshTokenCreateInput {
  DeviceProfile: DeviceProfileCreateNestedOneWithoutRefreshTokenInput
  createdAt: DateTime
  token: String!
  updatedAt: DateTime
}

input RefreshTokenCreateManyInput {
  DeviceProfileId: String
  createdAt: DateTime
  id: Int
  token: String!
  updatedAt: DateTime
}

input RefreshTokenCreateNestedOneWithoutDeviceProfileInput {
  connect: RefreshTokenWhereUniqueInput
  connectOrCreate: RefreshTokenCreateOrConnectWithoutDeviceProfileInput
  create: RefreshTokenCreateWithoutDeviceProfileInput
}

input RefreshTokenCreateOrConnectWithoutDeviceProfileInput {
  create: RefreshTokenCreateWithoutDeviceProfileInput!
  where: RefreshTokenWhereUniqueInput!
}

input RefreshTokenCreateWithoutDeviceProfileInput {
  createdAt: DateTime
  token: String!
  updatedAt: DateTime
}

input RefreshTokenMaxOrderByAggregateInput {
  DeviceProfileId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  token: SortOrder
  updatedAt: SortOrder
}

input RefreshTokenMinOrderByAggregateInput {
  DeviceProfileId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  token: SortOrder
  updatedAt: SortOrder
}

input RefreshTokenNullableRelationFilter {
  is: RefreshTokenWhereInput
  isNot: RefreshTokenWhereInput
}

input RefreshTokenOrderByWithAggregationInput {
  DeviceProfileId: SortOrder
  _avg: RefreshTokenAvgOrderByAggregateInput
  _count: RefreshTokenCountOrderByAggregateInput
  _max: RefreshTokenMaxOrderByAggregateInput
  _min: RefreshTokenMinOrderByAggregateInput
  _sum: RefreshTokenSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  token: SortOrder
  updatedAt: SortOrder
}

input RefreshTokenOrderByWithRelationInput {
  DeviceProfile: DeviceProfileOrderByWithRelationInput
  DeviceProfileId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  token: SortOrder
  updatedAt: SortOrder
}

enum RefreshTokenScalarFieldEnum {
  DeviceProfileId
  createdAt
  id
  token
  updatedAt
}

input RefreshTokenScalarWhereWithAggregatesInput {
  AND: [RefreshTokenScalarWhereWithAggregatesInput!]
  DeviceProfileId: StringNullableWithAggregatesFilter
  NOT: [RefreshTokenScalarWhereWithAggregatesInput!]
  OR: [RefreshTokenScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  token: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input RefreshTokenSumOrderByAggregateInput {
  id: SortOrder
}

input RefreshTokenUpdateInput {
  DeviceProfile: DeviceProfileUpdateOneWithoutRefreshTokenNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RefreshTokenUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RefreshTokenUpdateOneWithoutDeviceProfileNestedInput {
  connect: RefreshTokenWhereUniqueInput
  connectOrCreate: RefreshTokenCreateOrConnectWithoutDeviceProfileInput
  create: RefreshTokenCreateWithoutDeviceProfileInput
  delete: RefreshTokenWhereInput
  disconnect: RefreshTokenWhereInput
  update: RefreshTokenUpdateToOneWithWhereWithoutDeviceProfileInput
  upsert: RefreshTokenUpsertWithoutDeviceProfileInput
}

input RefreshTokenUpdateToOneWithWhereWithoutDeviceProfileInput {
  data: RefreshTokenUpdateWithoutDeviceProfileInput!
  where: RefreshTokenWhereInput
}

input RefreshTokenUpdateWithoutDeviceProfileInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RefreshTokenUpsertWithoutDeviceProfileInput {
  create: RefreshTokenCreateWithoutDeviceProfileInput!
  update: RefreshTokenUpdateWithoutDeviceProfileInput!
  where: RefreshTokenWhereInput
}

input RefreshTokenWhereInput {
  AND: [RefreshTokenWhereInput!]
  DeviceProfile: DeviceProfileWhereInput
  DeviceProfileId: StringNullableFilter
  NOT: [RefreshTokenWhereInput!]
  OR: [RefreshTokenWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  token: StringFilter
  updatedAt: DateTimeFilter
}

input RefreshTokenWhereUniqueInput {
  AND: [RefreshTokenWhereInput!]
  DeviceProfile: DeviceProfileWhereInput
  DeviceProfileId: String
  NOT: [RefreshTokenWhereInput!]
  OR: [RefreshTokenWhereInput!]
  createdAt: DateTimeFilter
  id: Int
  token: String
  updatedAt: DateTimeFilter
}

type Relationship {
  Profile: Profile
  RelationshipStatus: [RelationshipStatus!]!
  createdAt: DateTime!
  friendProfile: Profile
  friendProfileId: String!
  id: ID!
  profileId: String
  updatedAt: DateTime!
  venueMetAt: String
}

input RelationshipCountOrderByAggregateInput {
  RelationshipStatus: SortOrder
  createdAt: SortOrder
  friendProfileId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  venueMetAt: SortOrder
}

input RelationshipCreateInput {
  Profile: ProfileCreateNestedOneWithoutRelationshipsInput
  RelationshipStatus: [RelationshipStatus!]
  createdAt: DateTime
  friendProfileId: String!
  id: String
  updatedAt: DateTime
  venueMetAt: String
}

input RelationshipCreateManyInput {
  RelationshipStatus: [RelationshipStatus!]
  createdAt: DateTime
  friendProfileId: String!
  id: String
  profileId: String
  updatedAt: DateTime
  venueMetAt: String
}

input RelationshipCreateManyProfileInput {
  RelationshipStatus: [RelationshipStatus!]
  createdAt: DateTime
  friendProfileId: String!
  id: String
  updatedAt: DateTime
  venueMetAt: String
}

input RelationshipCreateManyProfileInputEnvelope {
  data: [RelationshipCreateManyProfileInput!]!
  skipDuplicates: Boolean
}

input RelationshipCreateNestedManyWithoutProfileInput {
  connect: [RelationshipWhereUniqueInput!]
  connectOrCreate: [RelationshipCreateOrConnectWithoutProfileInput!]
  create: [RelationshipCreateWithoutProfileInput!]
  createMany: RelationshipCreateManyProfileInputEnvelope
}

input RelationshipCreateOrConnectWithoutProfileInput {
  create: RelationshipCreateWithoutProfileInput!
  where: RelationshipWhereUniqueInput!
}

input RelationshipCreateRelationshipStatusInput {
  set: [RelationshipStatus!]!
}

input RelationshipCreateWithoutProfileInput {
  RelationshipStatus: [RelationshipStatus!]
  createdAt: DateTime
  friendProfileId: String!
  id: String
  updatedAt: DateTime
  venueMetAt: String
}

input RelationshipListRelationFilter {
  every: RelationshipWhereInput
  none: RelationshipWhereInput
  some: RelationshipWhereInput
}

input RelationshipMaxOrderByAggregateInput {
  createdAt: SortOrder
  friendProfileId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  venueMetAt: SortOrder
}

input RelationshipMinOrderByAggregateInput {
  createdAt: SortOrder
  friendProfileId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  venueMetAt: SortOrder
}

input RelationshipOrderByRelationAggregateInput {
  _count: SortOrder
}

input RelationshipOrderByWithAggregationInput {
  RelationshipStatus: SortOrder
  _count: RelationshipCountOrderByAggregateInput
  _max: RelationshipMaxOrderByAggregateInput
  _min: RelationshipMinOrderByAggregateInput
  createdAt: SortOrder
  friendProfileId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  venueMetAt: SortOrder
}

input RelationshipOrderByWithRelationInput {
  Profile: ProfileOrderByWithRelationInput
  RelationshipStatus: SortOrder
  createdAt: SortOrder
  friendProfileId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  venueMetAt: SortOrder
}

enum RelationshipScalarFieldEnum {
  RelationshipStatus
  createdAt
  friendProfileId
  id
  profileId
  updatedAt
  venueMetAt
}

input RelationshipScalarWhereInput {
  AND: [RelationshipScalarWhereInput!]
  NOT: [RelationshipScalarWhereInput!]
  OR: [RelationshipScalarWhereInput!]
  RelationshipStatus: EnumRelationshipStatusNullableListFilter
  createdAt: DateTimeFilter
  friendProfileId: StringFilter
  id: StringFilter
  profileId: StringNullableFilter
  updatedAt: DateTimeFilter
  venueMetAt: StringNullableFilter
}

input RelationshipScalarWhereWithAggregatesInput {
  AND: [RelationshipScalarWhereWithAggregatesInput!]
  NOT: [RelationshipScalarWhereWithAggregatesInput!]
  OR: [RelationshipScalarWhereWithAggregatesInput!]
  RelationshipStatus: EnumRelationshipStatusNullableListFilter
  createdAt: DateTimeWithAggregatesFilter
  friendProfileId: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  profileId: StringNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  venueMetAt: StringNullableWithAggregatesFilter
}

enum RelationshipStatus {
  DATING
  FRIENDS
}

enum RelationshipStatusResponse {
  BLOCKED
  DATING
  FRIENDS
  NOTFRIENDS
  REQUEST_RECEIVED
  REQUEST_SENT
}

input RelationshipUpdateInput {
  Profile: ProfileUpdateOneWithoutRelationshipsNestedInput
  RelationshipStatus: [RelationshipStatus!]
  createdAt: DateTimeFieldUpdateOperationsInput
  friendProfileId: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venueMetAt: NullableStringFieldUpdateOperationsInput
}

input RelationshipUpdateManyMutationInput {
  RelationshipStatus: [RelationshipStatus!]
  createdAt: DateTimeFieldUpdateOperationsInput
  friendProfileId: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venueMetAt: NullableStringFieldUpdateOperationsInput
}

input RelationshipUpdateManyWithWhereWithoutProfileInput {
  data: RelationshipUpdateManyMutationInput!
  where: RelationshipScalarWhereInput!
}

input RelationshipUpdateManyWithoutProfileNestedInput {
  connect: [RelationshipWhereUniqueInput!]
  connectOrCreate: [RelationshipCreateOrConnectWithoutProfileInput!]
  create: [RelationshipCreateWithoutProfileInput!]
  createMany: RelationshipCreateManyProfileInputEnvelope
  delete: [RelationshipWhereUniqueInput!]
  deleteMany: [RelationshipScalarWhereInput!]
  disconnect: [RelationshipWhereUniqueInput!]
  set: [RelationshipWhereUniqueInput!]
  update: [RelationshipUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [RelationshipUpdateManyWithWhereWithoutProfileInput!]
  upsert: [RelationshipUpsertWithWhereUniqueWithoutProfileInput!]
}

input RelationshipUpdateRelationshipStatusInput {
  push: [RelationshipStatus!]
  set: [RelationshipStatus!]
}

input RelationshipUpdateWithWhereUniqueWithoutProfileInput {
  data: RelationshipUpdateWithoutProfileInput!
  where: RelationshipWhereUniqueInput!
}

input RelationshipUpdateWithoutProfileInput {
  RelationshipStatus: [RelationshipStatus!]
  createdAt: DateTimeFieldUpdateOperationsInput
  friendProfileId: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  venueMetAt: NullableStringFieldUpdateOperationsInput
}

input RelationshipUpsertWithWhereUniqueWithoutProfileInput {
  create: RelationshipCreateWithoutProfileInput!
  update: RelationshipUpdateWithoutProfileInput!
  where: RelationshipWhereUniqueInput!
}

input RelationshipWhereInput {
  AND: [RelationshipWhereInput!]
  NOT: [RelationshipWhereInput!]
  OR: [RelationshipWhereInput!]
  Profile: ProfileWhereInput
  RelationshipStatus: EnumRelationshipStatusNullableListFilter
  createdAt: DateTimeFilter
  friendProfileId: StringFilter
  id: StringFilter
  profileId: StringNullableFilter
  updatedAt: DateTimeFilter
  venueMetAt: StringNullableFilter
}

input RelationshipWhereUniqueInput {
  AND: [RelationshipWhereInput!]
  NOT: [RelationshipWhereInput!]
  OR: [RelationshipWhereInput!]
  Profile: ProfileWhereInput
  RelationshipStatus: EnumRelationshipStatusNullableListFilter
  createdAt: DateTimeFilter
  friendProfileId: StringFilter
  id: String
  profileId: StringNullableFilter
  updatedAt: DateTimeFilter
  venueMetAt: StringNullableFilter
}

type Request {
  NotificationFriendRequest: [Notifications!]
  NotificationMessage: [Notifications!]
  NotificationType: String
  createdAt: DateTime
  id: ID
  recievers: [RequestReceiver!]
  senderProfile: Profile
  senderProfileId: String
  updatedAt: DateTime
}

input RequestCountOrderByAggregateInput {
  NotificationType: SortOrder
  createdAt: SortOrder
  id: SortOrder
  messageId: SortOrder
  senderProfileId: SortOrder
  updatedAt: SortOrder
}

input RequestCreateInput {
  Message: MessageCreateNestedOneWithoutRequestInput
  NotificationFriendRequest: NotificationsCreateNestedManyWithoutFriendRequestsInput
  NotificationMessage: NotificationsCreateNestedManyWithoutMessageRequestsInput
  NotificationType: NotificationType
  createdAt: DateTime
  id: String
  receivers: RequestReceiverCreateNestedManyWithoutRequestInput
  senderProfileId: String!
  updatedAt: DateTime
}

input RequestCreateManyInput {
  NotificationType: NotificationType
  createdAt: DateTime
  id: String
  messageId: String
  senderProfileId: String!
  updatedAt: DateTime
}

input RequestCreateNestedManyWithoutNotificationFriendRequestInput {
  connect: [RequestWhereUniqueInput!]
  connectOrCreate: [RequestCreateOrConnectWithoutNotificationFriendRequestInput!]
  create: [RequestCreateWithoutNotificationFriendRequestInput!]
}

input RequestCreateNestedManyWithoutNotificationMessageInput {
  connect: [RequestWhereUniqueInput!]
  connectOrCreate: [RequestCreateOrConnectWithoutNotificationMessageInput!]
  create: [RequestCreateWithoutNotificationMessageInput!]
}

input RequestCreateNestedOneWithoutMessageInput {
  connect: RequestWhereUniqueInput
  connectOrCreate: RequestCreateOrConnectWithoutMessageInput
  create: RequestCreateWithoutMessageInput
}

input RequestCreateNestedOneWithoutReceiversInput {
  connect: RequestWhereUniqueInput
  connectOrCreate: RequestCreateOrConnectWithoutReceiversInput
  create: RequestCreateWithoutReceiversInput
}

input RequestCreateOrConnectWithoutMessageInput {
  create: RequestCreateWithoutMessageInput!
  where: RequestWhereUniqueInput!
}

input RequestCreateOrConnectWithoutNotificationFriendRequestInput {
  create: RequestCreateWithoutNotificationFriendRequestInput!
  where: RequestWhereUniqueInput!
}

input RequestCreateOrConnectWithoutNotificationMessageInput {
  create: RequestCreateWithoutNotificationMessageInput!
  where: RequestWhereUniqueInput!
}

input RequestCreateOrConnectWithoutReceiversInput {
  create: RequestCreateWithoutReceiversInput!
  where: RequestWhereUniqueInput!
}

input RequestCreateWithoutMessageInput {
  NotificationFriendRequest: NotificationsCreateNestedManyWithoutFriendRequestsInput
  NotificationMessage: NotificationsCreateNestedManyWithoutMessageRequestsInput
  NotificationType: NotificationType
  createdAt: DateTime
  id: String
  receivers: RequestReceiverCreateNestedManyWithoutRequestInput
  senderProfileId: String!
  updatedAt: DateTime
}

input RequestCreateWithoutNotificationFriendRequestInput {
  Message: MessageCreateNestedOneWithoutRequestInput
  NotificationMessage: NotificationsCreateNestedManyWithoutMessageRequestsInput
  NotificationType: NotificationType
  createdAt: DateTime
  id: String
  receivers: RequestReceiverCreateNestedManyWithoutRequestInput
  senderProfileId: String!
  updatedAt: DateTime
}

input RequestCreateWithoutNotificationMessageInput {
  Message: MessageCreateNestedOneWithoutRequestInput
  NotificationFriendRequest: NotificationsCreateNestedManyWithoutFriendRequestsInput
  NotificationType: NotificationType
  createdAt: DateTime
  id: String
  receivers: RequestReceiverCreateNestedManyWithoutRequestInput
  senderProfileId: String!
  updatedAt: DateTime
}

input RequestCreateWithoutReceiversInput {
  Message: MessageCreateNestedOneWithoutRequestInput
  NotificationFriendRequest: NotificationsCreateNestedManyWithoutFriendRequestsInput
  NotificationMessage: NotificationsCreateNestedManyWithoutMessageRequestsInput
  NotificationType: NotificationType
  createdAt: DateTime
  id: String
  senderProfileId: String!
  updatedAt: DateTime
}

input RequestListRelationFilter {
  every: RequestWhereInput
  none: RequestWhereInput
  some: RequestWhereInput
}

input RequestMaxOrderByAggregateInput {
  NotificationType: SortOrder
  createdAt: SortOrder
  id: SortOrder
  messageId: SortOrder
  senderProfileId: SortOrder
  updatedAt: SortOrder
}

input RequestMinOrderByAggregateInput {
  NotificationType: SortOrder
  createdAt: SortOrder
  id: SortOrder
  messageId: SortOrder
  senderProfileId: SortOrder
  updatedAt: SortOrder
}

input RequestNullableRelationFilter {
  is: RequestWhereInput
  isNot: RequestWhereInput
}

input RequestOrderByRelationAggregateInput {
  _count: SortOrder
}

input RequestOrderByWithAggregationInput {
  NotificationType: SortOrder
  _count: RequestCountOrderByAggregateInput
  _max: RequestMaxOrderByAggregateInput
  _min: RequestMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  messageId: SortOrder
  senderProfileId: SortOrder
  updatedAt: SortOrder
}

input RequestOrderByWithRelationInput {
  Message: MessageOrderByWithRelationInput
  NotificationFriendRequest: NotificationsOrderByRelationAggregateInput
  NotificationMessage: NotificationsOrderByRelationAggregateInput
  NotificationType: SortOrder
  createdAt: SortOrder
  id: SortOrder
  messageId: SortOrder
  receivers: RequestReceiverOrderByRelationAggregateInput
  senderProfileId: SortOrder
  updatedAt: SortOrder
}

type RequestReceiver {
  NotificationStatus: NotificationStatus
  Profile: Profile
  id: ID
  notificationStatusId: String
  profileId: String
  requestId: String
}

input RequestReceiverCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  notificationStatusId: SortOrder
  profileId: SortOrder
  requestId: SortOrder
  updatedAt: SortOrder
}

input RequestReceiverCreateInput {
  NotificationStatus: NotificationStatusCreateNestedOneWithoutRequestReceiverInput!
  Request: RequestCreateNestedOneWithoutReceiversInput
  createdAt: DateTime
  id: String
  profileId: String!
  updatedAt: DateTime
}

input RequestReceiverCreateManyInput {
  createdAt: DateTime
  id: String
  notificationStatusId: String!
  profileId: String!
  requestId: String
  updatedAt: DateTime
}

input RequestReceiverCreateManyRequestInput {
  createdAt: DateTime
  id: String
  notificationStatusId: String!
  profileId: String!
  updatedAt: DateTime
}

input RequestReceiverCreateManyRequestInputEnvelope {
  data: [RequestReceiverCreateManyRequestInput!]!
  skipDuplicates: Boolean
}

input RequestReceiverCreateNestedManyWithoutRequestInput {
  connect: [RequestReceiverWhereUniqueInput!]
  connectOrCreate: [RequestReceiverCreateOrConnectWithoutRequestInput!]
  create: [RequestReceiverCreateWithoutRequestInput!]
  createMany: RequestReceiverCreateManyRequestInputEnvelope
}

input RequestReceiverCreateNestedOneWithoutNotificationStatusInput {
  connect: RequestReceiverWhereUniqueInput
  connectOrCreate: RequestReceiverCreateOrConnectWithoutNotificationStatusInput
  create: RequestReceiverCreateWithoutNotificationStatusInput
}

input RequestReceiverCreateOrConnectWithoutNotificationStatusInput {
  create: RequestReceiverCreateWithoutNotificationStatusInput!
  where: RequestReceiverWhereUniqueInput!
}

input RequestReceiverCreateOrConnectWithoutRequestInput {
  create: RequestReceiverCreateWithoutRequestInput!
  where: RequestReceiverWhereUniqueInput!
}

input RequestReceiverCreateWithoutNotificationStatusInput {
  Request: RequestCreateNestedOneWithoutReceiversInput
  createdAt: DateTime
  id: String
  profileId: String!
  updatedAt: DateTime
}

input RequestReceiverCreateWithoutRequestInput {
  NotificationStatus: NotificationStatusCreateNestedOneWithoutRequestReceiverInput!
  createdAt: DateTime
  id: String
  profileId: String!
  updatedAt: DateTime
}

input RequestReceiverListRelationFilter {
  every: RequestReceiverWhereInput
  none: RequestReceiverWhereInput
  some: RequestReceiverWhereInput
}

input RequestReceiverMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  notificationStatusId: SortOrder
  profileId: SortOrder
  requestId: SortOrder
  updatedAt: SortOrder
}

input RequestReceiverMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  notificationStatusId: SortOrder
  profileId: SortOrder
  requestId: SortOrder
  updatedAt: SortOrder
}

input RequestReceiverNullableRelationFilter {
  is: RequestReceiverWhereInput
  isNot: RequestReceiverWhereInput
}

input RequestReceiverOrderByRelationAggregateInput {
  _count: SortOrder
}

input RequestReceiverOrderByWithAggregationInput {
  _count: RequestReceiverCountOrderByAggregateInput
  _max: RequestReceiverMaxOrderByAggregateInput
  _min: RequestReceiverMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  notificationStatusId: SortOrder
  profileId: SortOrder
  requestId: SortOrder
  updatedAt: SortOrder
}

input RequestReceiverOrderByWithRelationInput {
  NotificationStatus: NotificationStatusOrderByWithRelationInput
  Request: RequestOrderByWithRelationInput
  createdAt: SortOrder
  id: SortOrder
  notificationStatusId: SortOrder
  profileId: SortOrder
  requestId: SortOrder
  updatedAt: SortOrder
}

enum RequestReceiverScalarFieldEnum {
  createdAt
  id
  notificationStatusId
  profileId
  requestId
  updatedAt
}

input RequestReceiverScalarWhereInput {
  AND: [RequestReceiverScalarWhereInput!]
  NOT: [RequestReceiverScalarWhereInput!]
  OR: [RequestReceiverScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  notificationStatusId: StringFilter
  profileId: StringFilter
  requestId: StringNullableFilter
  updatedAt: DateTimeFilter
}

input RequestReceiverScalarWhereWithAggregatesInput {
  AND: [RequestReceiverScalarWhereWithAggregatesInput!]
  NOT: [RequestReceiverScalarWhereWithAggregatesInput!]
  OR: [RequestReceiverScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  notificationStatusId: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  requestId: StringNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input RequestReceiverUpdateInput {
  NotificationStatus: NotificationStatusUpdateOneRequiredWithoutRequestReceiverNestedInput
  Request: RequestUpdateOneWithoutReceiversNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  profileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RequestReceiverUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  profileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RequestReceiverUpdateManyWithWhereWithoutRequestInput {
  data: RequestReceiverUpdateManyMutationInput!
  where: RequestReceiverScalarWhereInput!
}

input RequestReceiverUpdateManyWithoutRequestNestedInput {
  connect: [RequestReceiverWhereUniqueInput!]
  connectOrCreate: [RequestReceiverCreateOrConnectWithoutRequestInput!]
  create: [RequestReceiverCreateWithoutRequestInput!]
  createMany: RequestReceiverCreateManyRequestInputEnvelope
  delete: [RequestReceiverWhereUniqueInput!]
  deleteMany: [RequestReceiverScalarWhereInput!]
  disconnect: [RequestReceiverWhereUniqueInput!]
  set: [RequestReceiverWhereUniqueInput!]
  update: [RequestReceiverUpdateWithWhereUniqueWithoutRequestInput!]
  updateMany: [RequestReceiverUpdateManyWithWhereWithoutRequestInput!]
  upsert: [RequestReceiverUpsertWithWhereUniqueWithoutRequestInput!]
}

input RequestReceiverUpdateOneWithoutNotificationStatusNestedInput {
  connect: RequestReceiverWhereUniqueInput
  connectOrCreate: RequestReceiverCreateOrConnectWithoutNotificationStatusInput
  create: RequestReceiverCreateWithoutNotificationStatusInput
  delete: RequestReceiverWhereInput
  disconnect: RequestReceiverWhereInput
  update: RequestReceiverUpdateToOneWithWhereWithoutNotificationStatusInput
  upsert: RequestReceiverUpsertWithoutNotificationStatusInput
}

input RequestReceiverUpdateToOneWithWhereWithoutNotificationStatusInput {
  data: RequestReceiverUpdateWithoutNotificationStatusInput!
  where: RequestReceiverWhereInput
}

input RequestReceiverUpdateWithWhereUniqueWithoutRequestInput {
  data: RequestReceiverUpdateWithoutRequestInput!
  where: RequestReceiverWhereUniqueInput!
}

input RequestReceiverUpdateWithoutNotificationStatusInput {
  Request: RequestUpdateOneWithoutReceiversNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  profileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RequestReceiverUpdateWithoutRequestInput {
  NotificationStatus: NotificationStatusUpdateOneRequiredWithoutRequestReceiverNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  profileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RequestReceiverUpsertWithWhereUniqueWithoutRequestInput {
  create: RequestReceiverCreateWithoutRequestInput!
  update: RequestReceiverUpdateWithoutRequestInput!
  where: RequestReceiverWhereUniqueInput!
}

input RequestReceiverUpsertWithoutNotificationStatusInput {
  create: RequestReceiverCreateWithoutNotificationStatusInput!
  update: RequestReceiverUpdateWithoutNotificationStatusInput!
  where: RequestReceiverWhereInput
}

input RequestReceiverWhereInput {
  AND: [RequestReceiverWhereInput!]
  NOT: [RequestReceiverWhereInput!]
  NotificationStatus: NotificationStatusWhereInput
  OR: [RequestReceiverWhereInput!]
  Request: RequestWhereInput
  createdAt: DateTimeFilter
  id: StringFilter
  notificationStatusId: StringFilter
  profileId: StringFilter
  requestId: StringNullableFilter
  updatedAt: DateTimeFilter
}

input RequestReceiverWhereUniqueInput {
  AND: [RequestReceiverWhereInput!]
  NOT: [RequestReceiverWhereInput!]
  NotificationStatus: NotificationStatusWhereInput
  OR: [RequestReceiverWhereInput!]
  Request: RequestWhereInput
  createdAt: DateTimeFilter
  id: String
  notificationStatusId: String
  profileId: StringFilter
  requestId: StringNullableFilter
  updatedAt: DateTimeFilter
}

enum RequestScalarFieldEnum {
  NotificationType
  createdAt
  id
  messageId
  senderProfileId
  updatedAt
}

input RequestScalarWhereInput {
  AND: [RequestScalarWhereInput!]
  NOT: [RequestScalarWhereInput!]
  NotificationType: EnumNotificationTypeFilter
  OR: [RequestScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  messageId: StringNullableFilter
  senderProfileId: StringFilter
  updatedAt: DateTimeFilter
}

input RequestScalarWhereWithAggregatesInput {
  AND: [RequestScalarWhereWithAggregatesInput!]
  NOT: [RequestScalarWhereWithAggregatesInput!]
  NotificationType: EnumNotificationTypeWithAggregatesFilter
  OR: [RequestScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  messageId: StringNullableWithAggregatesFilter
  senderProfileId: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input RequestUpdateInput {
  Message: MessageUpdateOneWithoutRequestNestedInput
  NotificationFriendRequest: NotificationsUpdateManyWithoutFriendRequestsNestedInput
  NotificationMessage: NotificationsUpdateManyWithoutMessageRequestsNestedInput
  NotificationType: EnumNotificationTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  receivers: RequestReceiverUpdateManyWithoutRequestNestedInput
  senderProfileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RequestUpdateManyMutationInput {
  NotificationType: EnumNotificationTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  senderProfileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RequestUpdateManyWithWhereWithoutNotificationFriendRequestInput {
  data: RequestUpdateManyMutationInput!
  where: RequestScalarWhereInput!
}

input RequestUpdateManyWithWhereWithoutNotificationMessageInput {
  data: RequestUpdateManyMutationInput!
  where: RequestScalarWhereInput!
}

input RequestUpdateManyWithoutNotificationFriendRequestNestedInput {
  connect: [RequestWhereUniqueInput!]
  connectOrCreate: [RequestCreateOrConnectWithoutNotificationFriendRequestInput!]
  create: [RequestCreateWithoutNotificationFriendRequestInput!]
  delete: [RequestWhereUniqueInput!]
  deleteMany: [RequestScalarWhereInput!]
  disconnect: [RequestWhereUniqueInput!]
  set: [RequestWhereUniqueInput!]
  update: [RequestUpdateWithWhereUniqueWithoutNotificationFriendRequestInput!]
  updateMany: [RequestUpdateManyWithWhereWithoutNotificationFriendRequestInput!]
  upsert: [RequestUpsertWithWhereUniqueWithoutNotificationFriendRequestInput!]
}

input RequestUpdateManyWithoutNotificationMessageNestedInput {
  connect: [RequestWhereUniqueInput!]
  connectOrCreate: [RequestCreateOrConnectWithoutNotificationMessageInput!]
  create: [RequestCreateWithoutNotificationMessageInput!]
  delete: [RequestWhereUniqueInput!]
  deleteMany: [RequestScalarWhereInput!]
  disconnect: [RequestWhereUniqueInput!]
  set: [RequestWhereUniqueInput!]
  update: [RequestUpdateWithWhereUniqueWithoutNotificationMessageInput!]
  updateMany: [RequestUpdateManyWithWhereWithoutNotificationMessageInput!]
  upsert: [RequestUpsertWithWhereUniqueWithoutNotificationMessageInput!]
}

input RequestUpdateOneWithoutMessageNestedInput {
  connect: RequestWhereUniqueInput
  connectOrCreate: RequestCreateOrConnectWithoutMessageInput
  create: RequestCreateWithoutMessageInput
  delete: RequestWhereInput
  disconnect: RequestWhereInput
  update: RequestUpdateToOneWithWhereWithoutMessageInput
  upsert: RequestUpsertWithoutMessageInput
}

input RequestUpdateOneWithoutReceiversNestedInput {
  connect: RequestWhereUniqueInput
  connectOrCreate: RequestCreateOrConnectWithoutReceiversInput
  create: RequestCreateWithoutReceiversInput
  delete: RequestWhereInput
  disconnect: RequestWhereInput
  update: RequestUpdateToOneWithWhereWithoutReceiversInput
  upsert: RequestUpsertWithoutReceiversInput
}

input RequestUpdateToOneWithWhereWithoutMessageInput {
  data: RequestUpdateWithoutMessageInput!
  where: RequestWhereInput
}

input RequestUpdateToOneWithWhereWithoutReceiversInput {
  data: RequestUpdateWithoutReceiversInput!
  where: RequestWhereInput
}

input RequestUpdateWithWhereUniqueWithoutNotificationFriendRequestInput {
  data: RequestUpdateWithoutNotificationFriendRequestInput!
  where: RequestWhereUniqueInput!
}

input RequestUpdateWithWhereUniqueWithoutNotificationMessageInput {
  data: RequestUpdateWithoutNotificationMessageInput!
  where: RequestWhereUniqueInput!
}

input RequestUpdateWithoutMessageInput {
  NotificationFriendRequest: NotificationsUpdateManyWithoutFriendRequestsNestedInput
  NotificationMessage: NotificationsUpdateManyWithoutMessageRequestsNestedInput
  NotificationType: EnumNotificationTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  receivers: RequestReceiverUpdateManyWithoutRequestNestedInput
  senderProfileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RequestUpdateWithoutNotificationFriendRequestInput {
  Message: MessageUpdateOneWithoutRequestNestedInput
  NotificationMessage: NotificationsUpdateManyWithoutMessageRequestsNestedInput
  NotificationType: EnumNotificationTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  receivers: RequestReceiverUpdateManyWithoutRequestNestedInput
  senderProfileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RequestUpdateWithoutNotificationMessageInput {
  Message: MessageUpdateOneWithoutRequestNestedInput
  NotificationFriendRequest: NotificationsUpdateManyWithoutFriendRequestsNestedInput
  NotificationType: EnumNotificationTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  receivers: RequestReceiverUpdateManyWithoutRequestNestedInput
  senderProfileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RequestUpdateWithoutReceiversInput {
  Message: MessageUpdateOneWithoutRequestNestedInput
  NotificationFriendRequest: NotificationsUpdateManyWithoutFriendRequestsNestedInput
  NotificationMessage: NotificationsUpdateManyWithoutMessageRequestsNestedInput
  NotificationType: EnumNotificationTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  senderProfileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RequestUpsertWithWhereUniqueWithoutNotificationFriendRequestInput {
  create: RequestCreateWithoutNotificationFriendRequestInput!
  update: RequestUpdateWithoutNotificationFriendRequestInput!
  where: RequestWhereUniqueInput!
}

input RequestUpsertWithWhereUniqueWithoutNotificationMessageInput {
  create: RequestCreateWithoutNotificationMessageInput!
  update: RequestUpdateWithoutNotificationMessageInput!
  where: RequestWhereUniqueInput!
}

input RequestUpsertWithoutMessageInput {
  create: RequestCreateWithoutMessageInput!
  update: RequestUpdateWithoutMessageInput!
  where: RequestWhereInput
}

input RequestUpsertWithoutReceiversInput {
  create: RequestCreateWithoutReceiversInput!
  update: RequestUpdateWithoutReceiversInput!
  where: RequestWhereInput
}

input RequestWhereInput {
  AND: [RequestWhereInput!]
  Message: MessageWhereInput
  NOT: [RequestWhereInput!]
  NotificationFriendRequest: NotificationsListRelationFilter
  NotificationMessage: NotificationsListRelationFilter
  NotificationType: EnumNotificationTypeFilter
  OR: [RequestWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  messageId: StringNullableFilter
  receivers: RequestReceiverListRelationFilter
  senderProfileId: StringFilter
  updatedAt: DateTimeFilter
}

input RequestWhereUniqueInput {
  AND: [RequestWhereInput!]
  Message: MessageWhereInput
  NOT: [RequestWhereInput!]
  NotificationFriendRequest: NotificationsListRelationFilter
  NotificationMessage: NotificationsListRelationFilter
  NotificationType: EnumNotificationTypeFilter
  OR: [RequestWhereInput!]
  createdAt: DateTimeFilter
  id: String
  messageId: String
  receivers: RequestReceiverListRelationFilter
  senderProfileId: StringFilter
  updatedAt: DateTimeFilter
}

type SearchAreaMetrics {
  H3Index5VenueRecommendation: H3Index5VenueRecommendation
  H3Index6VenueRecommendation: H3Index6VenueRecommendation
  SearchesService: SearchesService
  createdAt: DateTime!
  h3Index5VenueRecommendationId: String
  h3Index6VenueRecommendationId: String
  h3Index15: String
  id: ID!
  searchesServiceId: String
  timesRequested: Int!
  updatedAt: DateTime!
}

input SearchAreaMetricsAvgOrderByAggregateInput {
  id: SortOrder
  timesRequested: SortOrder
}

input SearchAreaMetricsCountOrderByAggregateInput {
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  searchesServiceId: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
}

input SearchAreaMetricsCreateInput {
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput
  SearchesService: SearchesServiceCreateNestedOneWithoutSearchAreaMetricsInput
  createdAt: DateTime
  h3Index15: String
  timesRequested: Int
  updatedAt: DateTime
}

input SearchAreaMetricsCreateManyH3Index5VenueRecommendationInput {
  createdAt: DateTime
  h3Index6VenueRecommendationId: String
  h3Index15: String
  id: Int
  searchesServiceId: String
  timesRequested: Int
  updatedAt: DateTime
}

input SearchAreaMetricsCreateManyH3Index5VenueRecommendationInputEnvelope {
  data: [SearchAreaMetricsCreateManyH3Index5VenueRecommendationInput!]!
  skipDuplicates: Boolean
}

input SearchAreaMetricsCreateManyH3Index6VenueRecommendationInput {
  createdAt: DateTime
  h3Index5VenueRecommendationId: String
  h3Index15: String
  id: Int
  searchesServiceId: String
  timesRequested: Int
  updatedAt: DateTime
}

input SearchAreaMetricsCreateManyH3Index6VenueRecommendationInputEnvelope {
  data: [SearchAreaMetricsCreateManyH3Index6VenueRecommendationInput!]!
  skipDuplicates: Boolean
}

input SearchAreaMetricsCreateManyInput {
  createdAt: DateTime
  h3Index5VenueRecommendationId: String
  h3Index6VenueRecommendationId: String
  h3Index15: String
  id: Int
  searchesServiceId: String
  timesRequested: Int
  updatedAt: DateTime
}

input SearchAreaMetricsCreateManySearchesServiceInput {
  createdAt: DateTime
  h3Index5VenueRecommendationId: String
  h3Index6VenueRecommendationId: String
  h3Index15: String
  id: Int
  timesRequested: Int
  updatedAt: DateTime
}

input SearchAreaMetricsCreateManySearchesServiceInputEnvelope {
  data: [SearchAreaMetricsCreateManySearchesServiceInput!]!
  skipDuplicates: Boolean
}

input SearchAreaMetricsCreateNestedManyWithoutH3Index5VenueRecommendationInput {
  connect: [SearchAreaMetricsWhereUniqueInput!]
  connectOrCreate: [SearchAreaMetricsCreateOrConnectWithoutH3Index5VenueRecommendationInput!]
  create: [SearchAreaMetricsCreateWithoutH3Index5VenueRecommendationInput!]
  createMany: SearchAreaMetricsCreateManyH3Index5VenueRecommendationInputEnvelope
}

input SearchAreaMetricsCreateNestedManyWithoutH3Index6VenueRecommendationInput {
  connect: [SearchAreaMetricsWhereUniqueInput!]
  connectOrCreate: [SearchAreaMetricsCreateOrConnectWithoutH3Index6VenueRecommendationInput!]
  create: [SearchAreaMetricsCreateWithoutH3Index6VenueRecommendationInput!]
  createMany: SearchAreaMetricsCreateManyH3Index6VenueRecommendationInputEnvelope
}

input SearchAreaMetricsCreateNestedManyWithoutSearchesServiceInput {
  connect: [SearchAreaMetricsWhereUniqueInput!]
  connectOrCreate: [SearchAreaMetricsCreateOrConnectWithoutSearchesServiceInput!]
  create: [SearchAreaMetricsCreateWithoutSearchesServiceInput!]
  createMany: SearchAreaMetricsCreateManySearchesServiceInputEnvelope
}

input SearchAreaMetricsCreateOrConnectWithoutH3Index5VenueRecommendationInput {
  create: SearchAreaMetricsCreateWithoutH3Index5VenueRecommendationInput!
  where: SearchAreaMetricsWhereUniqueInput!
}

input SearchAreaMetricsCreateOrConnectWithoutH3Index6VenueRecommendationInput {
  create: SearchAreaMetricsCreateWithoutH3Index6VenueRecommendationInput!
  where: SearchAreaMetricsWhereUniqueInput!
}

input SearchAreaMetricsCreateOrConnectWithoutSearchesServiceInput {
  create: SearchAreaMetricsCreateWithoutSearchesServiceInput!
  where: SearchAreaMetricsWhereUniqueInput!
}

input SearchAreaMetricsCreateWithoutH3Index5VenueRecommendationInput {
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput
  SearchesService: SearchesServiceCreateNestedOneWithoutSearchAreaMetricsInput
  createdAt: DateTime
  h3Index15: String
  timesRequested: Int
  updatedAt: DateTime
}

input SearchAreaMetricsCreateWithoutH3Index6VenueRecommendationInput {
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput
  SearchesService: SearchesServiceCreateNestedOneWithoutSearchAreaMetricsInput
  createdAt: DateTime
  h3Index15: String
  timesRequested: Int
  updatedAt: DateTime
}

input SearchAreaMetricsCreateWithoutSearchesServiceInput {
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutSearchAreaMetricsInput
  createdAt: DateTime
  h3Index15: String
  timesRequested: Int
  updatedAt: DateTime
}

input SearchAreaMetricsListRelationFilter {
  every: SearchAreaMetricsWhereInput
  none: SearchAreaMetricsWhereInput
  some: SearchAreaMetricsWhereInput
}

input SearchAreaMetricsMaxOrderByAggregateInput {
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  searchesServiceId: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
}

input SearchAreaMetricsMinOrderByAggregateInput {
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  searchesServiceId: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
}

input SearchAreaMetricsOrderByRelationAggregateInput {
  _count: SortOrder
}

input SearchAreaMetricsOrderByWithAggregationInput {
  _avg: SearchAreaMetricsAvgOrderByAggregateInput
  _count: SearchAreaMetricsCountOrderByAggregateInput
  _max: SearchAreaMetricsMaxOrderByAggregateInput
  _min: SearchAreaMetricsMinOrderByAggregateInput
  _sum: SearchAreaMetricsSumOrderByAggregateInput
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  searchesServiceId: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
}

input SearchAreaMetricsOrderByWithRelationInput {
  H3Index5VenueRecommendation: H3Index5VenueRecommendationOrderByWithRelationInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationOrderByWithRelationInput
  SearchesService: SearchesServiceOrderByWithRelationInput
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  h3Index15: SortOrder
  id: SortOrder
  searchesServiceId: SortOrder
  timesRequested: SortOrder
  updatedAt: SortOrder
}

enum SearchAreaMetricsScalarFieldEnum {
  createdAt
  h3Index5VenueRecommendationId
  h3Index6VenueRecommendationId
  h3Index15
  id
  searchesServiceId
  timesRequested
  updatedAt
}

input SearchAreaMetricsScalarWhereInput {
  AND: [SearchAreaMetricsScalarWhereInput!]
  NOT: [SearchAreaMetricsScalarWhereInput!]
  OR: [SearchAreaMetricsScalarWhereInput!]
  createdAt: DateTimeFilter
  h3Index5VenueRecommendationId: StringNullableFilter
  h3Index6VenueRecommendationId: StringNullableFilter
  h3Index15: StringNullableFilter
  id: IntFilter
  searchesServiceId: StringNullableFilter
  timesRequested: IntFilter
  updatedAt: DateTimeFilter
}

input SearchAreaMetricsScalarWhereWithAggregatesInput {
  AND: [SearchAreaMetricsScalarWhereWithAggregatesInput!]
  NOT: [SearchAreaMetricsScalarWhereWithAggregatesInput!]
  OR: [SearchAreaMetricsScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  h3Index5VenueRecommendationId: StringNullableWithAggregatesFilter
  h3Index6VenueRecommendationId: StringNullableWithAggregatesFilter
  h3Index15: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  searchesServiceId: StringNullableWithAggregatesFilter
  timesRequested: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input SearchAreaMetricsSumOrderByAggregateInput {
  id: SortOrder
  timesRequested: SortOrder
}

input SearchAreaMetricsUpdateInput {
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutSearchAreaMetricsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index15: NullableStringFieldUpdateOperationsInput
  timesRequested: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SearchAreaMetricsUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index15: NullableStringFieldUpdateOperationsInput
  timesRequested: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SearchAreaMetricsUpdateManyWithWhereWithoutH3Index5VenueRecommendationInput {
  data: SearchAreaMetricsUpdateManyMutationInput!
  where: SearchAreaMetricsScalarWhereInput!
}

input SearchAreaMetricsUpdateManyWithWhereWithoutH3Index6VenueRecommendationInput {
  data: SearchAreaMetricsUpdateManyMutationInput!
  where: SearchAreaMetricsScalarWhereInput!
}

input SearchAreaMetricsUpdateManyWithWhereWithoutSearchesServiceInput {
  data: SearchAreaMetricsUpdateManyMutationInput!
  where: SearchAreaMetricsScalarWhereInput!
}

input SearchAreaMetricsUpdateManyWithoutH3Index5VenueRecommendationNestedInput {
  connect: [SearchAreaMetricsWhereUniqueInput!]
  connectOrCreate: [SearchAreaMetricsCreateOrConnectWithoutH3Index5VenueRecommendationInput!]
  create: [SearchAreaMetricsCreateWithoutH3Index5VenueRecommendationInput!]
  createMany: SearchAreaMetricsCreateManyH3Index5VenueRecommendationInputEnvelope
  delete: [SearchAreaMetricsWhereUniqueInput!]
  deleteMany: [SearchAreaMetricsScalarWhereInput!]
  disconnect: [SearchAreaMetricsWhereUniqueInput!]
  set: [SearchAreaMetricsWhereUniqueInput!]
  update: [SearchAreaMetricsUpdateWithWhereUniqueWithoutH3Index5VenueRecommendationInput!]
  updateMany: [SearchAreaMetricsUpdateManyWithWhereWithoutH3Index5VenueRecommendationInput!]
  upsert: [SearchAreaMetricsUpsertWithWhereUniqueWithoutH3Index5VenueRecommendationInput!]
}

input SearchAreaMetricsUpdateManyWithoutH3Index6VenueRecommendationNestedInput {
  connect: [SearchAreaMetricsWhereUniqueInput!]
  connectOrCreate: [SearchAreaMetricsCreateOrConnectWithoutH3Index6VenueRecommendationInput!]
  create: [SearchAreaMetricsCreateWithoutH3Index6VenueRecommendationInput!]
  createMany: SearchAreaMetricsCreateManyH3Index6VenueRecommendationInputEnvelope
  delete: [SearchAreaMetricsWhereUniqueInput!]
  deleteMany: [SearchAreaMetricsScalarWhereInput!]
  disconnect: [SearchAreaMetricsWhereUniqueInput!]
  set: [SearchAreaMetricsWhereUniqueInput!]
  update: [SearchAreaMetricsUpdateWithWhereUniqueWithoutH3Index6VenueRecommendationInput!]
  updateMany: [SearchAreaMetricsUpdateManyWithWhereWithoutH3Index6VenueRecommendationInput!]
  upsert: [SearchAreaMetricsUpsertWithWhereUniqueWithoutH3Index6VenueRecommendationInput!]
}

input SearchAreaMetricsUpdateManyWithoutSearchesServiceNestedInput {
  connect: [SearchAreaMetricsWhereUniqueInput!]
  connectOrCreate: [SearchAreaMetricsCreateOrConnectWithoutSearchesServiceInput!]
  create: [SearchAreaMetricsCreateWithoutSearchesServiceInput!]
  createMany: SearchAreaMetricsCreateManySearchesServiceInputEnvelope
  delete: [SearchAreaMetricsWhereUniqueInput!]
  deleteMany: [SearchAreaMetricsScalarWhereInput!]
  disconnect: [SearchAreaMetricsWhereUniqueInput!]
  set: [SearchAreaMetricsWhereUniqueInput!]
  update: [SearchAreaMetricsUpdateWithWhereUniqueWithoutSearchesServiceInput!]
  updateMany: [SearchAreaMetricsUpdateManyWithWhereWithoutSearchesServiceInput!]
  upsert: [SearchAreaMetricsUpsertWithWhereUniqueWithoutSearchesServiceInput!]
}

input SearchAreaMetricsUpdateWithWhereUniqueWithoutH3Index5VenueRecommendationInput {
  data: SearchAreaMetricsUpdateWithoutH3Index5VenueRecommendationInput!
  where: SearchAreaMetricsWhereUniqueInput!
}

input SearchAreaMetricsUpdateWithWhereUniqueWithoutH3Index6VenueRecommendationInput {
  data: SearchAreaMetricsUpdateWithoutH3Index6VenueRecommendationInput!
  where: SearchAreaMetricsWhereUniqueInput!
}

input SearchAreaMetricsUpdateWithWhereUniqueWithoutSearchesServiceInput {
  data: SearchAreaMetricsUpdateWithoutSearchesServiceInput!
  where: SearchAreaMetricsWhereUniqueInput!
}

input SearchAreaMetricsUpdateWithoutH3Index5VenueRecommendationInput {
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutSearchAreaMetricsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index15: NullableStringFieldUpdateOperationsInput
  timesRequested: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SearchAreaMetricsUpdateWithoutH3Index6VenueRecommendationInput {
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput
  SearchesService: SearchesServiceUpdateOneWithoutSearchAreaMetricsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index15: NullableStringFieldUpdateOperationsInput
  timesRequested: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SearchAreaMetricsUpdateWithoutSearchesServiceInput {
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutSearchAreaMetricsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  h3Index15: NullableStringFieldUpdateOperationsInput
  timesRequested: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SearchAreaMetricsUpsertWithWhereUniqueWithoutH3Index5VenueRecommendationInput {
  create: SearchAreaMetricsCreateWithoutH3Index5VenueRecommendationInput!
  update: SearchAreaMetricsUpdateWithoutH3Index5VenueRecommendationInput!
  where: SearchAreaMetricsWhereUniqueInput!
}

input SearchAreaMetricsUpsertWithWhereUniqueWithoutH3Index6VenueRecommendationInput {
  create: SearchAreaMetricsCreateWithoutH3Index6VenueRecommendationInput!
  update: SearchAreaMetricsUpdateWithoutH3Index6VenueRecommendationInput!
  where: SearchAreaMetricsWhereUniqueInput!
}

input SearchAreaMetricsUpsertWithWhereUniqueWithoutSearchesServiceInput {
  create: SearchAreaMetricsCreateWithoutSearchesServiceInput!
  update: SearchAreaMetricsUpdateWithoutSearchesServiceInput!
  where: SearchAreaMetricsWhereUniqueInput!
}

input SearchAreaMetricsWhereInput {
  AND: [SearchAreaMetricsWhereInput!]
  H3Index5VenueRecommendation: H3Index5VenueRecommendationWhereInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationWhereInput
  NOT: [SearchAreaMetricsWhereInput!]
  OR: [SearchAreaMetricsWhereInput!]
  SearchesService: SearchesServiceWhereInput
  createdAt: DateTimeFilter
  h3Index5VenueRecommendationId: StringNullableFilter
  h3Index6VenueRecommendationId: StringNullableFilter
  h3Index15: StringNullableFilter
  id: IntFilter
  searchesServiceId: StringNullableFilter
  timesRequested: IntFilter
  updatedAt: DateTimeFilter
}

input SearchAreaMetricsWhereUniqueInput {
  AND: [SearchAreaMetricsWhereInput!]
  H3Index5VenueRecommendation: H3Index5VenueRecommendationWhereInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationWhereInput
  NOT: [SearchAreaMetricsWhereInput!]
  OR: [SearchAreaMetricsWhereInput!]
  SearchesService: SearchesServiceWhereInput
  createdAt: DateTimeFilter
  h3Index5VenueRecommendationId: StringNullableFilter
  h3Index6VenueRecommendationId: StringNullableFilter
  h3Index15: StringNullableFilter
  id: Int
  searchesServiceId: StringNullableFilter
  timesRequested: IntFilter
  updatedAt: DateTimeFilter
}

type SearchesService {
  Profile: Profile!
  SearchAreaMetrics(cursor: SearchAreaMetricsWhereUniqueInput, distinct: [SearchAreaMetricsScalarFieldEnum!], orderBy: [SearchAreaMetricsOrderByWithRelationInput!], skip: Int, take: Int, where: SearchAreaMetricsWhereInput): [SearchAreaMetrics!]!
  createdAt: DateTime!
  id: ID!
  profileId: String!
  searches: [Json!]!
  updatedAt: DateTime!
}

input SearchesServiceCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  searches: SortOrder
  updatedAt: SortOrder
}

input SearchesServiceCreateInput {
  Profile: ProfileCreateNestedOneWithoutSearchesServiceInput!
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutSearchesServiceInput
  createdAt: DateTime
  id: String
  searches: [Json!]
  updatedAt: DateTime
}

input SearchesServiceCreateManyInput {
  createdAt: DateTime
  id: String
  profileId: String!
  searches: [Json!]
  updatedAt: DateTime
}

input SearchesServiceCreateNestedOneWithoutProfileInput {
  connect: SearchesServiceWhereUniqueInput
  connectOrCreate: SearchesServiceCreateOrConnectWithoutProfileInput
  create: SearchesServiceCreateWithoutProfileInput
}

input SearchesServiceCreateNestedOneWithoutSearchAreaMetricsInput {
  connect: SearchesServiceWhereUniqueInput
  connectOrCreate: SearchesServiceCreateOrConnectWithoutSearchAreaMetricsInput
  create: SearchesServiceCreateWithoutSearchAreaMetricsInput
}

input SearchesServiceCreateOrConnectWithoutProfileInput {
  create: SearchesServiceCreateWithoutProfileInput!
  where: SearchesServiceWhereUniqueInput!
}

input SearchesServiceCreateOrConnectWithoutSearchAreaMetricsInput {
  create: SearchesServiceCreateWithoutSearchAreaMetricsInput!
  where: SearchesServiceWhereUniqueInput!
}

input SearchesServiceCreateWithoutProfileInput {
  SearchAreaMetrics: SearchAreaMetricsCreateNestedManyWithoutSearchesServiceInput
  createdAt: DateTime
  id: String
  searches: [Json!]
  updatedAt: DateTime
}

input SearchesServiceCreateWithoutSearchAreaMetricsInput {
  Profile: ProfileCreateNestedOneWithoutSearchesServiceInput!
  createdAt: DateTime
  id: String
  searches: [Json!]
  updatedAt: DateTime
}

input SearchesServiceCreatesearchesInput {
  set: [Json!]!
}

input SearchesServiceMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input SearchesServiceMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input SearchesServiceNullableRelationFilter {
  is: SearchesServiceWhereInput
  isNot: SearchesServiceWhereInput
}

input SearchesServiceOrderByWithAggregationInput {
  _count: SearchesServiceCountOrderByAggregateInput
  _max: SearchesServiceMaxOrderByAggregateInput
  _min: SearchesServiceMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  searches: SortOrder
  updatedAt: SortOrder
}

input SearchesServiceOrderByWithRelationInput {
  Profile: ProfileOrderByWithRelationInput
  SearchAreaMetrics: SearchAreaMetricsOrderByRelationAggregateInput
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  searches: SortOrder
  updatedAt: SortOrder
}

enum SearchesServiceScalarFieldEnum {
  createdAt
  id
  profileId
  searches
  updatedAt
}

input SearchesServiceScalarWhereWithAggregatesInput {
  AND: [SearchesServiceScalarWhereWithAggregatesInput!]
  NOT: [SearchesServiceScalarWhereWithAggregatesInput!]
  OR: [SearchesServiceScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  searches: JsonNullableListFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input SearchesServiceUpdateInput {
  Profile: ProfileUpdateOneRequiredWithoutSearchesServiceNestedInput
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutSearchesServiceNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  searches: [Json!]
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SearchesServiceUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  searches: [Json!]
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SearchesServiceUpdateOneWithoutProfileNestedInput {
  connect: SearchesServiceWhereUniqueInput
  connectOrCreate: SearchesServiceCreateOrConnectWithoutProfileInput
  create: SearchesServiceCreateWithoutProfileInput
  delete: SearchesServiceWhereInput
  disconnect: SearchesServiceWhereInput
  update: SearchesServiceUpdateToOneWithWhereWithoutProfileInput
  upsert: SearchesServiceUpsertWithoutProfileInput
}

input SearchesServiceUpdateOneWithoutSearchAreaMetricsNestedInput {
  connect: SearchesServiceWhereUniqueInput
  connectOrCreate: SearchesServiceCreateOrConnectWithoutSearchAreaMetricsInput
  create: SearchesServiceCreateWithoutSearchAreaMetricsInput
  delete: SearchesServiceWhereInput
  disconnect: SearchesServiceWhereInput
  update: SearchesServiceUpdateToOneWithWhereWithoutSearchAreaMetricsInput
  upsert: SearchesServiceUpsertWithoutSearchAreaMetricsInput
}

input SearchesServiceUpdateToOneWithWhereWithoutProfileInput {
  data: SearchesServiceUpdateWithoutProfileInput!
  where: SearchesServiceWhereInput
}

input SearchesServiceUpdateToOneWithWhereWithoutSearchAreaMetricsInput {
  data: SearchesServiceUpdateWithoutSearchAreaMetricsInput!
  where: SearchesServiceWhereInput
}

input SearchesServiceUpdateWithoutProfileInput {
  SearchAreaMetrics: SearchAreaMetricsUpdateManyWithoutSearchesServiceNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  searches: [Json!]
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SearchesServiceUpdateWithoutSearchAreaMetricsInput {
  Profile: ProfileUpdateOneRequiredWithoutSearchesServiceNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  searches: [Json!]
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SearchesServiceUpdatesearchesInput {
  push: Json
  set: [Json!]
}

input SearchesServiceUpsertWithoutProfileInput {
  create: SearchesServiceCreateWithoutProfileInput!
  update: SearchesServiceUpdateWithoutProfileInput!
  where: SearchesServiceWhereInput
}

input SearchesServiceUpsertWithoutSearchAreaMetricsInput {
  create: SearchesServiceCreateWithoutSearchAreaMetricsInput!
  update: SearchesServiceUpdateWithoutSearchAreaMetricsInput!
  where: SearchesServiceWhereInput
}

input SearchesServiceWhereInput {
  AND: [SearchesServiceWhereInput!]
  NOT: [SearchesServiceWhereInput!]
  OR: [SearchesServiceWhereInput!]
  Profile: ProfileWhereInput
  SearchAreaMetrics: SearchAreaMetricsListRelationFilter
  createdAt: DateTimeFilter
  id: StringFilter
  profileId: StringFilter
  searches: JsonNullableListFilter
  updatedAt: DateTimeFilter
}

input SearchesServiceWhereUniqueInput {
  AND: [SearchesServiceWhereInput!]
  NOT: [SearchesServiceWhereInput!]
  OR: [SearchesServiceWhereInput!]
  Profile: ProfileWhereInput
  SearchAreaMetrics: SearchAreaMetricsListRelationFilter
  createdAt: DateTimeFilter
  id: String
  profileId: String
  searches: JsonNullableListFilter
  updatedAt: DateTimeFilter
}

enum SecureDataType {
  FRIENDING
  JOINING
}

input SecuredDataKeysAvgOrderByAggregateInput {
  used: SortOrder
}

input SecuredDataKeysCountOrderByAggregateInput {
  SecureDataType: SortOrder
  createdAt: SortOrder
  id: SortOrder
  key: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  used: SortOrder
}

input SecuredDataKeysCreateInput {
  Profile: ProfileCreateNestedOneWithoutSecuredDataKeysInput!
  SecureDataType: SecureDataType!
  createdAt: DateTime
  id: String
  key: String!
  updatedAt: DateTime
  used: Int
}

input SecuredDataKeysCreateManyInput {
  SecureDataType: SecureDataType!
  createdAt: DateTime
  id: String
  key: String!
  profileId: String!
  updatedAt: DateTime
  used: Int
}

input SecuredDataKeysCreateManyProfileInput {
  SecureDataType: SecureDataType!
  createdAt: DateTime
  id: String
  key: String!
  updatedAt: DateTime
  used: Int
}

input SecuredDataKeysCreateManyProfileInputEnvelope {
  data: [SecuredDataKeysCreateManyProfileInput!]!
  skipDuplicates: Boolean
}

input SecuredDataKeysCreateNestedManyWithoutProfileInput {
  connect: [SecuredDataKeysWhereUniqueInput!]
  connectOrCreate: [SecuredDataKeysCreateOrConnectWithoutProfileInput!]
  create: [SecuredDataKeysCreateWithoutProfileInput!]
  createMany: SecuredDataKeysCreateManyProfileInputEnvelope
}

input SecuredDataKeysCreateOrConnectWithoutProfileInput {
  create: SecuredDataKeysCreateWithoutProfileInput!
  where: SecuredDataKeysWhereUniqueInput!
}

input SecuredDataKeysCreateWithoutProfileInput {
  SecureDataType: SecureDataType!
  createdAt: DateTime
  id: String
  key: String!
  updatedAt: DateTime
  used: Int
}

input SecuredDataKeysListRelationFilter {
  every: SecuredDataKeysWhereInput
  none: SecuredDataKeysWhereInput
  some: SecuredDataKeysWhereInput
}

input SecuredDataKeysMaxOrderByAggregateInput {
  SecureDataType: SortOrder
  createdAt: SortOrder
  id: SortOrder
  key: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  used: SortOrder
}

input SecuredDataKeysMinOrderByAggregateInput {
  SecureDataType: SortOrder
  createdAt: SortOrder
  id: SortOrder
  key: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  used: SortOrder
}

input SecuredDataKeysOrderByRelationAggregateInput {
  _count: SortOrder
}

input SecuredDataKeysOrderByWithAggregationInput {
  SecureDataType: SortOrder
  _avg: SecuredDataKeysAvgOrderByAggregateInput
  _count: SecuredDataKeysCountOrderByAggregateInput
  _max: SecuredDataKeysMaxOrderByAggregateInput
  _min: SecuredDataKeysMinOrderByAggregateInput
  _sum: SecuredDataKeysSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  key: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  used: SortOrder
}

input SecuredDataKeysOrderByWithRelationInput {
  Profile: ProfileOrderByWithRelationInput
  SecureDataType: SortOrder
  createdAt: SortOrder
  id: SortOrder
  key: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  used: SortOrder
}

enum SecuredDataKeysScalarFieldEnum {
  SecureDataType
  createdAt
  id
  key
  profileId
  updatedAt
  used
}

input SecuredDataKeysScalarWhereInput {
  AND: [SecuredDataKeysScalarWhereInput!]
  NOT: [SecuredDataKeysScalarWhereInput!]
  OR: [SecuredDataKeysScalarWhereInput!]
  SecureDataType: EnumSecureDataTypeFilter
  createdAt: DateTimeFilter
  id: StringFilter
  key: StringFilter
  profileId: StringFilter
  updatedAt: DateTimeFilter
  used: IntFilter
}

input SecuredDataKeysScalarWhereWithAggregatesInput {
  AND: [SecuredDataKeysScalarWhereWithAggregatesInput!]
  NOT: [SecuredDataKeysScalarWhereWithAggregatesInput!]
  OR: [SecuredDataKeysScalarWhereWithAggregatesInput!]
  SecureDataType: EnumSecureDataTypeWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  key: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  used: IntWithAggregatesFilter
}

input SecuredDataKeysSumOrderByAggregateInput {
  used: SortOrder
}

input SecuredDataKeysUpdateInput {
  Profile: ProfileUpdateOneRequiredWithoutSecuredDataKeysNestedInput
  SecureDataType: EnumSecureDataTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  key: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  used: IntFieldUpdateOperationsInput
}

input SecuredDataKeysUpdateManyMutationInput {
  SecureDataType: EnumSecureDataTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  key: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  used: IntFieldUpdateOperationsInput
}

input SecuredDataKeysUpdateManyWithWhereWithoutProfileInput {
  data: SecuredDataKeysUpdateManyMutationInput!
  where: SecuredDataKeysScalarWhereInput!
}

input SecuredDataKeysUpdateManyWithoutProfileNestedInput {
  connect: [SecuredDataKeysWhereUniqueInput!]
  connectOrCreate: [SecuredDataKeysCreateOrConnectWithoutProfileInput!]
  create: [SecuredDataKeysCreateWithoutProfileInput!]
  createMany: SecuredDataKeysCreateManyProfileInputEnvelope
  delete: [SecuredDataKeysWhereUniqueInput!]
  deleteMany: [SecuredDataKeysScalarWhereInput!]
  disconnect: [SecuredDataKeysWhereUniqueInput!]
  set: [SecuredDataKeysWhereUniqueInput!]
  update: [SecuredDataKeysUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [SecuredDataKeysUpdateManyWithWhereWithoutProfileInput!]
  upsert: [SecuredDataKeysUpsertWithWhereUniqueWithoutProfileInput!]
}

input SecuredDataKeysUpdateWithWhereUniqueWithoutProfileInput {
  data: SecuredDataKeysUpdateWithoutProfileInput!
  where: SecuredDataKeysWhereUniqueInput!
}

input SecuredDataKeysUpdateWithoutProfileInput {
  SecureDataType: EnumSecureDataTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  key: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  used: IntFieldUpdateOperationsInput
}

input SecuredDataKeysUpsertWithWhereUniqueWithoutProfileInput {
  create: SecuredDataKeysCreateWithoutProfileInput!
  update: SecuredDataKeysUpdateWithoutProfileInput!
  where: SecuredDataKeysWhereUniqueInput!
}

input SecuredDataKeysWhereInput {
  AND: [SecuredDataKeysWhereInput!]
  NOT: [SecuredDataKeysWhereInput!]
  OR: [SecuredDataKeysWhereInput!]
  Profile: ProfileWhereInput
  SecureDataType: EnumSecureDataTypeFilter
  createdAt: DateTimeFilter
  id: StringFilter
  key: StringFilter
  profileId: StringFilter
  updatedAt: DateTimeFilter
  used: IntFilter
}

input SecuredDataKeysWhereUniqueInput {
  AND: [SecuredDataKeysWhereInput!]
  NOT: [SecuredDataKeysWhereInput!]
  OR: [SecuredDataKeysWhereInput!]
  Profile: ProfileWhereInput
  SecureDataType: EnumSecureDataTypeFilter
  createdAt: DateTimeFilter
  id: String
  key: String
  profileId: StringFilter
  updatedAt: DateTimeFilter
  used: IntFilter
}

input SettingsCountOrderByAggregateInput {
  allEventPushNotifications: SortOrder
  allFriendPushNotifications: SortOrder
  allMessagePushNotifications: SortOrder
  allPushNotifications: SortOrder
  id: SortOrder
  profileId: SortOrder
}

input SettingsCreateInput {
  Profile: ProfileCreateNestedOneWithoutSettingsInput!
  allEventPushNotifications: Boolean
  allFriendPushNotifications: Boolean
  allMessagePushNotifications: Boolean
  allPushNotifications: Boolean
  id: String
}

input SettingsCreateManyInput {
  allEventPushNotifications: Boolean
  allFriendPushNotifications: Boolean
  allMessagePushNotifications: Boolean
  allPushNotifications: Boolean
  id: String
  profileId: String!
}

input SettingsCreateNestedOneWithoutProfileInput {
  connect: SettingsWhereUniqueInput
  connectOrCreate: SettingsCreateOrConnectWithoutProfileInput
  create: SettingsCreateWithoutProfileInput
}

input SettingsCreateOrConnectWithoutProfileInput {
  create: SettingsCreateWithoutProfileInput!
  where: SettingsWhereUniqueInput!
}

input SettingsCreateWithoutProfileInput {
  allEventPushNotifications: Boolean
  allFriendPushNotifications: Boolean
  allMessagePushNotifications: Boolean
  allPushNotifications: Boolean
  id: String
}

input SettingsMaxOrderByAggregateInput {
  allEventPushNotifications: SortOrder
  allFriendPushNotifications: SortOrder
  allMessagePushNotifications: SortOrder
  allPushNotifications: SortOrder
  id: SortOrder
  profileId: SortOrder
}

input SettingsMinOrderByAggregateInput {
  allEventPushNotifications: SortOrder
  allFriendPushNotifications: SortOrder
  allMessagePushNotifications: SortOrder
  allPushNotifications: SortOrder
  id: SortOrder
  profileId: SortOrder
}

input SettingsNullableRelationFilter {
  is: SettingsWhereInput
  isNot: SettingsWhereInput
}

input SettingsOrderByWithAggregationInput {
  _count: SettingsCountOrderByAggregateInput
  _max: SettingsMaxOrderByAggregateInput
  _min: SettingsMinOrderByAggregateInput
  allEventPushNotifications: SortOrder
  allFriendPushNotifications: SortOrder
  allMessagePushNotifications: SortOrder
  allPushNotifications: SortOrder
  id: SortOrder
  profileId: SortOrder
}

input SettingsOrderByWithRelationInput {
  Profile: ProfileOrderByWithRelationInput
  allEventPushNotifications: SortOrder
  allFriendPushNotifications: SortOrder
  allMessagePushNotifications: SortOrder
  allPushNotifications: SortOrder
  id: SortOrder
  profileId: SortOrder
}

enum SettingsScalarFieldEnum {
  allEventPushNotifications
  allFriendPushNotifications
  allMessagePushNotifications
  allPushNotifications
  id
  profileId
}

input SettingsScalarWhereWithAggregatesInput {
  AND: [SettingsScalarWhereWithAggregatesInput!]
  NOT: [SettingsScalarWhereWithAggregatesInput!]
  OR: [SettingsScalarWhereWithAggregatesInput!]
  allEventPushNotifications: BoolWithAggregatesFilter
  allFriendPushNotifications: BoolWithAggregatesFilter
  allMessagePushNotifications: BoolWithAggregatesFilter
  allPushNotifications: BoolWithAggregatesFilter
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
}

input SettingsUpdateInput {
  Profile: ProfileUpdateOneRequiredWithoutSettingsNestedInput
  allEventPushNotifications: BoolFieldUpdateOperationsInput
  allFriendPushNotifications: BoolFieldUpdateOperationsInput
  allMessagePushNotifications: BoolFieldUpdateOperationsInput
  allPushNotifications: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input SettingsUpdateManyMutationInput {
  allEventPushNotifications: BoolFieldUpdateOperationsInput
  allFriendPushNotifications: BoolFieldUpdateOperationsInput
  allMessagePushNotifications: BoolFieldUpdateOperationsInput
  allPushNotifications: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input SettingsUpdateOneWithoutProfileNestedInput {
  connect: SettingsWhereUniqueInput
  connectOrCreate: SettingsCreateOrConnectWithoutProfileInput
  create: SettingsCreateWithoutProfileInput
  delete: SettingsWhereInput
  disconnect: SettingsWhereInput
  update: SettingsUpdateToOneWithWhereWithoutProfileInput
  upsert: SettingsUpsertWithoutProfileInput
}

input SettingsUpdateToOneWithWhereWithoutProfileInput {
  data: SettingsUpdateWithoutProfileInput!
  where: SettingsWhereInput
}

input SettingsUpdateWithoutProfileInput {
  allEventPushNotifications: BoolFieldUpdateOperationsInput
  allFriendPushNotifications: BoolFieldUpdateOperationsInput
  allMessagePushNotifications: BoolFieldUpdateOperationsInput
  allPushNotifications: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input SettingsUpsertWithoutProfileInput {
  create: SettingsCreateWithoutProfileInput!
  update: SettingsUpdateWithoutProfileInput!
  where: SettingsWhereInput
}

input SettingsWhereInput {
  AND: [SettingsWhereInput!]
  NOT: [SettingsWhereInput!]
  OR: [SettingsWhereInput!]
  Profile: ProfileWhereInput
  allEventPushNotifications: BoolFilter
  allFriendPushNotifications: BoolFilter
  allMessagePushNotifications: BoolFilter
  allPushNotifications: BoolFilter
  id: StringFilter
  profileId: StringFilter
}

input SettingsWhereUniqueInput {
  AND: [SettingsWhereInput!]
  NOT: [SettingsWhereInput!]
  OR: [SettingsWhereInput!]
  Profile: ProfileWhereInput
  allEventPushNotifications: BoolFilter
  allFriendPushNotifications: BoolFilter
  allMessagePushNotifications: BoolFilter
  allPushNotifications: BoolFilter
  id: String
  profileId: String
}

enum SortOrder {
  asc
  desc
}

type State {
  Area(cursor: AreaWhereUniqueInput, distinct: [AreaScalarFieldEnum!], orderBy: [AreaOrderByWithRelationInput!], skip: Int, take: Int, where: AreaWhereInput): [Area!]!
  Geometry: Geometry!
  geometryId: Int!
  id: ID!
  isoCode: String!
  name: String!
}

input StateAvgOrderByAggregateInput {
  geometryId: SortOrder
}

input StateCountOrderByAggregateInput {
  geometryId: SortOrder
  id: SortOrder
  isoCode: SortOrder
  name: SortOrder
}

input StateCreateInput {
  Area: AreaCreateNestedManyWithoutStateInput
  Geometry: GeometryCreateNestedOneWithoutStateInput!
  id: String
  isoCode: String!
  name: String!
}

input StateCreateManyInput {
  geometryId: Int!
  id: String
  isoCode: String!
  name: String!
}

input StateCreateNestedOneWithoutAreaInput {
  connect: StateWhereUniqueInput
  connectOrCreate: StateCreateOrConnectWithoutAreaInput
  create: StateCreateWithoutAreaInput
}

input StateCreateNestedOneWithoutGeometryInput {
  connect: StateWhereUniqueInput
  connectOrCreate: StateCreateOrConnectWithoutGeometryInput
  create: StateCreateWithoutGeometryInput
}

input StateCreateOrConnectWithoutAreaInput {
  create: StateCreateWithoutAreaInput!
  where: StateWhereUniqueInput!
}

input StateCreateOrConnectWithoutGeometryInput {
  create: StateCreateWithoutGeometryInput!
  where: StateWhereUniqueInput!
}

input StateCreateWithoutAreaInput {
  Geometry: GeometryCreateNestedOneWithoutStateInput!
  id: String
  isoCode: String!
  name: String!
}

input StateCreateWithoutGeometryInput {
  Area: AreaCreateNestedManyWithoutStateInput
  id: String
  isoCode: String!
  name: String!
}

input StateMaxOrderByAggregateInput {
  geometryId: SortOrder
  id: SortOrder
  isoCode: SortOrder
  name: SortOrder
}

input StateMinOrderByAggregateInput {
  geometryId: SortOrder
  id: SortOrder
  isoCode: SortOrder
  name: SortOrder
}

input StateNullableRelationFilter {
  is: StateWhereInput
  isNot: StateWhereInput
}

input StateOrderByWithAggregationInput {
  _avg: StateAvgOrderByAggregateInput
  _count: StateCountOrderByAggregateInput
  _max: StateMaxOrderByAggregateInput
  _min: StateMinOrderByAggregateInput
  _sum: StateSumOrderByAggregateInput
  geometryId: SortOrder
  id: SortOrder
  isoCode: SortOrder
  name: SortOrder
}

input StateOrderByWithRelationInput {
  Area: AreaOrderByRelationAggregateInput
  Geometry: GeometryOrderByWithRelationInput
  geometryId: SortOrder
  id: SortOrder
  isoCode: SortOrder
  name: SortOrder
}

input StateRelationFilter {
  is: StateWhereInput
  isNot: StateWhereInput
}

type StateResponseObject {
  countryCode: String
  isoCode: String
  latitude: String
  longitude: String
  name: String
}

enum StateScalarFieldEnum {
  geometryId
  id
  isoCode
  name
}

input StateScalarWhereWithAggregatesInput {
  AND: [StateScalarWhereWithAggregatesInput!]
  NOT: [StateScalarWhereWithAggregatesInput!]
  OR: [StateScalarWhereWithAggregatesInput!]
  geometryId: IntWithAggregatesFilter
  id: StringWithAggregatesFilter
  isoCode: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
}

input StateSumOrderByAggregateInput {
  geometryId: SortOrder
}

input StateUpdateInput {
  Area: AreaUpdateManyWithoutStateNestedInput
  Geometry: GeometryUpdateOneRequiredWithoutStateNestedInput
  id: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input StateUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input StateUpdateOneRequiredWithoutAreaNestedInput {
  connect: StateWhereUniqueInput
  connectOrCreate: StateCreateOrConnectWithoutAreaInput
  create: StateCreateWithoutAreaInput
  update: StateUpdateToOneWithWhereWithoutAreaInput
  upsert: StateUpsertWithoutAreaInput
}

input StateUpdateOneWithoutGeometryNestedInput {
  connect: StateWhereUniqueInput
  connectOrCreate: StateCreateOrConnectWithoutGeometryInput
  create: StateCreateWithoutGeometryInput
  delete: StateWhereInput
  disconnect: StateWhereInput
  update: StateUpdateToOneWithWhereWithoutGeometryInput
  upsert: StateUpsertWithoutGeometryInput
}

input StateUpdateToOneWithWhereWithoutAreaInput {
  data: StateUpdateWithoutAreaInput!
  where: StateWhereInput
}

input StateUpdateToOneWithWhereWithoutGeometryInput {
  data: StateUpdateWithoutGeometryInput!
  where: StateWhereInput
}

input StateUpdateWithoutAreaInput {
  Geometry: GeometryUpdateOneRequiredWithoutStateNestedInput
  id: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input StateUpdateWithoutGeometryInput {
  Area: AreaUpdateManyWithoutStateNestedInput
  id: StringFieldUpdateOperationsInput
  isoCode: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input StateUpsertWithoutAreaInput {
  create: StateCreateWithoutAreaInput!
  update: StateUpdateWithoutAreaInput!
  where: StateWhereInput
}

input StateUpsertWithoutGeometryInput {
  create: StateCreateWithoutGeometryInput!
  update: StateUpdateWithoutGeometryInput!
  where: StateWhereInput
}

input StateWhereInput {
  AND: [StateWhereInput!]
  Area: AreaListRelationFilter
  Geometry: GeometryWhereInput
  NOT: [StateWhereInput!]
  OR: [StateWhereInput!]
  geometryId: IntFilter
  id: StringFilter
  isoCode: StringFilter
  name: StringFilter
}

input StateWhereUniqueInput {
  AND: [StateWhereInput!]
  Area: AreaListRelationFilter
  Geometry: GeometryWhereInput
  NOT: [StateWhereInput!]
  OR: [StateWhereInput!]
  geometryId: Int
  id: String
  isoCode: String
  name: String
}

type Story {
  Profile: Profile
  createdAt: DateTime
  date: DateTime
  emojimood: Emojimood
  id: ID
  photos: [Photo!]
  startDate: DateTime
  updatedAt: DateTime
}

input StoryAvgOrderByAggregateInput {
  emojimoodId: SortOrder
}

input StoryCountOrderByAggregateInput {
  createdAt: SortOrder
  date: SortOrder
  emojimoodId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input StoryCreateInput {
  Photos: PhotoCreateNestedManyWithoutStoryInput
  Profile: ProfileCreateNestedOneWithoutStorysInput
  createdAt: DateTime
  date: DateTime!
  emojimood: EmojimoodCreateNestedOneWithoutStoryInput
  id: String
  updatedAt: DateTime
}

input StoryCreateManyEmojimoodInput {
  createdAt: DateTime
  date: DateTime!
  id: String
  profileId: String
  updatedAt: DateTime
}

input StoryCreateManyEmojimoodInputEnvelope {
  data: [StoryCreateManyEmojimoodInput!]!
  skipDuplicates: Boolean
}

input StoryCreateManyInput {
  createdAt: DateTime
  date: DateTime!
  emojimoodId: Int
  id: String
  profileId: String
  updatedAt: DateTime
}

input StoryCreateManyProfileInput {
  createdAt: DateTime
  date: DateTime!
  emojimoodId: Int
  id: String
  updatedAt: DateTime
}

input StoryCreateManyProfileInputEnvelope {
  data: [StoryCreateManyProfileInput!]!
  skipDuplicates: Boolean
}

input StoryCreateNestedManyWithoutEmojimoodInput {
  connect: [StoryWhereUniqueInput!]
  connectOrCreate: [StoryCreateOrConnectWithoutEmojimoodInput!]
  create: [StoryCreateWithoutEmojimoodInput!]
  createMany: StoryCreateManyEmojimoodInputEnvelope
}

input StoryCreateNestedManyWithoutProfileInput {
  connect: [StoryWhereUniqueInput!]
  connectOrCreate: [StoryCreateOrConnectWithoutProfileInput!]
  create: [StoryCreateWithoutProfileInput!]
  createMany: StoryCreateManyProfileInputEnvelope
}

input StoryCreateNestedOneWithoutPhotosInput {
  connect: StoryWhereUniqueInput
  connectOrCreate: StoryCreateOrConnectWithoutPhotosInput
  create: StoryCreateWithoutPhotosInput
}

input StoryCreateOrConnectWithoutEmojimoodInput {
  create: StoryCreateWithoutEmojimoodInput!
  where: StoryWhereUniqueInput!
}

input StoryCreateOrConnectWithoutPhotosInput {
  create: StoryCreateWithoutPhotosInput!
  where: StoryWhereUniqueInput!
}

input StoryCreateOrConnectWithoutProfileInput {
  create: StoryCreateWithoutProfileInput!
  where: StoryWhereUniqueInput!
}

input StoryCreateWithoutEmojimoodInput {
  Photos: PhotoCreateNestedManyWithoutStoryInput
  Profile: ProfileCreateNestedOneWithoutStorysInput
  createdAt: DateTime
  date: DateTime!
  id: String
  updatedAt: DateTime
}

input StoryCreateWithoutPhotosInput {
  Profile: ProfileCreateNestedOneWithoutStorysInput
  createdAt: DateTime
  date: DateTime!
  emojimood: EmojimoodCreateNestedOneWithoutStoryInput
  id: String
  updatedAt: DateTime
}

input StoryCreateWithoutProfileInput {
  Photos: PhotoCreateNestedManyWithoutStoryInput
  createdAt: DateTime
  date: DateTime!
  emojimood: EmojimoodCreateNestedOneWithoutStoryInput
  id: String
  updatedAt: DateTime
}

input StoryListRelationFilter {
  every: StoryWhereInput
  none: StoryWhereInput
  some: StoryWhereInput
}

input StoryMaxOrderByAggregateInput {
  createdAt: SortOrder
  date: SortOrder
  emojimoodId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input StoryMinOrderByAggregateInput {
  createdAt: SortOrder
  date: SortOrder
  emojimoodId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input StoryNullableRelationFilter {
  is: StoryWhereInput
  isNot: StoryWhereInput
}

input StoryOrderByRelationAggregateInput {
  _count: SortOrder
}

input StoryOrderByWithAggregationInput {
  _avg: StoryAvgOrderByAggregateInput
  _count: StoryCountOrderByAggregateInput
  _max: StoryMaxOrderByAggregateInput
  _min: StoryMinOrderByAggregateInput
  _sum: StorySumOrderByAggregateInput
  createdAt: SortOrder
  date: SortOrder
  emojimoodId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input StoryOrderByWithRelationInput {
  Photos: PhotoOrderByRelationAggregateInput
  Profile: ProfileOrderByWithRelationInput
  createdAt: SortOrder
  date: SortOrder
  emojimood: EmojimoodOrderByWithRelationInput
  emojimoodId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

enum StoryScalarFieldEnum {
  createdAt
  date
  emojimoodId
  id
  profileId
  updatedAt
}

input StoryScalarWhereInput {
  AND: [StoryScalarWhereInput!]
  NOT: [StoryScalarWhereInput!]
  OR: [StoryScalarWhereInput!]
  createdAt: DateTimeFilter
  date: DateTimeFilter
  emojimoodId: IntNullableFilter
  id: StringFilter
  profileId: StringNullableFilter
  updatedAt: DateTimeFilter
}

input StoryScalarWhereWithAggregatesInput {
  AND: [StoryScalarWhereWithAggregatesInput!]
  NOT: [StoryScalarWhereWithAggregatesInput!]
  OR: [StoryScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  date: DateTimeWithAggregatesFilter
  emojimoodId: IntNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  profileId: StringNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input StorySumOrderByAggregateInput {
  emojimoodId: SortOrder
}

input StoryUpdateInput {
  Photos: PhotoUpdateManyWithoutStoryNestedInput
  Profile: ProfileUpdateOneWithoutStorysNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  emojimood: EmojimoodUpdateOneWithoutStoryNestedInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StoryUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StoryUpdateManyWithWhereWithoutEmojimoodInput {
  data: StoryUpdateManyMutationInput!
  where: StoryScalarWhereInput!
}

input StoryUpdateManyWithWhereWithoutProfileInput {
  data: StoryUpdateManyMutationInput!
  where: StoryScalarWhereInput!
}

input StoryUpdateManyWithoutEmojimoodNestedInput {
  connect: [StoryWhereUniqueInput!]
  connectOrCreate: [StoryCreateOrConnectWithoutEmojimoodInput!]
  create: [StoryCreateWithoutEmojimoodInput!]
  createMany: StoryCreateManyEmojimoodInputEnvelope
  delete: [StoryWhereUniqueInput!]
  deleteMany: [StoryScalarWhereInput!]
  disconnect: [StoryWhereUniqueInput!]
  set: [StoryWhereUniqueInput!]
  update: [StoryUpdateWithWhereUniqueWithoutEmojimoodInput!]
  updateMany: [StoryUpdateManyWithWhereWithoutEmojimoodInput!]
  upsert: [StoryUpsertWithWhereUniqueWithoutEmojimoodInput!]
}

input StoryUpdateManyWithoutProfileNestedInput {
  connect: [StoryWhereUniqueInput!]
  connectOrCreate: [StoryCreateOrConnectWithoutProfileInput!]
  create: [StoryCreateWithoutProfileInput!]
  createMany: StoryCreateManyProfileInputEnvelope
  delete: [StoryWhereUniqueInput!]
  deleteMany: [StoryScalarWhereInput!]
  disconnect: [StoryWhereUniqueInput!]
  set: [StoryWhereUniqueInput!]
  update: [StoryUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [StoryUpdateManyWithWhereWithoutProfileInput!]
  upsert: [StoryUpsertWithWhereUniqueWithoutProfileInput!]
}

input StoryUpdateOneWithoutPhotosNestedInput {
  connect: StoryWhereUniqueInput
  connectOrCreate: StoryCreateOrConnectWithoutPhotosInput
  create: StoryCreateWithoutPhotosInput
  delete: StoryWhereInput
  disconnect: StoryWhereInput
  update: StoryUpdateToOneWithWhereWithoutPhotosInput
  upsert: StoryUpsertWithoutPhotosInput
}

input StoryUpdateToOneWithWhereWithoutPhotosInput {
  data: StoryUpdateWithoutPhotosInput!
  where: StoryWhereInput
}

input StoryUpdateWithWhereUniqueWithoutEmojimoodInput {
  data: StoryUpdateWithoutEmojimoodInput!
  where: StoryWhereUniqueInput!
}

input StoryUpdateWithWhereUniqueWithoutProfileInput {
  data: StoryUpdateWithoutProfileInput!
  where: StoryWhereUniqueInput!
}

input StoryUpdateWithoutEmojimoodInput {
  Photos: PhotoUpdateManyWithoutStoryNestedInput
  Profile: ProfileUpdateOneWithoutStorysNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StoryUpdateWithoutPhotosInput {
  Profile: ProfileUpdateOneWithoutStorysNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  emojimood: EmojimoodUpdateOneWithoutStoryNestedInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StoryUpdateWithoutProfileInput {
  Photos: PhotoUpdateManyWithoutStoryNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  emojimood: EmojimoodUpdateOneWithoutStoryNestedInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StoryUpsertWithWhereUniqueWithoutEmojimoodInput {
  create: StoryCreateWithoutEmojimoodInput!
  update: StoryUpdateWithoutEmojimoodInput!
  where: StoryWhereUniqueInput!
}

input StoryUpsertWithWhereUniqueWithoutProfileInput {
  create: StoryCreateWithoutProfileInput!
  update: StoryUpdateWithoutProfileInput!
  where: StoryWhereUniqueInput!
}

input StoryUpsertWithoutPhotosInput {
  create: StoryCreateWithoutPhotosInput!
  update: StoryUpdateWithoutPhotosInput!
  where: StoryWhereInput
}

input StoryWhereInput {
  AND: [StoryWhereInput!]
  NOT: [StoryWhereInput!]
  OR: [StoryWhereInput!]
  Photos: PhotoListRelationFilter
  Profile: ProfileWhereInput
  createdAt: DateTimeFilter
  date: DateTimeFilter
  emojimood: EmojimoodWhereInput
  emojimoodId: IntNullableFilter
  id: StringFilter
  profileId: StringNullableFilter
  updatedAt: DateTimeFilter
}

input StoryWhereUniqueInput {
  AND: [StoryWhereInput!]
  NOT: [StoryWhereInput!]
  OR: [StoryWhereInput!]
  Photos: PhotoListRelationFilter
  Profile: ProfileWhereInput
  createdAt: DateTimeFilter
  date: DateTimeFilter
  emojimood: EmojimoodWhereInput
  emojimoodId: IntNullableFilter
  id: String
  profileId: StringNullableFilter
  updatedAt: DateTimeFilter
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type Subscription {
  """Events related to messages"""
  messageEvents: IBaseMessageEvent

  """Events related to posts"""
  postEvents: IBasePostEvent
}

type Tag {
  Category: Category
  DetailInformation(cursor: DetailInformationWhereUniqueInput, distinct: [DetailInformationScalarFieldEnum!], orderBy: [DetailInformationOrderByWithRelationInput!], skip: Int, take: Int, where: DetailInformationWhereInput): [DetailInformation!]!
  categoryId: String
  emoji: String
  id: ID!
  name: String!
}

input TagAvgOrderByAggregateInput {
  id: SortOrder
}

input TagCountOrderByAggregateInput {
  categoryId: SortOrder
  emoji: SortOrder
  id: SortOrder
  name: SortOrder
}

input TagCreateInput {
  Category: CategoryCreateNestedOneWithoutTagsInput
  DetailInformation: DetailInformationCreateNestedManyWithoutTagsInput
  emoji: String
  name: String!
}

input TagCreateManyCategoryInput {
  emoji: String
  id: Int
  name: String!
}

input TagCreateManyCategoryInputEnvelope {
  data: [TagCreateManyCategoryInput!]!
  skipDuplicates: Boolean
}

input TagCreateManyInput {
  categoryId: String
  emoji: String
  id: Int
  name: String!
}

input TagCreateNestedManyWithoutCategoryInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutCategoryInput!]
  create: [TagCreateWithoutCategoryInput!]
  createMany: TagCreateManyCategoryInputEnvelope
}

input TagCreateNestedManyWithoutDetailInformationInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutDetailInformationInput!]
  create: [TagCreateWithoutDetailInformationInput!]
}

input TagCreateOrConnectWithoutCategoryInput {
  create: TagCreateWithoutCategoryInput!
  where: TagWhereUniqueInput!
}

input TagCreateOrConnectWithoutDetailInformationInput {
  create: TagCreateWithoutDetailInformationInput!
  where: TagWhereUniqueInput!
}

input TagCreateWithoutCategoryInput {
  DetailInformation: DetailInformationCreateNestedManyWithoutTagsInput
  emoji: String
  name: String!
}

input TagCreateWithoutDetailInformationInput {
  Category: CategoryCreateNestedOneWithoutTagsInput
  emoji: String
  name: String!
}

input TagListRelationFilter {
  every: TagWhereInput
  none: TagWhereInput
  some: TagWhereInput
}

input TagMaxOrderByAggregateInput {
  categoryId: SortOrder
  emoji: SortOrder
  id: SortOrder
  name: SortOrder
}

input TagMinOrderByAggregateInput {
  categoryId: SortOrder
  emoji: SortOrder
  id: SortOrder
  name: SortOrder
}

input TagOrderByRelationAggregateInput {
  _count: SortOrder
}

input TagOrderByWithAggregationInput {
  _avg: TagAvgOrderByAggregateInput
  _count: TagCountOrderByAggregateInput
  _max: TagMaxOrderByAggregateInput
  _min: TagMinOrderByAggregateInput
  _sum: TagSumOrderByAggregateInput
  categoryId: SortOrder
  emoji: SortOrder
  id: SortOrder
  name: SortOrder
}

input TagOrderByWithRelationInput {
  Category: CategoryOrderByWithRelationInput
  DetailInformation: DetailInformationOrderByRelationAggregateInput
  categoryId: SortOrder
  emoji: SortOrder
  id: SortOrder
  name: SortOrder
}

enum TagScalarFieldEnum {
  categoryId
  emoji
  id
  name
}

input TagScalarWhereInput {
  AND: [TagScalarWhereInput!]
  NOT: [TagScalarWhereInput!]
  OR: [TagScalarWhereInput!]
  categoryId: StringNullableFilter
  emoji: StringNullableFilter
  id: IntFilter
  name: StringFilter
}

input TagScalarWhereWithAggregatesInput {
  AND: [TagScalarWhereWithAggregatesInput!]
  NOT: [TagScalarWhereWithAggregatesInput!]
  OR: [TagScalarWhereWithAggregatesInput!]
  categoryId: StringNullableWithAggregatesFilter
  emoji: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
}

input TagSumOrderByAggregateInput {
  id: SortOrder
}

input TagUpdateInput {
  Category: CategoryUpdateOneWithoutTagsNestedInput
  DetailInformation: DetailInformationUpdateManyWithoutTagsNestedInput
  emoji: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpdateManyMutationInput {
  emoji: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpdateManyWithWhereWithoutCategoryInput {
  data: TagUpdateManyMutationInput!
  where: TagScalarWhereInput!
}

input TagUpdateManyWithWhereWithoutDetailInformationInput {
  data: TagUpdateManyMutationInput!
  where: TagScalarWhereInput!
}

input TagUpdateManyWithoutCategoryNestedInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutCategoryInput!]
  create: [TagCreateWithoutCategoryInput!]
  createMany: TagCreateManyCategoryInputEnvelope
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutCategoryInput!]
  updateMany: [TagUpdateManyWithWhereWithoutCategoryInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutCategoryInput!]
}

input TagUpdateManyWithoutDetailInformationNestedInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutDetailInformationInput!]
  create: [TagCreateWithoutDetailInformationInput!]
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutDetailInformationInput!]
  updateMany: [TagUpdateManyWithWhereWithoutDetailInformationInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutDetailInformationInput!]
}

input TagUpdateWithWhereUniqueWithoutCategoryInput {
  data: TagUpdateWithoutCategoryInput!
  where: TagWhereUniqueInput!
}

input TagUpdateWithWhereUniqueWithoutDetailInformationInput {
  data: TagUpdateWithoutDetailInformationInput!
  where: TagWhereUniqueInput!
}

input TagUpdateWithoutCategoryInput {
  DetailInformation: DetailInformationUpdateManyWithoutTagsNestedInput
  emoji: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpdateWithoutDetailInformationInput {
  Category: CategoryUpdateOneWithoutTagsNestedInput
  emoji: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input TagUpsertWithWhereUniqueWithoutCategoryInput {
  create: TagCreateWithoutCategoryInput!
  update: TagUpdateWithoutCategoryInput!
  where: TagWhereUniqueInput!
}

input TagUpsertWithWhereUniqueWithoutDetailInformationInput {
  create: TagCreateWithoutDetailInformationInput!
  update: TagUpdateWithoutDetailInformationInput!
  where: TagWhereUniqueInput!
}

input TagWhereInput {
  AND: [TagWhereInput!]
  Category: CategoryWhereInput
  DetailInformation: DetailInformationListRelationFilter
  NOT: [TagWhereInput!]
  OR: [TagWhereInput!]
  categoryId: StringNullableFilter
  emoji: StringNullableFilter
  id: IntFilter
  name: StringFilter
}

input TagWhereUniqueInput {
  AND: [TagWhereInput!]
  Category: CategoryWhereInput
  DetailInformation: DetailInformationListRelationFilter
  NOT: [TagWhereInput!]
  OR: [TagWhereInput!]
  categoryId: StringNullableFilter
  emoji: StringNullableFilter
  id: Int
  name: StringFilter
}

type Theme {
  ProfileTheme: [ProfileTheme!]
  createdAt: DateTime
  endDate: DateTime
  id: ID
  mobileVersions: [String!]
  name: String
  startDate: DateTime
  theme: Json
  updatedAt: DateTime
  webVersions: [String!]
}

input ThemeCountOrderByAggregateInput {
  createdAt: SortOrder
  endDate: SortOrder
  id: SortOrder
  mobileVersions: SortOrder
  name: SortOrder
  startDate: SortOrder
  theme: SortOrder
  updatedAt: SortOrder
  webVersions: SortOrder
}

input ThemeCreateInput {
  ProfileTheme: ProfileThemeCreateNestedManyWithoutThemeInput
  createdAt: DateTime
  endDate: DateTime
  id: String
  mobileVersions: [String!]
  name: String!
  startDate: DateTime
  theme: Json!
  updatedAt: DateTime
  webVersions: [String!]
}

input ThemeCreateManyInput {
  createdAt: DateTime
  endDate: DateTime
  id: String
  mobileVersions: [String!]
  name: String!
  startDate: DateTime
  theme: Json!
  updatedAt: DateTime
  webVersions: [String!]
}

input ThemeCreateNestedOneWithoutProfileThemeInput {
  connect: ThemeWhereUniqueInput
  connectOrCreate: ThemeCreateOrConnectWithoutProfileThemeInput
  create: ThemeCreateWithoutProfileThemeInput
}

input ThemeCreateOrConnectWithoutProfileThemeInput {
  create: ThemeCreateWithoutProfileThemeInput!
  where: ThemeWhereUniqueInput!
}

input ThemeCreateWithoutProfileThemeInput {
  createdAt: DateTime
  endDate: DateTime
  id: String
  mobileVersions: [String!]
  name: String!
  startDate: DateTime
  theme: Json!
  updatedAt: DateTime
  webVersions: [String!]
}

input ThemeCreatemobileVersionsInput {
  set: [String!]!
}

input ThemeCreatewebVersionsInput {
  set: [String!]!
}

type ThemeManager {
  Profile: Profile!
  ProfileTheme(cursor: ProfileThemeWhereUniqueInput, distinct: [ProfileThemeScalarFieldEnum!], orderBy: [ProfileThemeOrderByWithRelationInput!], skip: Int, take: Int, where: ProfileThemeWhereInput): [ProfileTheme!]!
  createdAt: DateTime!
  id: ID!
  profileId: String!
  updatedAt: DateTime!
}

input ThemeManagerCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input ThemeManagerCreateInput {
  Profile: ProfileCreateNestedOneWithoutThemeManagerInput!
  ProfileTheme: ProfileThemeCreateNestedManyWithoutThemeManagerInput
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ThemeManagerCreateManyInput {
  createdAt: DateTime
  id: String
  profileId: String!
  updatedAt: DateTime
}

input ThemeManagerCreateNestedOneWithoutProfileInput {
  connect: ThemeManagerWhereUniqueInput
  connectOrCreate: ThemeManagerCreateOrConnectWithoutProfileInput
  create: ThemeManagerCreateWithoutProfileInput
}

input ThemeManagerCreateNestedOneWithoutProfileThemeInput {
  connect: ThemeManagerWhereUniqueInput
  connectOrCreate: ThemeManagerCreateOrConnectWithoutProfileThemeInput
  create: ThemeManagerCreateWithoutProfileThemeInput
}

input ThemeManagerCreateOrConnectWithoutProfileInput {
  create: ThemeManagerCreateWithoutProfileInput!
  where: ThemeManagerWhereUniqueInput!
}

input ThemeManagerCreateOrConnectWithoutProfileThemeInput {
  create: ThemeManagerCreateWithoutProfileThemeInput!
  where: ThemeManagerWhereUniqueInput!
}

input ThemeManagerCreateWithoutProfileInput {
  ProfileTheme: ProfileThemeCreateNestedManyWithoutThemeManagerInput
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ThemeManagerCreateWithoutProfileThemeInput {
  Profile: ProfileCreateNestedOneWithoutThemeManagerInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input ThemeManagerMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input ThemeManagerMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input ThemeManagerNullableRelationFilter {
  is: ThemeManagerWhereInput
  isNot: ThemeManagerWhereInput
}

input ThemeManagerOrderByWithAggregationInput {
  _count: ThemeManagerCountOrderByAggregateInput
  _max: ThemeManagerMaxOrderByAggregateInput
  _min: ThemeManagerMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input ThemeManagerOrderByWithRelationInput {
  Profile: ProfileOrderByWithRelationInput
  ProfileTheme: ProfileThemeOrderByRelationAggregateInput
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

enum ThemeManagerScalarFieldEnum {
  createdAt
  id
  profileId
  updatedAt
}

input ThemeManagerScalarWhereWithAggregatesInput {
  AND: [ThemeManagerScalarWhereWithAggregatesInput!]
  NOT: [ThemeManagerScalarWhereWithAggregatesInput!]
  OR: [ThemeManagerScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input ThemeManagerUpdateInput {
  Profile: ProfileUpdateOneRequiredWithoutThemeManagerNestedInput
  ProfileTheme: ProfileThemeUpdateManyWithoutThemeManagerNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ThemeManagerUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ThemeManagerUpdateOneWithoutProfileNestedInput {
  connect: ThemeManagerWhereUniqueInput
  connectOrCreate: ThemeManagerCreateOrConnectWithoutProfileInput
  create: ThemeManagerCreateWithoutProfileInput
  delete: ThemeManagerWhereInput
  disconnect: ThemeManagerWhereInput
  update: ThemeManagerUpdateToOneWithWhereWithoutProfileInput
  upsert: ThemeManagerUpsertWithoutProfileInput
}

input ThemeManagerUpdateOneWithoutProfileThemeNestedInput {
  connect: ThemeManagerWhereUniqueInput
  connectOrCreate: ThemeManagerCreateOrConnectWithoutProfileThemeInput
  create: ThemeManagerCreateWithoutProfileThemeInput
  delete: ThemeManagerWhereInput
  disconnect: ThemeManagerWhereInput
  update: ThemeManagerUpdateToOneWithWhereWithoutProfileThemeInput
  upsert: ThemeManagerUpsertWithoutProfileThemeInput
}

input ThemeManagerUpdateToOneWithWhereWithoutProfileInput {
  data: ThemeManagerUpdateWithoutProfileInput!
  where: ThemeManagerWhereInput
}

input ThemeManagerUpdateToOneWithWhereWithoutProfileThemeInput {
  data: ThemeManagerUpdateWithoutProfileThemeInput!
  where: ThemeManagerWhereInput
}

input ThemeManagerUpdateWithoutProfileInput {
  ProfileTheme: ProfileThemeUpdateManyWithoutThemeManagerNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ThemeManagerUpdateWithoutProfileThemeInput {
  Profile: ProfileUpdateOneRequiredWithoutThemeManagerNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ThemeManagerUpsertWithoutProfileInput {
  create: ThemeManagerCreateWithoutProfileInput!
  update: ThemeManagerUpdateWithoutProfileInput!
  where: ThemeManagerWhereInput
}

input ThemeManagerUpsertWithoutProfileThemeInput {
  create: ThemeManagerCreateWithoutProfileThemeInput!
  update: ThemeManagerUpdateWithoutProfileThemeInput!
  where: ThemeManagerWhereInput
}

input ThemeManagerWhereInput {
  AND: [ThemeManagerWhereInput!]
  NOT: [ThemeManagerWhereInput!]
  OR: [ThemeManagerWhereInput!]
  Profile: ProfileWhereInput
  ProfileTheme: ProfileThemeListRelationFilter
  createdAt: DateTimeFilter
  id: StringFilter
  profileId: StringFilter
  updatedAt: DateTimeFilter
}

input ThemeManagerWhereUniqueInput {
  AND: [ThemeManagerWhereInput!]
  NOT: [ThemeManagerWhereInput!]
  OR: [ThemeManagerWhereInput!]
  Profile: ProfileWhereInput
  ProfileTheme: ProfileThemeListRelationFilter
  createdAt: DateTimeFilter
  id: String
  profileId: String
  updatedAt: DateTimeFilter
}

input ThemeMaxOrderByAggregateInput {
  createdAt: SortOrder
  endDate: SortOrder
  id: SortOrder
  name: SortOrder
  startDate: SortOrder
  updatedAt: SortOrder
}

input ThemeMinOrderByAggregateInput {
  createdAt: SortOrder
  endDate: SortOrder
  id: SortOrder
  name: SortOrder
  startDate: SortOrder
  updatedAt: SortOrder
}

input ThemeOrderByWithAggregationInput {
  _count: ThemeCountOrderByAggregateInput
  _max: ThemeMaxOrderByAggregateInput
  _min: ThemeMinOrderByAggregateInput
  createdAt: SortOrder
  endDate: SortOrder
  id: SortOrder
  mobileVersions: SortOrder
  name: SortOrder
  startDate: SortOrder
  theme: SortOrder
  updatedAt: SortOrder
  webVersions: SortOrder
}

input ThemeOrderByWithRelationInput {
  ProfileTheme: ProfileThemeOrderByRelationAggregateInput
  createdAt: SortOrder
  endDate: SortOrder
  id: SortOrder
  mobileVersions: SortOrder
  name: SortOrder
  startDate: SortOrder
  theme: SortOrder
  updatedAt: SortOrder
  webVersions: SortOrder
}

input ThemeRelationFilter {
  is: ThemeWhereInput
  isNot: ThemeWhereInput
}

enum ThemeScalarFieldEnum {
  createdAt
  endDate
  id
  mobileVersions
  name
  startDate
  theme
  updatedAt
  webVersions
}

input ThemeScalarWhereWithAggregatesInput {
  AND: [ThemeScalarWhereWithAggregatesInput!]
  NOT: [ThemeScalarWhereWithAggregatesInput!]
  OR: [ThemeScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  endDate: DateTimeNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  mobileVersions: StringNullableListFilter
  name: StringWithAggregatesFilter
  startDate: DateTimeNullableWithAggregatesFilter
  theme: JsonWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  webVersions: StringNullableListFilter
}

input ThemeUpdateInput {
  ProfileTheme: ProfileThemeUpdateManyWithoutThemeNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  endDate: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mobileVersions: [String!]
  name: StringFieldUpdateOperationsInput
  startDate: NullableDateTimeFieldUpdateOperationsInput
  theme: Json
  updatedAt: DateTimeFieldUpdateOperationsInput
  webVersions: [String!]
}

input ThemeUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  endDate: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mobileVersions: [String!]
  name: StringFieldUpdateOperationsInput
  startDate: NullableDateTimeFieldUpdateOperationsInput
  theme: Json
  updatedAt: DateTimeFieldUpdateOperationsInput
  webVersions: [String!]
}

input ThemeUpdateOneRequiredWithoutProfileThemeNestedInput {
  connect: ThemeWhereUniqueInput
  connectOrCreate: ThemeCreateOrConnectWithoutProfileThemeInput
  create: ThemeCreateWithoutProfileThemeInput
  update: ThemeUpdateToOneWithWhereWithoutProfileThemeInput
  upsert: ThemeUpsertWithoutProfileThemeInput
}

input ThemeUpdateToOneWithWhereWithoutProfileThemeInput {
  data: ThemeUpdateWithoutProfileThemeInput!
  where: ThemeWhereInput
}

input ThemeUpdateWithoutProfileThemeInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  endDate: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mobileVersions: [String!]
  name: StringFieldUpdateOperationsInput
  startDate: NullableDateTimeFieldUpdateOperationsInput
  theme: Json
  updatedAt: DateTimeFieldUpdateOperationsInput
  webVersions: [String!]
}

input ThemeUpdatemobileVersionsInput {
  push: [String!]
  set: [String!]
}

input ThemeUpdatewebVersionsInput {
  push: [String!]
  set: [String!]
}

input ThemeUpsertWithoutProfileThemeInput {
  create: ThemeCreateWithoutProfileThemeInput!
  update: ThemeUpdateWithoutProfileThemeInput!
  where: ThemeWhereInput
}

input ThemeWhereInput {
  AND: [ThemeWhereInput!]
  NOT: [ThemeWhereInput!]
  OR: [ThemeWhereInput!]
  ProfileTheme: ProfileThemeListRelationFilter
  createdAt: DateTimeFilter
  endDate: DateTimeNullableFilter
  id: StringFilter
  mobileVersions: StringNullableListFilter
  name: StringFilter
  startDate: DateTimeNullableFilter
  theme: JsonFilter
  updatedAt: DateTimeFilter
  webVersions: StringNullableListFilter
}

input ThemeWhereUniqueInput {
  AND: [ThemeWhereInput!]
  NOT: [ThemeWhereInput!]
  OR: [ThemeWhereInput!]
  ProfileTheme: ProfileThemeListRelationFilter
  createdAt: DateTimeFilter
  endDate: DateTimeNullableFilter
  id: String
  mobileVersions: StringNullableListFilter
  name: StringFilter
  startDate: DateTimeNullableFilter
  theme: JsonFilter
  updatedAt: DateTimeFilter
  webVersions: StringNullableListFilter
}

enum TokenType {
  ANDROID
  IOS
}

input TonightPathCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input TonightPathCreateInput {
  Path: PathCreateNestedManyWithoutTonightPathInput
  createdAt: DateTime
  id: String
  profileId: String!
  updatedAt: DateTime
}

input TonightPathCreateManyInput {
  createdAt: DateTime
  id: String
  profileId: String!
  updatedAt: DateTime
}

input TonightPathCreateNestedOneWithoutPathInput {
  connect: TonightPathWhereUniqueInput
  connectOrCreate: TonightPathCreateOrConnectWithoutPathInput
  create: TonightPathCreateWithoutPathInput
}

input TonightPathCreateOrConnectWithoutPathInput {
  create: TonightPathCreateWithoutPathInput!
  where: TonightPathWhereUniqueInput!
}

input TonightPathCreateWithoutPathInput {
  createdAt: DateTime
  id: String
  profileId: String!
  updatedAt: DateTime
}

input TonightPathMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input TonightPathMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input TonightPathNullableRelationFilter {
  is: TonightPathWhereInput
  isNot: TonightPathWhereInput
}

input TonightPathOrderByWithAggregationInput {
  _count: TonightPathCountOrderByAggregateInput
  _max: TonightPathMaxOrderByAggregateInput
  _min: TonightPathMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

input TonightPathOrderByWithRelationInput {
  Path: PathOrderByRelationAggregateInput
  createdAt: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
}

enum TonightPathScalarFieldEnum {
  createdAt
  id
  profileId
  updatedAt
}

input TonightPathScalarWhereWithAggregatesInput {
  AND: [TonightPathScalarWhereWithAggregatesInput!]
  NOT: [TonightPathScalarWhereWithAggregatesInput!]
  OR: [TonightPathScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input TonightPathUpdateInput {
  Path: PathUpdateManyWithoutTonightPathNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  profileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TonightPathUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  profileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TonightPathUpdateOneWithoutPathNestedInput {
  connect: TonightPathWhereUniqueInput
  connectOrCreate: TonightPathCreateOrConnectWithoutPathInput
  create: TonightPathCreateWithoutPathInput
  delete: TonightPathWhereInput
  disconnect: TonightPathWhereInput
  update: TonightPathUpdateToOneWithWhereWithoutPathInput
  upsert: TonightPathUpsertWithoutPathInput
}

input TonightPathUpdateToOneWithWhereWithoutPathInput {
  data: TonightPathUpdateWithoutPathInput!
  where: TonightPathWhereInput
}

input TonightPathUpdateWithoutPathInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  profileId: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TonightPathUpsertWithoutPathInput {
  create: TonightPathCreateWithoutPathInput!
  update: TonightPathUpdateWithoutPathInput!
  where: TonightPathWhereInput
}

input TonightPathWhereInput {
  AND: [TonightPathWhereInput!]
  NOT: [TonightPathWhereInput!]
  OR: [TonightPathWhereInput!]
  Path: PathListRelationFilter
  createdAt: DateTimeFilter
  id: StringFilter
  profileId: StringFilter
  updatedAt: DateTimeFilter
}

input TonightPathWhereUniqueInput {
  AND: [TonightPathWhereInput!]
  NOT: [TonightPathWhereInput!]
  OR: [TonightPathWhereInput!]
  Path: PathListRelationFilter
  createdAt: DateTimeFilter
  id: String
  profileId: StringFilter
  updatedAt: DateTimeFilter
}

enum TransactionIsolationLevel {
  ReadCommitted
  ReadUncommitted
  RepeatableRead
  Serializable
}

enum TypeOfDocument {
  PROFILE_PRIVACY_POLICY
  PROFILE_TERMS_OF_SERVICE
}

input UpdateManyNotificationStatusInput {
  """List of the NotificationStatus IDs to update"""
  notificationStatusIds: [UpdateNotificationStatusInput!]!
}

union UpdateManyNotificationStatusUnionResponse = Error | UpdateNotificationResponse

type UpdateNotificationResponse {
  count: Int
}

input UpdateNotificationStatusInput {
  """A NotificationStatus ID"""
  id: String!
}

type Venue {
  LiveOutVenue: LiveOutVenue
  Location: Location
  Profile: Profile!
  VenueStats: VenueStats
  createdAt: DateTime!
  id: ID!
  name: String
  profileId: String!
  updatedAt: DateTime!
  venueStatsId: String!
}

input VenueContactInput {
  type: String
  value: String!
}

input VenueCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  venueStatsId: SortOrder
}

input VenueCreateInput {
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutVenueInput
  Location: LocationCreateNestedOneWithoutVenueInput
  Profile: ProfileCreateNestedOneWithoutVenueInput!
  VenueStats: VenueStatsCreateNestedOneWithoutVenueInput!
  createdAt: DateTime
  id: String
  name: String
  updatedAt: DateTime
}

input VenueCreateManyInput {
  createdAt: DateTime
  id: String
  name: String
  profileId: String!
  updatedAt: DateTime
  venueStatsId: String!
}

input VenueCreateNestedOneWithoutLiveOutVenueInput {
  connect: VenueWhereUniqueInput
  connectOrCreate: VenueCreateOrConnectWithoutLiveOutVenueInput
  create: VenueCreateWithoutLiveOutVenueInput
}

input VenueCreateNestedOneWithoutLocationInput {
  connect: VenueWhereUniqueInput
  connectOrCreate: VenueCreateOrConnectWithoutLocationInput
  create: VenueCreateWithoutLocationInput
}

input VenueCreateNestedOneWithoutProfileInput {
  connect: VenueWhereUniqueInput
  connectOrCreate: VenueCreateOrConnectWithoutProfileInput
  create: VenueCreateWithoutProfileInput
}

input VenueCreateNestedOneWithoutVenueStatsInput {
  connect: VenueWhereUniqueInput
  connectOrCreate: VenueCreateOrConnectWithoutVenueStatsInput
  create: VenueCreateWithoutVenueStatsInput
}

input VenueCreateOrConnectWithoutLiveOutVenueInput {
  create: VenueCreateWithoutLiveOutVenueInput!
  where: VenueWhereUniqueInput!
}

input VenueCreateOrConnectWithoutLocationInput {
  create: VenueCreateWithoutLocationInput!
  where: VenueWhereUniqueInput!
}

input VenueCreateOrConnectWithoutProfileInput {
  create: VenueCreateWithoutProfileInput!
  where: VenueWhereUniqueInput!
}

input VenueCreateOrConnectWithoutVenueStatsInput {
  create: VenueCreateWithoutVenueStatsInput!
  where: VenueWhereUniqueInput!
}

input VenueCreateWithoutLiveOutVenueInput {
  Location: LocationCreateNestedOneWithoutVenueInput
  Profile: ProfileCreateNestedOneWithoutVenueInput!
  VenueStats: VenueStatsCreateNestedOneWithoutVenueInput!
  createdAt: DateTime
  id: String
  name: String
  updatedAt: DateTime
}

input VenueCreateWithoutLocationInput {
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutVenueInput
  Profile: ProfileCreateNestedOneWithoutVenueInput!
  VenueStats: VenueStatsCreateNestedOneWithoutVenueInput!
  createdAt: DateTime
  id: String
  name: String
  updatedAt: DateTime
}

input VenueCreateWithoutProfileInput {
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutVenueInput
  Location: LocationCreateNestedOneWithoutVenueInput
  VenueStats: VenueStatsCreateNestedOneWithoutVenueInput!
  createdAt: DateTime
  id: String
  name: String
  updatedAt: DateTime
}

input VenueCreateWithoutVenueStatsInput {
  LiveOutVenue: LiveOutVenueCreateNestedOneWithoutVenueInput
  Location: LocationCreateNestedOneWithoutVenueInput
  Profile: ProfileCreateNestedOneWithoutVenueInput!
  createdAt: DateTime
  id: String
  name: String
  updatedAt: DateTime
}

input VenueMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  venueStatsId: SortOrder
}

input VenueMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  venueStatsId: SortOrder
}

input VenueNullableRelationFilter {
  is: VenueWhereInput
  isNot: VenueWhereInput
}

input VenueOrderByWithAggregationInput {
  _count: VenueCountOrderByAggregateInput
  _max: VenueMaxOrderByAggregateInput
  _min: VenueMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  venueStatsId: SortOrder
}

input VenueOrderByWithRelationInput {
  LiveOutVenue: LiveOutVenueOrderByWithRelationInput
  Location: LocationOrderByWithRelationInput
  Profile: ProfileOrderByWithRelationInput
  VenueStats: VenueStatsOrderByWithRelationInput
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  venueStatsId: SortOrder
}

input VenueRelationFilter {
  is: VenueWhereInput
  isNot: VenueWhereInput
}

enum VenueScalarFieldEnum {
  createdAt
  id
  name
  profileId
  updatedAt
  venueStatsId
}

input VenueScalarWhereWithAggregatesInput {
  AND: [VenueScalarWhereWithAggregatesInput!]
  NOT: [VenueScalarWhereWithAggregatesInput!]
  OR: [VenueScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  venueStatsId: StringWithAggregatesFilter
}

type VenueStats {
  Out(cursor: OutWhereUniqueInput, distinct: [OutScalarFieldEnum!], orderBy: [OutOrderByWithRelationInput!], skip: Int, take: Int, where: OutWhereInput): [Out!]!
  Venue: Venue
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
}

input VenueStatsCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input VenueStatsCreateInput {
  Out: OutCreateNestedManyWithoutVenueStatsInput
  Venue: VenueCreateNestedOneWithoutVenueStatsInput
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input VenueStatsCreateManyInput {
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input VenueStatsCreateNestedOneWithoutOutInput {
  connect: VenueStatsWhereUniqueInput
  connectOrCreate: VenueStatsCreateOrConnectWithoutOutInput
  create: VenueStatsCreateWithoutOutInput
}

input VenueStatsCreateNestedOneWithoutVenueInput {
  connect: VenueStatsWhereUniqueInput
  connectOrCreate: VenueStatsCreateOrConnectWithoutVenueInput
  create: VenueStatsCreateWithoutVenueInput
}

input VenueStatsCreateOrConnectWithoutOutInput {
  create: VenueStatsCreateWithoutOutInput!
  where: VenueStatsWhereUniqueInput!
}

input VenueStatsCreateOrConnectWithoutVenueInput {
  create: VenueStatsCreateWithoutVenueInput!
  where: VenueStatsWhereUniqueInput!
}

input VenueStatsCreateWithoutOutInput {
  Venue: VenueCreateNestedOneWithoutVenueStatsInput
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input VenueStatsCreateWithoutVenueInput {
  Out: OutCreateNestedManyWithoutVenueStatsInput
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input VenueStatsMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input VenueStatsMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input VenueStatsNullableRelationFilter {
  is: VenueStatsWhereInput
  isNot: VenueStatsWhereInput
}

input VenueStatsOrderByWithAggregationInput {
  _count: VenueStatsCountOrderByAggregateInput
  _max: VenueStatsMaxOrderByAggregateInput
  _min: VenueStatsMinOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input VenueStatsOrderByWithRelationInput {
  Out: OutOrderByRelationAggregateInput
  Venue: VenueOrderByWithRelationInput
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input VenueStatsRelationFilter {
  is: VenueStatsWhereInput
  isNot: VenueStatsWhereInput
}

enum VenueStatsScalarFieldEnum {
  createdAt
  id
  updatedAt
}

input VenueStatsScalarWhereWithAggregatesInput {
  AND: [VenueStatsScalarWhereWithAggregatesInput!]
  NOT: [VenueStatsScalarWhereWithAggregatesInput!]
  OR: [VenueStatsScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input VenueStatsUpdateInput {
  Out: OutUpdateManyWithoutVenueStatsNestedInput
  Venue: VenueUpdateOneWithoutVenueStatsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VenueStatsUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VenueStatsUpdateOneRequiredWithoutVenueNestedInput {
  connect: VenueStatsWhereUniqueInput
  connectOrCreate: VenueStatsCreateOrConnectWithoutVenueInput
  create: VenueStatsCreateWithoutVenueInput
  update: VenueStatsUpdateToOneWithWhereWithoutVenueInput
  upsert: VenueStatsUpsertWithoutVenueInput
}

input VenueStatsUpdateOneWithoutOutNestedInput {
  connect: VenueStatsWhereUniqueInput
  connectOrCreate: VenueStatsCreateOrConnectWithoutOutInput
  create: VenueStatsCreateWithoutOutInput
  delete: VenueStatsWhereInput
  disconnect: VenueStatsWhereInput
  update: VenueStatsUpdateToOneWithWhereWithoutOutInput
  upsert: VenueStatsUpsertWithoutOutInput
}

input VenueStatsUpdateToOneWithWhereWithoutOutInput {
  data: VenueStatsUpdateWithoutOutInput!
  where: VenueStatsWhereInput
}

input VenueStatsUpdateToOneWithWhereWithoutVenueInput {
  data: VenueStatsUpdateWithoutVenueInput!
  where: VenueStatsWhereInput
}

input VenueStatsUpdateWithoutOutInput {
  Venue: VenueUpdateOneWithoutVenueStatsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VenueStatsUpdateWithoutVenueInput {
  Out: OutUpdateManyWithoutVenueStatsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VenueStatsUpsertWithoutOutInput {
  create: VenueStatsCreateWithoutOutInput!
  update: VenueStatsUpdateWithoutOutInput!
  where: VenueStatsWhereInput
}

input VenueStatsUpsertWithoutVenueInput {
  create: VenueStatsCreateWithoutVenueInput!
  update: VenueStatsUpdateWithoutVenueInput!
  where: VenueStatsWhereInput
}

input VenueStatsWhereInput {
  AND: [VenueStatsWhereInput!]
  NOT: [VenueStatsWhereInput!]
  OR: [VenueStatsWhereInput!]
  Out: OutListRelationFilter
  Venue: VenueWhereInput
  createdAt: DateTimeFilter
  id: StringFilter
  updatedAt: DateTimeFilter
}

input VenueStatsWhereUniqueInput {
  AND: [VenueStatsWhereInput!]
  NOT: [VenueStatsWhereInput!]
  OR: [VenueStatsWhereInput!]
  Out: OutListRelationFilter
  Venue: VenueWhereInput
  createdAt: DateTimeFilter
  id: String
  updatedAt: DateTimeFilter
}

union VenueTotalsResponseUnion = Error | LiveVenueTotals2

input VenueUpdateInput {
  LiveOutVenue: LiveOutVenueUpdateOneWithoutVenueNestedInput
  Location: LocationUpdateOneWithoutVenueNestedInput
  Profile: ProfileUpdateOneRequiredWithoutVenueNestedInput
  VenueStats: VenueStatsUpdateOneRequiredWithoutVenueNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VenueUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VenueUpdateOneRequiredWithoutLiveOutVenueNestedInput {
  connect: VenueWhereUniqueInput
  connectOrCreate: VenueCreateOrConnectWithoutLiveOutVenueInput
  create: VenueCreateWithoutLiveOutVenueInput
  update: VenueUpdateToOneWithWhereWithoutLiveOutVenueInput
  upsert: VenueUpsertWithoutLiveOutVenueInput
}

input VenueUpdateOneWithoutLocationNestedInput {
  connect: VenueWhereUniqueInput
  connectOrCreate: VenueCreateOrConnectWithoutLocationInput
  create: VenueCreateWithoutLocationInput
  delete: VenueWhereInput
  disconnect: VenueWhereInput
  update: VenueUpdateToOneWithWhereWithoutLocationInput
  upsert: VenueUpsertWithoutLocationInput
}

input VenueUpdateOneWithoutProfileNestedInput {
  connect: VenueWhereUniqueInput
  connectOrCreate: VenueCreateOrConnectWithoutProfileInput
  create: VenueCreateWithoutProfileInput
  delete: VenueWhereInput
  disconnect: VenueWhereInput
  update: VenueUpdateToOneWithWhereWithoutProfileInput
  upsert: VenueUpsertWithoutProfileInput
}

input VenueUpdateOneWithoutVenueStatsNestedInput {
  connect: VenueWhereUniqueInput
  connectOrCreate: VenueCreateOrConnectWithoutVenueStatsInput
  create: VenueCreateWithoutVenueStatsInput
  delete: VenueWhereInput
  disconnect: VenueWhereInput
  update: VenueUpdateToOneWithWhereWithoutVenueStatsInput
  upsert: VenueUpsertWithoutVenueStatsInput
}

input VenueUpdateToOneWithWhereWithoutLiveOutVenueInput {
  data: VenueUpdateWithoutLiveOutVenueInput!
  where: VenueWhereInput
}

input VenueUpdateToOneWithWhereWithoutLocationInput {
  data: VenueUpdateWithoutLocationInput!
  where: VenueWhereInput
}

input VenueUpdateToOneWithWhereWithoutProfileInput {
  data: VenueUpdateWithoutProfileInput!
  where: VenueWhereInput
}

input VenueUpdateToOneWithWhereWithoutVenueStatsInput {
  data: VenueUpdateWithoutVenueStatsInput!
  where: VenueWhereInput
}

input VenueUpdateWithoutLiveOutVenueInput {
  Location: LocationUpdateOneWithoutVenueNestedInput
  Profile: ProfileUpdateOneRequiredWithoutVenueNestedInput
  VenueStats: VenueStatsUpdateOneRequiredWithoutVenueNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VenueUpdateWithoutLocationInput {
  LiveOutVenue: LiveOutVenueUpdateOneWithoutVenueNestedInput
  Profile: ProfileUpdateOneRequiredWithoutVenueNestedInput
  VenueStats: VenueStatsUpdateOneRequiredWithoutVenueNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VenueUpdateWithoutProfileInput {
  LiveOutVenue: LiveOutVenueUpdateOneWithoutVenueNestedInput
  Location: LocationUpdateOneWithoutVenueNestedInput
  VenueStats: VenueStatsUpdateOneRequiredWithoutVenueNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VenueUpdateWithoutVenueStatsInput {
  LiveOutVenue: LiveOutVenueUpdateOneWithoutVenueNestedInput
  Location: LocationUpdateOneWithoutVenueNestedInput
  Profile: ProfileUpdateOneRequiredWithoutVenueNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VenueUpsertWithoutLiveOutVenueInput {
  create: VenueCreateWithoutLiveOutVenueInput!
  update: VenueUpdateWithoutLiveOutVenueInput!
  where: VenueWhereInput
}

input VenueUpsertWithoutLocationInput {
  create: VenueCreateWithoutLocationInput!
  update: VenueUpdateWithoutLocationInput!
  where: VenueWhereInput
}

input VenueUpsertWithoutProfileInput {
  create: VenueCreateWithoutProfileInput!
  update: VenueUpdateWithoutProfileInput!
  where: VenueWhereInput
}

input VenueUpsertWithoutVenueStatsInput {
  create: VenueCreateWithoutVenueStatsInput!
  update: VenueUpdateWithoutVenueStatsInput!
  where: VenueWhereInput
}

input VenueWhereInput {
  AND: [VenueWhereInput!]
  LiveOutVenue: LiveOutVenueWhereInput
  Location: LocationWhereInput
  NOT: [VenueWhereInput!]
  OR: [VenueWhereInput!]
  Profile: ProfileWhereInput
  VenueStats: VenueStatsWhereInput
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringNullableFilter
  profileId: StringFilter
  updatedAt: DateTimeFilter
  venueStatsId: StringFilter
}

input VenueWhereUniqueInput {
  AND: [VenueWhereInput!]
  LiveOutVenue: LiveOutVenueWhereInput
  Location: LocationWhereInput
  NOT: [VenueWhereInput!]
  OR: [VenueWhereInput!]
  Profile: ProfileWhereInput
  VenueStats: VenueStatsWhereInput
  createdAt: DateTimeFilter
  id: String
  name: StringNullableFilter
  profileId: String
  updatedAt: DateTimeFilter
  venueStatsId: String
}

type VenuesNearbyResponse {
  recommendedAreas: [H3Index6VenueRecommendation!]
  searchArea: Area
  venuesNearby: [ProfileVenue!]
}

type Vote {
  ComingArea: ComingArea
  H3Index5VenueRecommendation: H3Index5VenueRecommendation
  H3Index6VenueRecommendation: H3Index6VenueRecommendation
  Profile: Profile!
  comingAreaId: String
  createdAt: DateTime!
  h3Index5VenueRecommendationId: String
  h3Index6VenueRecommendationId: String
  id: ID!
  profileId: String!
  updatedAt: DateTime!
  upvote: Boolean!
}

input VoteCountOrderByAggregateInput {
  comingAreaId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  upvote: SortOrder
}

input VoteCreateInput {
  ComingArea: ComingAreaCreateNestedOneWithoutVoteInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutVoteInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutVoteInput
  Profile: ProfileCreateNestedOneWithoutVoteInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  upvote: Boolean!
}

input VoteCreateManyComingAreaInput {
  createdAt: DateTime
  h3Index5VenueRecommendationId: String
  h3Index6VenueRecommendationId: String
  id: String
  profileId: String!
  updatedAt: DateTime
  upvote: Boolean!
}

input VoteCreateManyComingAreaInputEnvelope {
  data: [VoteCreateManyComingAreaInput!]!
  skipDuplicates: Boolean
}

input VoteCreateManyH3Index5VenueRecommendationInput {
  comingAreaId: String
  createdAt: DateTime
  h3Index6VenueRecommendationId: String
  id: String
  profileId: String!
  updatedAt: DateTime
  upvote: Boolean!
}

input VoteCreateManyH3Index5VenueRecommendationInputEnvelope {
  data: [VoteCreateManyH3Index5VenueRecommendationInput!]!
  skipDuplicates: Boolean
}

input VoteCreateManyH3Index6VenueRecommendationInput {
  comingAreaId: String
  createdAt: DateTime
  h3Index5VenueRecommendationId: String
  id: String
  profileId: String!
  updatedAt: DateTime
  upvote: Boolean!
}

input VoteCreateManyH3Index6VenueRecommendationInputEnvelope {
  data: [VoteCreateManyH3Index6VenueRecommendationInput!]!
  skipDuplicates: Boolean
}

input VoteCreateManyInput {
  comingAreaId: String
  createdAt: DateTime
  h3Index5VenueRecommendationId: String
  h3Index6VenueRecommendationId: String
  id: String
  profileId: String!
  updatedAt: DateTime
  upvote: Boolean!
}

input VoteCreateManyProfileInput {
  comingAreaId: String
  createdAt: DateTime
  h3Index5VenueRecommendationId: String
  h3Index6VenueRecommendationId: String
  id: String
  updatedAt: DateTime
  upvote: Boolean!
}

input VoteCreateManyProfileInputEnvelope {
  data: [VoteCreateManyProfileInput!]!
  skipDuplicates: Boolean
}

input VoteCreateNestedManyWithoutComingAreaInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutComingAreaInput!]
  create: [VoteCreateWithoutComingAreaInput!]
  createMany: VoteCreateManyComingAreaInputEnvelope
}

input VoteCreateNestedManyWithoutH3Index5VenueRecommendationInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutH3Index5VenueRecommendationInput!]
  create: [VoteCreateWithoutH3Index5VenueRecommendationInput!]
  createMany: VoteCreateManyH3Index5VenueRecommendationInputEnvelope
}

input VoteCreateNestedManyWithoutH3Index6VenueRecommendationInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutH3Index6VenueRecommendationInput!]
  create: [VoteCreateWithoutH3Index6VenueRecommendationInput!]
  createMany: VoteCreateManyH3Index6VenueRecommendationInputEnvelope
}

input VoteCreateNestedManyWithoutProfileInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutProfileInput!]
  create: [VoteCreateWithoutProfileInput!]
  createMany: VoteCreateManyProfileInputEnvelope
}

input VoteCreateOrConnectWithoutComingAreaInput {
  create: VoteCreateWithoutComingAreaInput!
  where: VoteWhereUniqueInput!
}

input VoteCreateOrConnectWithoutH3Index5VenueRecommendationInput {
  create: VoteCreateWithoutH3Index5VenueRecommendationInput!
  where: VoteWhereUniqueInput!
}

input VoteCreateOrConnectWithoutH3Index6VenueRecommendationInput {
  create: VoteCreateWithoutH3Index6VenueRecommendationInput!
  where: VoteWhereUniqueInput!
}

input VoteCreateOrConnectWithoutProfileInput {
  create: VoteCreateWithoutProfileInput!
  where: VoteWhereUniqueInput!
}

input VoteCreateWithoutComingAreaInput {
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutVoteInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutVoteInput
  Profile: ProfileCreateNestedOneWithoutVoteInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  upvote: Boolean!
}

input VoteCreateWithoutH3Index5VenueRecommendationInput {
  ComingArea: ComingAreaCreateNestedOneWithoutVoteInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutVoteInput
  Profile: ProfileCreateNestedOneWithoutVoteInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  upvote: Boolean!
}

input VoteCreateWithoutH3Index6VenueRecommendationInput {
  ComingArea: ComingAreaCreateNestedOneWithoutVoteInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutVoteInput
  Profile: ProfileCreateNestedOneWithoutVoteInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  upvote: Boolean!
}

input VoteCreateWithoutProfileInput {
  ComingArea: ComingAreaCreateNestedOneWithoutVoteInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationCreateNestedOneWithoutVoteInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationCreateNestedOneWithoutVoteInput
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  upvote: Boolean!
}

input VoteListRelationFilter {
  every: VoteWhereInput
  none: VoteWhereInput
  some: VoteWhereInput
}

input VoteMaxOrderByAggregateInput {
  comingAreaId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  upvote: SortOrder
}

input VoteMinOrderByAggregateInput {
  comingAreaId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  upvote: SortOrder
}

input VoteOrderByRelationAggregateInput {
  _count: SortOrder
}

input VoteOrderByWithAggregationInput {
  _count: VoteCountOrderByAggregateInput
  _max: VoteMaxOrderByAggregateInput
  _min: VoteMinOrderByAggregateInput
  comingAreaId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  upvote: SortOrder
}

input VoteOrderByWithRelationInput {
  ComingArea: ComingAreaOrderByWithRelationInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationOrderByWithRelationInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationOrderByWithRelationInput
  Profile: ProfileOrderByWithRelationInput
  comingAreaId: SortOrder
  createdAt: SortOrder
  h3Index5VenueRecommendationId: SortOrder
  h3Index6VenueRecommendationId: SortOrder
  id: SortOrder
  profileId: SortOrder
  updatedAt: SortOrder
  upvote: SortOrder
}

enum VoteScalarFieldEnum {
  comingAreaId
  createdAt
  h3Index5VenueRecommendationId
  h3Index6VenueRecommendationId
  id
  profileId
  updatedAt
  upvote
}

input VoteScalarWhereInput {
  AND: [VoteScalarWhereInput!]
  NOT: [VoteScalarWhereInput!]
  OR: [VoteScalarWhereInput!]
  comingAreaId: StringNullableFilter
  createdAt: DateTimeFilter
  h3Index5VenueRecommendationId: StringNullableFilter
  h3Index6VenueRecommendationId: StringNullableFilter
  id: StringFilter
  profileId: StringFilter
  updatedAt: DateTimeFilter
  upvote: BoolFilter
}

input VoteScalarWhereWithAggregatesInput {
  AND: [VoteScalarWhereWithAggregatesInput!]
  NOT: [VoteScalarWhereWithAggregatesInput!]
  OR: [VoteScalarWhereWithAggregatesInput!]
  comingAreaId: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  h3Index5VenueRecommendationId: StringNullableWithAggregatesFilter
  h3Index6VenueRecommendationId: StringNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  profileId: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  upvote: BoolWithAggregatesFilter
}

input VoteUpdateInput {
  ComingArea: ComingAreaUpdateOneWithoutVoteNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutVoteNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutVoteNestedInput
  Profile: ProfileUpdateOneRequiredWithoutVoteNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  upvote: BoolFieldUpdateOperationsInput
}

input VoteUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  upvote: BoolFieldUpdateOperationsInput
}

input VoteUpdateManyWithWhereWithoutComingAreaInput {
  data: VoteUpdateManyMutationInput!
  where: VoteScalarWhereInput!
}

input VoteUpdateManyWithWhereWithoutH3Index5VenueRecommendationInput {
  data: VoteUpdateManyMutationInput!
  where: VoteScalarWhereInput!
}

input VoteUpdateManyWithWhereWithoutH3Index6VenueRecommendationInput {
  data: VoteUpdateManyMutationInput!
  where: VoteScalarWhereInput!
}

input VoteUpdateManyWithWhereWithoutProfileInput {
  data: VoteUpdateManyMutationInput!
  where: VoteScalarWhereInput!
}

input VoteUpdateManyWithoutComingAreaNestedInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutComingAreaInput!]
  create: [VoteCreateWithoutComingAreaInput!]
  createMany: VoteCreateManyComingAreaInputEnvelope
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutComingAreaInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutComingAreaInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutComingAreaInput!]
}

input VoteUpdateManyWithoutH3Index5VenueRecommendationNestedInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutH3Index5VenueRecommendationInput!]
  create: [VoteCreateWithoutH3Index5VenueRecommendationInput!]
  createMany: VoteCreateManyH3Index5VenueRecommendationInputEnvelope
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutH3Index5VenueRecommendationInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutH3Index5VenueRecommendationInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutH3Index5VenueRecommendationInput!]
}

input VoteUpdateManyWithoutH3Index6VenueRecommendationNestedInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutH3Index6VenueRecommendationInput!]
  create: [VoteCreateWithoutH3Index6VenueRecommendationInput!]
  createMany: VoteCreateManyH3Index6VenueRecommendationInputEnvelope
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutH3Index6VenueRecommendationInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutH3Index6VenueRecommendationInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutH3Index6VenueRecommendationInput!]
}

input VoteUpdateManyWithoutProfileNestedInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutProfileInput!]
  create: [VoteCreateWithoutProfileInput!]
  createMany: VoteCreateManyProfileInputEnvelope
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutProfileInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutProfileInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutProfileInput!]
}

input VoteUpdateWithWhereUniqueWithoutComingAreaInput {
  data: VoteUpdateWithoutComingAreaInput!
  where: VoteWhereUniqueInput!
}

input VoteUpdateWithWhereUniqueWithoutH3Index5VenueRecommendationInput {
  data: VoteUpdateWithoutH3Index5VenueRecommendationInput!
  where: VoteWhereUniqueInput!
}

input VoteUpdateWithWhereUniqueWithoutH3Index6VenueRecommendationInput {
  data: VoteUpdateWithoutH3Index6VenueRecommendationInput!
  where: VoteWhereUniqueInput!
}

input VoteUpdateWithWhereUniqueWithoutProfileInput {
  data: VoteUpdateWithoutProfileInput!
  where: VoteWhereUniqueInput!
}

input VoteUpdateWithoutComingAreaInput {
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutVoteNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutVoteNestedInput
  Profile: ProfileUpdateOneRequiredWithoutVoteNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  upvote: BoolFieldUpdateOperationsInput
}

input VoteUpdateWithoutH3Index5VenueRecommendationInput {
  ComingArea: ComingAreaUpdateOneWithoutVoteNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutVoteNestedInput
  Profile: ProfileUpdateOneRequiredWithoutVoteNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  upvote: BoolFieldUpdateOperationsInput
}

input VoteUpdateWithoutH3Index6VenueRecommendationInput {
  ComingArea: ComingAreaUpdateOneWithoutVoteNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutVoteNestedInput
  Profile: ProfileUpdateOneRequiredWithoutVoteNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  upvote: BoolFieldUpdateOperationsInput
}

input VoteUpdateWithoutProfileInput {
  ComingArea: ComingAreaUpdateOneWithoutVoteNestedInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationUpdateOneWithoutVoteNestedInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationUpdateOneWithoutVoteNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  upvote: BoolFieldUpdateOperationsInput
}

input VoteUpsertWithWhereUniqueWithoutComingAreaInput {
  create: VoteCreateWithoutComingAreaInput!
  update: VoteUpdateWithoutComingAreaInput!
  where: VoteWhereUniqueInput!
}

input VoteUpsertWithWhereUniqueWithoutH3Index5VenueRecommendationInput {
  create: VoteCreateWithoutH3Index5VenueRecommendationInput!
  update: VoteUpdateWithoutH3Index5VenueRecommendationInput!
  where: VoteWhereUniqueInput!
}

input VoteUpsertWithWhereUniqueWithoutH3Index6VenueRecommendationInput {
  create: VoteCreateWithoutH3Index6VenueRecommendationInput!
  update: VoteUpdateWithoutH3Index6VenueRecommendationInput!
  where: VoteWhereUniqueInput!
}

input VoteUpsertWithWhereUniqueWithoutProfileInput {
  create: VoteCreateWithoutProfileInput!
  update: VoteUpdateWithoutProfileInput!
  where: VoteWhereUniqueInput!
}

input VoteWhereInput {
  AND: [VoteWhereInput!]
  ComingArea: ComingAreaWhereInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationWhereInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationWhereInput
  NOT: [VoteWhereInput!]
  OR: [VoteWhereInput!]
  Profile: ProfileWhereInput
  comingAreaId: StringNullableFilter
  createdAt: DateTimeFilter
  h3Index5VenueRecommendationId: StringNullableFilter
  h3Index6VenueRecommendationId: StringNullableFilter
  id: StringFilter
  profileId: StringFilter
  updatedAt: DateTimeFilter
  upvote: BoolFilter
}

input VoteWhereUniqueInput {
  AND: [VoteWhereInput!]
  ComingArea: ComingAreaWhereInput
  H3Index5VenueRecommendation: H3Index5VenueRecommendationWhereInput
  H3Index6VenueRecommendation: H3Index6VenueRecommendationWhereInput
  NOT: [VoteWhereInput!]
  OR: [VoteWhereInput!]
  Profile: ProfileWhereInput
  comingAreaId: StringNullableFilter
  createdAt: DateTimeFilter
  h3Index5VenueRecommendationId: StringNullableFilter
  h3Index6VenueRecommendationId: StringNullableFilter
  id: String
  profileId: StringFilter
  updatedAt: DateTimeFilter
  upvote: BoolFilter
}